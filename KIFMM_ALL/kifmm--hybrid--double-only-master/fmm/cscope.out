cscope 15 $HOME/FMM_RPY_BROWNIAN/KIFMM_ALL/kifmm--hybrid--double-only-master/fmm               0000517149
	@driver.cc

1 
	~<as£π.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<sys/time.h
>

6 
	~"timög.h
"

7 
	~"node.h
"

8 
	~"ªÆs.h
"

9 
	~"ªÆs_Æig√d.h
"

10 
	~"evÆu©e.h
"

11 
	~"utû.h
"

12 
	~"å™s.h
"

13 
	~"öput.h
"

15 #ifde‡
_OPENMP


16 
	~<omp.h
>

21 
	$ußge__
 (c⁄° * 
u£
)

23 
	`Ârötf
 (
°dîr
, "ußge: %†<N> <di°ributi⁄> <±s/box> \n", 
u£
);

24 
	}
}

29 (*
kî√l
)(
¢
, 
ä
, 
ªÆ_t
* 
x1
,Ñól_t* 
x2
,Ñól_t* 
x3
,

30 
ªÆ_t
* 
y1
,Ñól_t* 
y2
,Ñól_t* 
y3
,

31 
ªÆ_t
* 
m©
,Ñól_t* 
ødii
,Ñól_à*
f‹˚_Ve˘‹
);

34 
	$gë_£c⁄ds
 () {

35 
timevÆ
 
tv
;

36 
t
;

37 
	`gëtimeofday
(&
tv
, 
NULL
);

38 
t
 = ()
tv
.
tv_£c
 +

39 (()
tv
.
tv_u£c
)/()1000000.0;

40  
t
;

41 
	}
}

51 
	$e°im©e_Ê›s_U__
 (
AŒNodes
 *
AŒ_N
)

53 
	`as£π
 (
AŒ_N
);

54 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

55 
Node
 *
Nt
 = 
AŒ_N
->Nt;

56 
Node
 *
Ns
 = 
AŒ_N
->Ns;

58 
Ê›_cou¡
 = 0.0;

59 
tgt_box_id
;

61 
tgt_box_id
 = 0;Ågt_box_id < 
nodeVec
.
	`size
(); ++tgt_box_id) {

62 
k
;

63 
k
 = 0; k < 
nodeVec
[
tgt_box_id
].
Unodes
.
	`size
(); ++k) {

64 
§c_box_id
 = 
nodeVec
[
tgt_box_id
].
Unodes
[
k
];

65 
Ê›_cou¡
 +11.0 * 
Nt
[
tgt_box_id
].
num_±s
 * 
Ns
[
§c_box_id
].num_pts;

68  
Ê›_cou¡
;

69 
	}
}

77 
	$e°im©e_Ê›s_V__
 (
AŒNodes
 *
AŒ_N
)

79 
	`as£π
 (
AŒ_N
);

80 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

81 
åg_nodes
 = 
nodeVec
.
	`size
();

82 
size
 = 
	`eff_d©a_size
 (
UE
);

84 
Ê›_cou¡
 = 0.0;

85 
tgt_box_id
;

86 
tgt_box_id
 = 0;Ågt_box_id < 
åg_nodes
; ++tgt_box_id) {

87 
Ê›_cou¡
 +4.0 * 
size
 * 
nodeVec
[
tgt_box_id
].
Vnodes
.
	`size
();

89  
Ê›_cou¡
;

90 
	}
}

99 
	$e°im©e_byãs_U__
 (
AŒNodes
 *
AŒ_N
)

101 
	`as£π
 (
AŒ_N
);

102 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

103 
Node
 *
Nt
 = 
AŒ_N
->Nt;

104 
Node
 *
Ns
 = 
AŒ_N
->Ns;

106 
byã_cou¡
 = 0.0;

107 
tgt_box_id
;

109 
tgt_box_id
 = 0;Ågt_box_id < 
nodeVec
.
	`size
(); ++tgt_box_id) {

110 
k
;

111 
byã_cou¡
 +4.0 *  (
ªÆ_t
Ë* 
Nt
[
tgt_box_id
].
num_±s
;

112 
k
 = 0; k < 
nodeVec
[
tgt_box_id
].
Unodes
.
	`size
(); ++k) {

113 
§c_box_id
 = 
nodeVec
[
tgt_box_id
].
Unodes
[
k
];

114 
byã_cou¡
 +4.0 *  (
ªÆ_t
Ë* 
Ns
[
§c_box_id
].
num_±s
;

117  
byã_cou¡
;

118 
	}
}

127 
	$e°im©e_byãs_V__
 (
AŒNodes
 *
AŒ_N
)

129 
	`as£π
 (
AŒ_N
);

130 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

131 
åg_nodes
 = 
nodeVec
.
	`size
();

132 
size
 = 
	`eff_d©a_size
 (
UE
);

134 
byã_cou¡
 = 0.0;

135 
tgt_box_id
;

136 
tgt_box_id
 = 0;Ågt_box_id < 
åg_nodes
; ++tgt_box_id) {

137 
byã_cou¡
 + (
ªÆ_t
Ë* 
size
;

138 
byã_cou¡
 +2.0 *  (
ªÆ_t
Ë* 
size
 * 
nodeVec
[
tgt_box_id
].
Vnodes
.
	`size
();

140  
byã_cou¡
;

141 
	}
}

147 
	$vÆid©e
 (
num_åg
, 
num_§c
, 
num_chk
, 
AŒNodes
 *
AŒ_N
, 
ªÆ_t
 &
ªº
)

149 
ågDOF
 = 1;

150 
§cDOF
 = 1;

153 
chk_id
 [
num_chk
];

154 
k
 = 0; k < 
num_chk
; k++) {

155 
chk_id
[
k
] = –
	`Êo‹
(
	`dønd48
()*
num_åg
) );

156 
	`as£π
 (
chk_id
[
k
]>=0 && chk_id[k]<
num_åg
);

158 
ªÆ_t
* 
chkPosX
 = 
	`ªÆs_Æloc__Æig√d
 (
num_chk
);

159 
ªÆ_t
* 
chkPosY
 = 
	`ªÆs_Æloc__Æig√d
 (
num_chk
);

160 
ªÆ_t
* 
chkPosZ
 = 
	`ªÆs_Æloc__Æig√d
 (
num_chk
);

161 
ªÆ_t
* 
chkVÆ
 = 
	`ªÆs_Æloc__Æig√d
 (
num_chk
 * 
ågDOF
);

162 
ªÆ_t
* 
chkPŸ
 = 
	`ªÆs_Æloc__Æig√d
 (
num_chk
 * 
ågDOF
);

163 
k
 = 0; k < 
num_chk
; k++) {

164 
chkPosX
[
k
] = 
AŒ_N
->
tx_‹ig
[
chk_id
[k]];

165 
chkPosY
[
k
] = 
AŒ_N
->
ty_‹ig
[
chk_id
[k]];

166 
chkPosZ
[
k
] = 
AŒ_N
->
tz_‹ig
[
chk_id
[k]];

167 
i
 = 0; i < 
ågDOF
; i++)

168 
chkVÆ
[
k
*
ågDOF
+
i
] = 
AŒ_N
->
pŸ_‹ig
[
chk_id
[k]*trgDOF+i];

172 
Node
* 
§c
;

173 
§c
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

174 
§c
->
x
 = 
AŒ_N
->
sx_‹ig
;

175 
§c
->
y
 = 
AŒ_N
->
sy_‹ig
;

176 
§c
->
z
 = 
AŒ_N
->
sz_‹ig
;

177 
§c
->
dí_pŸ
 = 
AŒ_N
->
dí_‹ig
;

178 
§c
->
num_±s
 = 
num_§c
;

180 
ªÆ_t
* 
öãr
 = 
	`ªÆs_Æloc__Æig√d
 (
ågDOF
 * 
num_§c
 * 
§cDOF
);

182 
i
 = 0; i < 
num_chk
; i++) {

183 
Node
* 
chk_pos
;

184 
chk_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

185 
chk_pos
->
x
 = &
chkPosX
[
i
];

186 
chk_pos
->
y
 = &
chkPosY
[
i
];

187 
chk_pos
->
z
 = &
chkPosZ
[
i
];

188 
chk_pos
->
dí_pŸ
 = &
chkPŸ
[
i
];

189 
chk_pos
->
num_±s
 = 
ågDOF
;

190 
	`uli°__dúe˘_evÆu©i⁄
(*
chk_pos
, *
§c
);

194 
k
 = 0; k < 
num_chk
; k++)

195 
i
 = 0; i < 
ågDOF
; i++)

196 
chkPŸ
[
k
*
ågDOF
+
i
] -
chkVÆ
[k*trgDOF+i];

198 
ªÆ_t
 
vn
 = 0;

199 
ªÆ_t
 
í
 = 0;

200 
k
 = 0; k < 
num_chk
; k++)

201 
i
 = 0; i < 
ågDOF
; i++) {

202 
vn
 +
chkVÆ
[
k
*
ågDOF
+
i
] * chkVal[k*trgDOF+i];

203 
í
 +
chkPŸ
[
k
*
ågDOF
+
i
] * chkPot[k*trgDOF+i];

205 
vn
 = 
	`sqπ
(vn);

206 
í
 = 
	`sqπ
(en);

208 
ªº
 = 
í
/
vn
;

211 
	}
}

216 
	$maö
 (
¨gc
, * 
¨gv
[])

218 * 
di°ributi⁄
;

219 
i
;

220 
num_±s
;

221 
num_chk
;

222 
±s_max
;

223 
§c_node_cou¡
, 
åg_node_cou¡
;

224 
ªÆ_t
 
ªº
;

226 
kî√l
 = &
mykî√l
;

229 
ve˘‹
<
NodeTªe
> 
nodeVec
;

230 
ve˘‹
<> 
nodeLevñ
;

231 
AŒNodes
* 
AŒ_N
;

233 
Node
 *
Ns
, *
Nt
;

234 
FMMWøµî_t
* 
F
;

237 
°›w©ch_t
* 
timî
 = 
NULL
;

238 
t_wu
, 
t_wv
;

239 
num_Ê›s_U
, 
num_Ê›s_V
;

240 
num_byãs_U
, 
num_byãs_V
;

242 i‡(
¨gc
 != 4) {

243 
	`ußge__
 (
¨gv
[0]);

248 
num_±s
 = 
	`©oi
 (
¨gv
[1]);

249 
di°ributi⁄
 = 
¨gv
[2];

250 
±s_max
 = 
	`©oi
 (
¨gv
[3]);

252 
	`§™d48
(26);

255 
AŒ_N
 = (
AŒNodes
 *Ë
	`mÆloc
 ( (AllNodes));

256 
	`as£π
 (
AŒ_N
 !
NULL
);

258 
AŒ_N
->
tx_‹ig
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

259 
AŒ_N
->
ty_‹ig
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

260 
AŒ_N
->
tz_‹ig
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

261 
AŒ_N
->
pŸ_‹ig
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

263 
AŒ_N
->
sx_‹ig
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

264 
AŒ_N
->
sy_‹ig
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

265 
AŒ_N
->
sz_‹ig
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

266 
AŒ_N
->
dí_‹ig
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

268 
AŒ_N
->
N
 = &
nodeVec
;

269 
AŒ_N
->
nodeLevñ
 = &nodeLevel;

272 
	`¸óã
 (
num_±s
, 
di°ributi⁄
, 
AŒ_N
);

274 
i
 = 0; i < 
num_±s
; i++)

275 
AŒ_N
->
dí_‹ig
[
i
] = 
	`dønd48
();

278 
	`§c_åì
 (
num_±s
, 
±s_max
, 
AŒ_N
);

281 
	`åg_åì
 (
num_±s
, 
AŒ_N
);

286 
	`°›w©ch_öô
 ();

287 
timî
 = 
	`°›w©ch_¸óã
 ();

289 
	`Ârötf
 (
°dîr
, "Allocating memory forÑe-arranged sourceándÅargetÖoints...\n");

290 
AŒ_N
->
tx
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

291 
AŒ_N
->
ty
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

292 
AŒ_N
->
tz
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

293 
AŒ_N
->
pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

295 
AŒ_N
->
sx
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

296 
AŒ_N
->
sy
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

297 
AŒ_N
->
sz
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

298 
AŒ_N
->
dí
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
num_±s
);

300 
Ns
 = (
Node
 *Ë
	`_mm_mÆloc
(
nodeVec
.
	`size
(Ë* (Node), 
IDEAL_ALIGNMENT
);

301 
Nt
 = (
Node
 *Ë
	`_mm_mÆloc
(
nodeVec
.
	`size
(Ë* (Node), 
IDEAL_ALIGNMENT
);

303 
AŒ_N
->
Ns
 = Ns;

304 
AŒ_N
->
Nt
 = Nt;

306 
	`Ârötf
 (
°dîr
, "Performing initialization...\n");

307 
	`gë_öput
 (
AŒ_N
);

310 
	`Ârötf
 (
°dîr
, "Setup forÅranslations....\n");

311 
Pos
 *
SP
;

312 
SP
 = (
Pos
*Ë
	`mÆloc
 ((Pos) * 4);

314 
Pos
 *
RP
;

315 
RP
 = (
Pos
*Ë
	`mÆloc
 ((Pos));

317 
	`å™s_£tup
 (
SP
, 
RP
);

318 
AŒ_N
->
SP
 = SP;

319 
AŒ_N
->
RP
 = RP;

321 
Tøns_m©rix
 *
TM
;

322 
TM
 = (
Tøns_m©rix
*Ë
	`mÆloc
 ((Trans_matrix));

323 
AŒ_N
->
TM
 = TM;

325 
	`Ârötf
 (
°dîr
, "Allocating memory forÅranslations...\n");

326 
AŒ_N
->
§c_upw_equ_dí
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
nodeVec
.
	`size
(Ë* 
	`∂n_size
(
UE
, AŒ_N->
SP
));

327 
AŒ_N
->
eff_dí
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
nodeVec
.
	`size
(Ë* 
	`eff_d©a_size
(
UE
));

328 
AŒ_N
->
åg_dwn_equ_dí
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
nodeVec
.
	`size
(Ë* 
	`∂n_size
(
DE
, AŒ_N->
SP
));

329 
AŒ_N
->
åg_dwn_chk_vÆ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
nodeVec
.
	`size
(Ë* 
	`∂n_size
(
DC
, AŒ_N->
SP
));

330 
AŒ_N
->
eff_vÆ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
nodeVec
.
	`size
(Ë* 
	`eff_d©a_size
(
DC
));

333 
	`Ârötf
 (
°dîr
, "Performing U-list workÜoad divisionámongÅheÅhreads...\n");

334 
	`w‹k_divisi⁄_U
 (
AŒ_N
);

336 
	`Ârötf
 (
°dîr
, "Performing V-list workÜoad divisionámongÅheÅhreads...\n");

337 
	`w‹k_divisi⁄_V
 (
AŒ_N
);

339 
	`Ârötf
 (
°dîr
, "Preprocessing...\n");

340 
F
 = 
	`¥ïroc
 (
AŒ_N
);

342 
	`Ârötf
(
°dîr
, "Finished setup.\n");

344 
	`Ârötf
 (
°dîr
, "Evaluation...\n");

345 
	`run
 (
F
);

348 
num_chk
 = 
	`gëív__vÆid©e
();

349 
	`vÆid©e
 (
num_±s
,Çum_±s, 
num_chk
, 
AŒ_N
, 
ªº
);

351 
num_Ê›s_U
 = 
	`e°im©e_Ê›s_U__
 (
AŒ_N
);

352 
num_Ê›s_V
 = 
	`e°im©e_Ê›s_V__
 (
AŒ_N
);

354 
num_byãs_U
 = 
	`e°im©e_byãs_U__
 (
AŒ_N
);

355 
num_byãs_V
 = 
	`e°im©e_byãs_V__
 (
AŒ_N
);

358 
	`Ârötf
 (
°dout
, "Inputs: %d | %s | %d \n",

359 
num_±s
,

360 
di°ributi⁄
,

361 
±s_max
);

362 
	`Ârötf
 (
°dout
, "EstimatedÇo. of flops (Ulist): %Lg\n",

363 
num_Ê›s_U
);

364 
	`Ârötf
 (
°dout
, "EstimatedÇo. of flops (Vlist): %Lg\n",

365 
num_Ê›s_V
);

366 
	`Ârötf
 (
°dout
, "Lower-bound on maximum memoryÅraffic (Ulist): %Lg GB\n",

367 1e-9 * 
num_byãs_U
);

368 
	`Ârötf
 (
°dout
, "Lower-bound on maximum memoryÅraffic (Vlist): %Lg GB\n",

369 1e-9 * 
num_byãs_V
);

372 
	`Ârötf
 (
°dout
, "Lower-bound onáverage intensity (Ulist): %.2Lf flops / byte\n",

373 
num_Ê›s_U
 / 
num_byãs_U
);

374 
	`Ârötf
 (
°dout
, "Lower-bound onáverage intensity (Vlist): %.2Lf flops / byte\n",

375 
num_Ê›s_V
 / 
num_byãs_V
);

376 
	`Ârötf
 (
°dîr
, "Rñ©ivêîr‹: %e\n", 
ªº
);

378 
	`°›w©ch_de°roy
 (
timî
);

381 
	}
}

	@evaluate--basic.cc

1 
	~<as£π.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°döt.h
>

5 
	~<m©h.h
>

6 
	~<omp.h
>

8 
	~"node.h
"

9 
	~"evÆu©e.h
"

10 
	~"evÆu©e--basic.h
"

11 
	~"ªÆs_Æig√d.h
"

12 
	~"utû.h
"

13 
	~"timög.h
"

18 
FMMWøµî_t
 *

19 
	$¥ïroc
 (
AŒNodes
 *
AŒ_N
)

21 
FMMWøµî_t
* 
W
 = (FMMWøµî_à*Ë
	`mÆloc
( (FMMWrapper_t));

22 
	`as£π
 (
W
);

23 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

25 
W
->
AN
 = 
AŒ_N
;

26  
W
;

27 
	}
}

31 
	$run
 (
FMMWøµî_t
 *
F
)

33 
°›w©ch_t
* 
timî
 = 
NULL
;

34 
t_up
, 
t_u
, 
t_v
, 
t_w
, 
t_x
, 
t_down
, 
t_tŸÆ
;

35 
timî
 = 
	`°›w©ch_¸óã
 ();

37 
	`°›w©ch_°¨t
 (
timî
);

38 
	`Ârötf
 (
°dîr
, "Performing Up calculation ...\n");

39 
	`°›w©ch_°¨t
 (
timî
);

40 
	`up_ˇlc__˝u
 (
F
);

41 
t_up
 = 
	`°›w©ch_ñ≠£d
 (
timî
);

42 
	`Ârötf
 (
°dîr
, "Done Up.\n");

44 
	`Ârötf
 (
°dîr
, "Performing U-list calculation (directÉvaluation)...\n");

45 
	`uli°_ˇlc__˝u
 (
F
);

46 
t_u
 = 
	`°›w©ch_ñ≠£d
 (
timî
);

47 
	`Ârötf
 (
°dîr
, "Done Ulist.\n");

49 
	`Ârötf
 (
°dîr
, "Performing V-list calculation (pointwise multiply)...\n");

50 
	`vli°_ˇlc__˝u
 (
F
);

51 
t_v
 = 
	`°›w©ch_ñ≠£d
 (
timî
);

52 
	`Ârötf
 (
°dîr
, "Done Vlist.\n ");

54 
	`Ârötf
 (
°dîr
, "Performing W-list calculation...\n");

55 
	`wli°_ˇlc__˝u
 (
F
);

56 
t_w
 = 
	`°›w©ch_ñ≠£d
 (
timî
);

57 
	`Ârötf
 (
°dîr
, "Done Wlist.\n ");

59 
	`Ârötf
 (
°dîr
, "Performing X-list calculation...\n");

60 
	`xli°_ˇlc__˝u
 (
F
);

61 
t_x
 = 
	`°›w©ch_ñ≠£d
 (
timî
);

62 
	`Ârötf
 (
°dîr
, "Done Xlist.\n ");

64 
	`Ârötf
 (
°dîr
, "Performing Down calculation ...\n");

65 
	`down_ˇlc__˝u
 (
F
);

66 
t_down
 = 
	`°›w©ch_ñ≠£d
 (
timî
);

67 
	`Ârötf
 (
°dîr
, "Done Down.\n");

69 
	`c›y_åg_vÆ__˝u
 (
F
);

70 
t_tŸÆ
 = 
	`°›w©ch_°›
 (
timî
);

72 
	`Ârötf
(
°dîr
, "=== Statistics ===\n");

73 
	`Ârötf
 (
°dout
, "Code: %s\n", 
	`gë_im∂emíèti⁄_«me
 ());

74 
	`Ârötf
 (
°dout
, "Flﬂtög-poöàw‹d size: %lu byãs\n",  (
ªÆ_t
));

75 
	`Ârötf
 (
°dîr
, "== Timing for FMM3d ==\n");

76 
	`Ârötf
 (
°dîr
, " U∞ : %Lg sec†(%.1Lf%%)\n", 
t_up
,Å_u∞/ 
t_tŸÆ
 * 100);

77 
	`Ârötf
 (
°dîr
, " UÜi°: %Lg sec†(%.1Lf%%)\n", (
t_u
 - 
t_up
), (t_u -Å_upË/ 
t_tŸÆ
 * 100);

78 
	`Ârötf
 (
°dîr
, " VÜi°: %Lg sec†(%.1Lf%%)\n", (
t_v
 - 
t_u
), (t_v -Å_uË/ 
t_tŸÆ
 * 100);

79 
	`Ârötf
 (
°dîr
, " WÜi°: %Lg sec†(%.1Lf%%)\n", (
t_w
 - 
t_v
), (t_w -Å_vË/ 
t_tŸÆ
 * 100);

80 
	`Ârötf
 (
°dîr
, " XÜi°: %Lg sec†(%.1Lf%%)\n", (
t_x
 - 
t_w
), (t_x -Å_wË/ 
t_tŸÆ
 * 100);

81 
	`Ârötf
 (
°dîr
, " Dow¿ : %Lg sec†(%.1Lf%%)\n", (
t_down
 - 
t_x
), (t_dow¿-Å_xË/ 
t_tŸÆ
 * 100);

82 
	`Ârötf
 (
°dîr
, " ==> TŸÆ Executi⁄ Time: %Lg secs\n", 
t_tŸÆ
);

84 
	`°›w©ch_de°roy
 (
timî
);

87 
	}
}

	@evaluate--basic.h

1 #i‡!
deföed
 (
INC_EVALUATE__BASIC_H
)

2 
	#INC_EVALUATE__BASIC_H


	)

4 
	~<m©h.h
>

5 
	~"node.h
"

6 
	~"ªÆs_Æig√d.h
"

8 #i‡
deföed
 (
__˝lu•lus
)

12 
	sFMMWøµî


14 
AŒNodes
* 
AN
;

18 #i‡
deföed
 (
__˝lu•lus
)

	@evaluate.cc

1 
	~<as£π.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°döt.h
>

5 
	~<m©h.h
>

6 
	~<omp.h
>

8 
	~"node.h
"

9 
	~"evÆu©e.h
"

10 
	~"ªÆs_Æig√d.h
"

11 
	~"utû.h
"

14 
	$gë_öput_uli°
 (
AŒNodes
 *
AŒ_N
, 
°¨t_ôî_åg
, 
íd_ôî_åg
, 
°¨t_ôî_§c
, 
íd_ôî_§c
)

16 
i
;

17 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

20 
i
 = 
°¨t_ôî_åg
; i < 
íd_ôî_åg
; i++) {

21 
	`gë_vÆue
 (
nodeVec
[
i
].
ågNum
, 
AŒ_N
->
tx
 +ÇodeVec[i].
ågBeg
, AŒ_N->
tx_‹ig
,ÇodeVec[i].
ågOwnVecIdxs
);

22 
	`gë_vÆue
 (
nodeVec
[
i
].
ågNum
, 
AŒ_N
->
ty
 +ÇodeVec[i].
ågBeg
, AŒ_N->
ty_‹ig
,ÇodeVec[i].
ågOwnVecIdxs
);

23 
	`gë_vÆue
 (
nodeVec
[
i
].
ågNum
, 
AŒ_N
->
tz
 +ÇodeVec[i].
ågBeg
, AŒ_N->
tz_‹ig
,ÇodeVec[i].
ågOwnVecIdxs
);

24 
	`£t_zîo
 (
nodeVec
[
i
].
ågNum
, 
AŒ_N
->
pŸ
 +ÇodeVec[i].
ågBeg
);

27 
i
 = 
°¨t_ôî_åg
; i < 
íd_ôî_åg
; i++) {

28 
AŒ_N
->
Nt
[
i
].
x
 = AŒ_N->
tx
 + 
nodeVec
[i].
ågBeg
;

29 
AŒ_N
->
Nt
[
i
].
y
 = AŒ_N->
ty
 + 
nodeVec
[i].
ågBeg
;

30 
AŒ_N
->
Nt
[
i
].
z
 = AŒ_N->
tz
 + 
nodeVec
[i].
ågBeg
;

31 
AŒ_N
->
Nt
[
i
].
dí_pŸ
 = AŒ_N->
pŸ
 + 
nodeVec
[i].
ågBeg
;

32 
AŒ_N
->
Nt
[
i
].
num_±s
 = 
nodeVec
[i].
ågNum
;

36 
i
 = 
°¨t_ôî_§c
; i < 
íd_ôî_§c
; i++) {

37 
	`gë_vÆue
 (
nodeVec
[
i
].
§cNum
, 
AŒ_N
->
sx
 +ÇodeVec[i].
§cBeg
, AŒ_N->
sx_‹ig
,ÇodeVec[i].
§cOwnVecIdxs
);

38 
	`gë_vÆue
 (
nodeVec
[
i
].
§cNum
, 
AŒ_N
->
sy
 +ÇodeVec[i].
§cBeg
, AŒ_N->
sy_‹ig
,ÇodeVec[i].
§cOwnVecIdxs
);

39 
	`gë_vÆue
 (
nodeVec
[
i
].
§cNum
, 
AŒ_N
->
sz
 +ÇodeVec[i].
§cBeg
, AŒ_N->
sz_‹ig
,ÇodeVec[i].
§cOwnVecIdxs
);

40 
	`gë_vÆue
 (
nodeVec
[
i
].
§cNum
, 
AŒ_N
->
dí
 +ÇodeVec[i].
§cBeg
, AŒ_N->
dí_‹ig
,ÇodeVec[i].
§cOwnVecIdxs
);

43 
i
 = 
°¨t_ôî_§c
; i < 
íd_ôî_§c
; i++) {

44 
AŒ_N
->
Ns
[
i
].
x
 = AŒ_N->
sx
 + 
nodeVec
[i].
§cBeg
;

45 
AŒ_N
->
Ns
[
i
].
y
 = AŒ_N->
sy
 + 
nodeVec
[i].
§cBeg
;

46 
AŒ_N
->
Ns
[
i
].
z
 = AŒ_N->
sz
 + 
nodeVec
[i].
§cBeg
;

47 
AŒ_N
->
Ns
[
i
].
dí_pŸ
 = AŒ_N->
dí
 + 
nodeVec
[i].
§cBeg
;

48 
AŒ_N
->
Ns
[
i
].
num_±s
 = 
nodeVec
[i].
§cNum
;

52 
	}
}

58 
	$gë_öput
 (
AŒNodes
* 
AŒ_N
)

60 
tid
, 
¡hªads
;

61 
num_nodes
;

62 
°¨t_ôî_T
, 
íd_ôî_T
;

63 
°¨t_ôî_S
, 
íd_ôî_S
;

64 
°¨t_ôî_Tv
, 
íd_ôî_Tv
;

65 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

66 
num_nodes
 = 
nodeVec
.
	`size
();

68 i‡(
	`gëív__numa
()) {

69 
	`Ârötf
 (
°dîr
, "NUMA-awareállocation\n");

70 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
 (
°¨t_ôî_S
, 
íd_ôî_S
, 
°¨t_ôî_T
, 
íd_ôî_T
, 
°¨t_ôî_Tv
, 
íd_ôî_Tv
, 
tid
)

72 
¡hªads
 = 
	`omp_gë_num_thªads
 ();

73 
tid
 = 
	`omp_gë_thªad_num
 ();

75 
°¨t_ôî_T
 = 
tid
 * 
num_nodes
 / 
¡hªads
;

76 
íd_ôî_T
 = (
tid
 =
¡hªads
-1Ë? 
num_nodes
 : ((tid + 1) *Çum_nodes /Çthreads);

78 
°¨t_ôî_S
 = 
tid
 * 
num_nodes
 / 
¡hªads
;

79 
íd_ôî_S
 = (
tid
 =
¡hªads
-1Ë? 
num_nodes
 : ((tid + 1) *Çum_nodes /Çthreads);

81 
	`gë_öput_uli°
 (
AŒ_N
, 
°¨t_ôî_T
, 
íd_ôî_T
, 
°¨t_ôî_S
, 
íd_ôî_S
);

86 
	`Ârötf
 (
°dîr
, "No NUMA-awareállocation\n");

87 
°¨t_ôî_T
 = 0;

88 
íd_ôî_T
 = 
nodeVec
.
	`size
() ;

90 
°¨t_ôî_S
 = 0;

91 
íd_ôî_S
 = 
nodeVec
.
	`size
();

93 
	`gë_öput_uli°
 (
AŒ_N
, 
°¨t_ôî_T
, 
íd_ôî_T
, 
°¨t_ôî_S
, 
íd_ôî_S
);

96 
	}
}

100 
	$w‹k_divisi⁄_U
 (
AŒNodes
 *
AŒ_N
)

102 
i
, 
j
;

103 
uöt64_t
 
sum
;

104 
¡hªads
;

105 
num_nodes
;

106 * 
Ti
;

107 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

108 
num_nodes
 = 
nodeVec
.
	`size
();

110 
¡hªads
 = 
	`gë_num_thªads
();

111 
Ti
 = (*Ë
	`ˇŒoc
 ((
¡hªads
 + 1) , ());

114 
sum
 = 0;

115 
i
 = 0; i < 
num_nodes
; i++) {

116 
j
 = 0; j < 
nodeVec
[
i
].
Unodes
.
	`size
(); j++) {

117 
§c
 = 
nodeVec
[
i
].
Unodes
[
j
];

118 
sum
 +
AŒ_N
->
Nt
[
i
].
num_±s
 * AŒ_N->
Ns
[
§c
].num_pts;

122 
uöt64_t
 
•lô
 = (
sum
/
¡hªads
) + 1;

123 
uöt64_t
 
cutoff
 = 
•lô
;

124 
cuº_thªad
 = 1;

125 
sum
 = 0;

126 
i
 = 0; i < 
num_nodes
; i++) {

127 
j
 = 0; j < 
nodeVec
[
i
].
Unodes
.
	`size
(); j++) {

128 
§c
 = 
nodeVec
[
i
].
Unodes
[
j
];

129 
sum
 +
AŒ_N
->
Nt
[
i
].
num_±s
 * AŒ_N->
Ns
[
§c
].num_pts;

130 i‡(
sum
 > 
cutoff
) {

131 
Ti
[
cuº_thªad
++] = 
i
;

132 
cutoff
 +
•lô
;

136 
Ti
[
¡hªads
] = 
num_nodes
;

137 
AŒ_N
->
Tu
 = 
Ti
;

138 
	}
}

143 
	$w‹k_divisi⁄_V
 (
AŒNodes
 *
AŒ_N
)

145 
i
;

146 
¡hªads
;

147 
num_nodes
;

148 * 
Ti
;

149 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

150 
num_nodes
 = 
nodeVec
.
	`size
();

152 
¡hªads
 = 
	`gë_num_thªads
();

153 
Ti
 = (*Ë
	`ˇŒoc
 ((
¡hªads
 + 1) , ());

154 * 
li°_off£ts
 = (*Ë
	`ˇŒoc
 ((
num_nodes
+1), ());

157 
i
 = 0; i < 
num_nodes
; i++) {

158 
˙t
 = 
nodeVec
[
i
].
Vnodes
.
	`size
();

159 
li°_off£ts
[
i
+1] =Üi°_off£ts[i] + 
˙t
;

162 
•lô
 = (
li°_off£ts
[
num_nodes
]/
¡hªads
) + 1;

163 
cutoff
 = 
•lô
;

164 
cuº_thªad
 = 1;

165 
i
 = 0; i < 
num_nodes
; i++) {

166 i‡(
li°_off£ts
[
i
] > 
cutoff
) {

167 
Ti
[
cuº_thªad
++] = 
i
;

168 
cutoff
 +
•lô
;

171 
Ti
[
¡hªads
] = 
num_nodes
;

172 
	`‰ì
 (
li°_off£ts
);

173 
AŒ_N
->
Tv
 = 
Ti
;

174 
	}
}

178 
gë_vÆue
 (
n
, 
ªÆ_t
* 
x
,Ñól_t* 
x‹ig
, 
ve˘‹
<>& 
vÆ
)

180 
	gi
, 
	gk
;

181 
	gi
 = 0; i < 
	gn
; i++) {

182 
	gk
 = 
vÆ
[
i
];

183 
	gx
[
i
] = 
x‹ig
[
k
];

193 
£t_vÆue
 (
n
, 
ªÆ_t
* 
x‹ig
,Ñól_t* 
x
, 
ve˘‹
<>& 
vÆ
)

195 
	gi
, 
	gk
;

196 
	gi
 = 0; i < 
	gn
; i++) {

197 
	gk
 = 
vÆ
[
i
];

198 
	gx‹ig
[
k
] = 
x
[
i
];

207 
	$£t_zîo
 (
n
, 
ªÆ_t
* 
x
)

209 
i
;

210 
i
 = 0; i < 
n
; i++) {

211 
x
[
i
] = 0.0;

215 
	}
}

221 
	$£t_ønd
 (
n
, 
ªÆ_t
* 
x
)

223 
i
;

224 
i
 = 0; i < 
n
; i++) {

225 
x
[
i
] = 
	`dønd48
();

229 
	}
}

	@evaluate.h

1 #i‚de‡
__EVALUATE_H__


2 
	#__EVALUATE_H__


	)

7 
	~<m©h.h
>

8 
	~<node.h
>

9 
	#OOFP_R
 (1.0/(4.0 * 
M_PI
))

	)

15 (*
kî√l
)(
¢
, 
ä
, 
ªÆ_t
* 
x1
,Ñól_t* 
x2
,Ñól_t* 
x3
,

16 
ªÆ_t
* 
y1
,Ñól_t* 
y2
,Ñól_t* 
y3
,

17 
ªÆ_t
* 
m©
,Ñól_t* 
ødii
,Ñól_à*
f‹˚_Ve˘‹
);

19 
FMMWøµî
 
	tFMMWøµî_t
;

21 
FMMWøµî_t
* 
	`¥ïroc
 (
AŒNodes
 *
AŒ_N
);

22 
	`w‹k_divisi⁄_U
 (
AŒNodes
 *
AŒ_N
);

23 
	`w‹k_divisi⁄_V
 (
AŒNodes
 *
AŒ_N
);

24 c⁄° * 
	`gë_im∂emíèti⁄_«me
 ();

25 
	`gë_num_thªads
 ();

26 
	`run
 (
FMMWøµî_t
 *
F
);

27 
	`gë_vÆue
 (
n
, 
ªÆ_t
* 
x
,Ñól_t* 
x‹ig
, 
ve˘‹
<>& 
vÆ
);

28 
	`£t_vÆue
 (
n
, 
ªÆ_t
* 
x‹ig
,Ñól_t* 
x
, 
ve˘‹
<>& 
vÆ
);

29 
	`£t_zîo
 (
n
, 
ªÆ_t
* 
x
);

30 
	`£t_ønd
 (
n
, 
ªÆ_t
* 
x
);

31 
	`gë_öput
 (
AŒNodes
* 
AŒ_N
);

33 
	`uli°__dúe˘_evÆu©i⁄
 (
Node
 
åg
, Nodê
§c
);

34 
	`poötwi£_mu…
 (
n
, 
FFT_COMPLEX
* 
x
, 
ix
, FFT_COMPLEX* 
y
, 
iy
, FFT_COMPLEX* 
z
, 
iz
);

35 
	`mykî√l
 (
¢
, 
ä
, 
ªÆ_t
* 
x1
,Ñól_t* 
x2
,Ñól_t* 
x3
,

36 
ªÆ_t
* 
y1
,Ñól_t* 
y2
,Ñól_t* 
y3
,

37 
ªÆ_t
* 
m©
,Ñól_t* 
ødii
,Ñól_à*
f‹˚_Ve˘‹
);

39 
	`up_ˇlc__˝u
 (
FMMWøµî_t
* 
F
);

40 
	`uli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
);

41 
	`vli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
);

42 
	`wli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
);

43 
	`xli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
);

44 
	`down_ˇlc__˝u
 (
FMMWøµî_t
* 
F
);

45 
	`c›y_åg_vÆ__˝u
 (
FMMWøµî_t
* 
F
);

47 
	`up_ˇlc__gpu
 (
FMMWøµî_t
* 
F
);

48 
	`uli°_ˇlc__gpu
 (
FMMWøµî_t
* 
F
);

49 
	`vli°_ˇlc__gpu
 (
FMMWøµî_t
* 
F
);

50 
	`compuã_f·_§c__gpu
 (
FMMWøµî_t
 *
f
, 
AŒNodes
 *
AŒ_N
);

51 
	`compuã_f·_å™s__gpu
 (
FMMWøµî_t
 *
f
, 
AŒNodes
 *
AŒ_N
);

52 
	`vli°_ˇlc__gpu_
 (
FMMWøµî_t
 *
f
, 
AŒNodes
 *
AŒ_N
);

53 
	`compuã_if·_åg__gpu
 (
FMMWøµî_t
 *
f
, 
AŒNodes
 *
AŒ_N
);

57 
	`wli°_ˇlc__gpu
 (
FMMWøµî_t
* 
F
);

58 
	`xli°_ˇlc__gpu
 (
FMMWøµî_t
* 
F
);

59 
	`down_ˇlc__gpu
 (
FMMWøµî_t
* 
F
);

60 
	`d2d__gpu
 (
FMMWøµî_t
* 
F
);

61 
	`d2t__gpu
 (
FMMWøµî_t
* 
F
);

62 
	`c›y_åg_vÆ__gpu
 (
FMMWøµî_t
* 
F
);

66 
	`Æloc__SOURCE_BOX__
 (
FMMWøµî_t
* 
f
);

67 
	`Æloc__TARGET_BOX__
 (
FMMWøµî_t
* 
f
);

68 
	`Æloc__U_LIST__
 (
FMMWøµî_t
* 
f
);

69 
	`Æloc__TAG__
 (
FMMWøµî_t
* 
f
);

70 
	`Æloc__DEPTH__
 (
FMMWøµî_t
* 
f
);

71 
	`Æloc__CHILDREN__
 (
FMMWøµî_t
* 
f
);

72 
	`Æloc__RADIUS__
 (
FMMWøµî_t
* 
f
);

73 
	`Æloc__CENTER__
 (
FMMWøµî_t
* 
f
);

74 
	`Æloc__SP_UC__
 (
FMMWøµî_t
* 
f
);

75 
	`Æloc__UC2UE__
 (
FMMWøµî_t
* 
f
);

76 
	`Æloc__UE2UC__
 (
FMMWøµî_t
* 
f
);

77 
	`Æloc__SRC_UPW_EQU_DEN__
 (
FMMWøµî_t
* 
f
);

78 
	`Æloc__VLIST_SRC__
 (
FMMWøµî_t
* 
f
);

79 
	`Æloc__REG_DEN__
 (
FMMWøµî_t
* 
f
);

80 
	`Æloc__TT__
 (
FMMWøµî_t
* 
f
);

81 
	`Æloc__VLIST_TRANS__
 (
FMMWøµî_t
* 
f
);

82 
	`Æloc__VLIST_TRG__
 (
FMMWøµî_t
* 
f
);

83 
	`Æloc__VLIST_TLIST__
 (
FMMWøµî_t
* 
f
);

84 
	`Æloc__TRG_DWN_CHK_VAL__
 (
FMMWøµî_t
* 
f
);

85 
	`Æloc__PATH2NODE__
 (
FMMWøµî_t
* 
f
);

86 
	`Æloc__PARENT__
 (
FMMWøµî_t
* 
f
);

87 
	`Æloc__TRG_DWN_EQU_DEN__
 (
FMMWøµî_t
* 
f
);

88 
	`Æloc__DC2DE__
 (
FMMWøµî_t
* 
f
);

89 
	`Æloc__DE2DC__
 (
FMMWøµî_t
* 
f
);

90 
	`Æloc__SP_DE__
 (
FMMWøµî_t
* 
f
);

91 
	`Æloc__SP_UE__
 (
FMMWøµî_t
* 
f
);

92 
	`Æloc__W_LIST__
 (
FMMWøµî_t
* 
f
);

93 
	`Æloc__SRCNUM__
 (
FMMWøµî_t
* 
f
);

94 
	`Æloc__SP_DC__
 (
FMMWøµî_t
* 
f
);

95 
	`Æloc__X_LIST__
 (
FMMWøµî_t
* 
f
);

96 
	`Æloc__TRGNUM__
 (
FMMWøµî_t
* 
f
);

98 
	`x„r__SOURCE_BOX__
 (
FMMWøµî_t
* 
f
);

99 
	`x„r__TARGET_BOX__
 (
FMMWøµî_t
* 
f
);

100 
	`x„r__U_LIST__
 (
FMMWøµî_t
* 
f
);

101 
	`x„r__TAG__
 (
FMMWøµî_t
* 
f
);

102 
	`x„r__DEPTH__
 (
FMMWøµî_t
* 
f
);

103 
	`x„r__CHILDREN__
 (
FMMWøµî_t
* 
f
);

104 
	`x„r__RADIUS__
 (
FMMWøµî_t
* 
f
);

105 
	`x„r__CENTER__
 (
FMMWøµî_t
* 
f
);

106 
	`x„r__SP_UC__
 (
FMMWøµî_t
* 
f
);

107 
	`x„r__UC2UE__
 (
FMMWøµî_t
* 
f
);

108 
	`x„r__UE2UC__
 (
FMMWøµî_t
* 
f
);

109 
	`x„r__SRC_UPW_EQU_DEN__
 (
FMMWøµî_t
* 
f
);

115 
	`x„r__VLIST_TLIST__
 (
FMMWøµî_t
* 
f
);

116 
	`x„r__TRG_DWN_CHK_VAL__
 (
FMMWøµî_t
* 
f
);

117 
	`x„r__PATH2NODE__
 (
FMMWøµî_t
* 
f
);

118 
	`x„r__PARENT__
 (
FMMWøµî_t
* 
f
);

120 
	`x„r__DC2DE__
 (
FMMWøµî_t
* 
f
);

121 
	`x„r__DE2DC__
 (
FMMWøµî_t
* 
f
);

122 
	`x„r__SP_DE__
 (
FMMWøµî_t
* 
f
);

123 
	`x„r__SP_UE__
 (
FMMWøµî_t
* 
f
);

124 
	`x„r__W_LIST__
 (
FMMWøµî_t
* 
f
);

125 
	`x„r__SRCNUM__
 (
FMMWøµî_t
* 
f
);

126 
	`x„r__SP_DC__
 (
FMMWøµî_t
* 
f
);

127 
	`x„r__X_LIST__
 (
FMMWøµî_t
* 
f
);

128 
	`x„r__TRGNUM__
 (
FMMWøµî_t
* 
f
);

132 
	`‰ì__SOURCE_BOX__
 (
FMMWøµî_t
* 
f
);

133 
	`‰ì__TARGET_BOX__
 (
FMMWøµî_t
* 
f
);

134 
	`‰ì__U_LIST__
 (
FMMWøµî_t
* 
f
);

135 
	`‰ì__TAG__
 (
FMMWøµî_t
* 
f
);

136 
	`‰ì__DEPTH__
 (
FMMWøµî_t
* 
f
);

137 
	`‰ì__CHILDREN__
 (
FMMWøµî_t
* 
f
);

138 
	`‰ì__RADIUS__
 (
FMMWøµî_t
* 
f
);

139 
	`‰ì__CENTER__
 (
FMMWøµî_t
* 
f
);

140 
	`‰ì__SP_UC__
 (
FMMWøµî_t
* 
f
);

141 
	`‰ì__UC2UE__
 (
FMMWøµî_t
* 
f
);

142 
	`‰ì__UE2UC__
 (
FMMWøµî_t
* 
f
);

143 
	`‰ì__SRC_UPW_EQU_DEN__
 (
FMMWøµî_t
* 
f
);

144 
	`‰ì__VLIST_SRC__
 (
FMMWøµî_t
* 
f
);

145 
	`‰ì__REG_DEN__
 (
FMMWøµî_t
* 
f
);

146 
	`‰ì__TT__
 (
FMMWøµî_t
* 
f
);

147 
	`‰ì__VLIST_TRANS__
 (
FMMWøµî_t
* 
f
);

148 
	`‰ì__VLIST_TRG__
 (
FMMWøµî_t
* 
f
);

149 
	`‰ì__VLIST_TLIST__
 (
FMMWøµî_t
* 
f
);

150 
	`‰ì__TRG_DWN_CHK_VAL__
 (
FMMWøµî_t
* 
f
);

151 
	`‰ì__PATH2NODE__
 (
FMMWøµî_t
* 
f
);

152 
	`‰ì__PARENT__
 (
FMMWøµî_t
* 
f
);

153 
	`‰ì__TRG_DWN_EQU_DEN__
 (
FMMWøµî_t
* 
f
);

154 
	`‰ì__DC2DE__
 (
FMMWøµî_t
* 
f
);

155 
	`‰ì__DE2DC__
 (
FMMWøµî_t
* 
f
);

156 
	`‰ì__SP_DE__
 (
FMMWøµî_t
* 
f
);

157 
	`‰ì__SP_UE__
 (
FMMWøµî_t
* 
f
);

158 
	`‰ì__W_LIST__
 (
FMMWøµî_t
* 
f
);

159 
	`‰ì__SRCNUM__
 (
FMMWøµî_t
* 
f
);

160 
	`‰ì__SP_DC__
 (
FMMWøµî_t
* 
f
);

161 
	`‰ì__X_LIST__
 (
FMMWøµî_t
* 
f
);

162 
	`‰ì__TRGNUM__
 (
FMMWøµî_t
* 
f
);

165 
	`x„r__SRC_UPW_EQU_DEN__back
 (
FMMWøµî_t
* 
f
);

166 
	`x„r__TRG_DWN_CHK_VAL__back
 (
FMMWøµî_t
* 
f
);

167 
	`x„r__TARGET_BOX__back
 (
FMMWøµî_t
* 
f
);

	@input.cc

1 
	~<io°ªam
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<as£π.h
>

5 
	~<°rög.h
>

6 
	~<£t
>

7 
	~<queue
>

8 
	~<m©h.h
>

9 
	~<ve˘‹
>

11 
	~"utû.h
"

12 
	~"öput.h
"

13 
	~"vec3t.h
"

14 
	~"node.h
"

15 
	~"ªÆs_Æig√d.h
"

17 
usög
 
«me•a˚
 
	g°d
;

21 
	$ußge__
 (c⁄° * 
u£
)

23 
	`Ârötf
 (
°dîr
, "ußge: %†<N> <di°ributi⁄> <maxÖoöt†≥∏box>\n", 
u£
);

24 
	}
}

30 
	$¸óã
 (
N
, * 
di°ributi⁄
, 
AŒNodes
* 
AŒ_N
)

33 
coöcide
 = 
	`gëív__coöcide
();

35 i‡(0==
	`°rcmp
(
di°ributi⁄
,"uniform")) {

36 
	`Ârötf
 (
°dîr
, "Using uniform distribution for sourcesándÅargets\n");

37 
i
 = 0; i < 
N
; i++) {

38 
AŒ_N
->
sx_‹ig
[
i
] = (2.0 * 
	`dønd48
() - 1.0);

39 
AŒ_N
->
sy_‹ig
[
i
] = (2.0 * 
	`dønd48
() - 1.0);

40 
AŒ_N
->
sz_‹ig
[
i
] = (2.0 * 
	`dønd48
() - 1.0);

42 i‡(
coöcide
 == 0) {

43 
i
 = 0; i < 
N
; i++) {

44 
AŒ_N
->
tx_‹ig
[
i
] = (2.0 * 
	`dønd48
() - 1.0);

45 
AŒ_N
->
ty_‹ig
[
i
] = (2.0 * 
	`dønd48
() - 1.0);

46 
AŒ_N
->
tz_‹ig
[
i
] = (2.0 * 
	`dønd48
() - 1.0);

50 
AŒ_N
->
tx_‹ig
 = AŒ_N->
sx_‹ig
;

51 
AŒ_N
->
ty_‹ig
 = AŒ_N->
sy_‹ig
;

52 
AŒ_N
->
tz_‹ig
 = AŒ_N->
sz_‹ig
;

61 i‡(0==
	`°rcmp
(
di°ributi⁄
,"ellipseUniformAngles")) {

62 
	`Ârötf
 (
°dîr
, "Using distribution on 1:1:4Éllipse, uniform inángles\n");

63 c⁄° 
r
 = 0.49;

64 c⁄° 
˚¡î
 [3] = { 0.5, 0.5, 0.5};

65 
i
 = 0; i < 
N
; i++) {

66 
phi
 = 2*
M_PI
*
	`dønd48
();

67 
thëa
 = 
M_PI
*
	`dønd48
();

68 
AŒ_N
->
sx_‹ig
[
i
] = 
˚¡î
[0] + 0.25 * 
r
 * 
	`sö
(
thëa
Ë* 
	`cos
(
phi
);

69 
AŒ_N
->
sy_‹ig
[
i
] = 
˚¡î
[1] + 0.25 * 
r
 * 
	`sö
(
thëa
Ë* sö(
phi
);

70 
AŒ_N
->
sz_‹ig
[
i
] = 
˚¡î
[2] + 
r
 * 
	`cos
(
thëa
);

72 
i
 = 0; i < 
N
; i++) {

73 
phi
 = 2*
M_PI
*
	`dønd48
();

74 
thëa
 = 
M_PI
*
	`dønd48
();

75 
AŒ_N
->
tx_‹ig
[
i
] = 
˚¡î
[0] + 0.25 * 
r
 * 
	`sö
(
thëa
Ë* 
	`cos
(
phi
);

76 
AŒ_N
->
ty_‹ig
[
i
] = 
˚¡î
[1] + 0.25 * 
r
 * 
	`sö
(
thëa
Ë* sö(
phi
);

77 
AŒ_N
->
tz_‹ig
[
i
] = 
˚¡î
[2] + 
r
 * 
	`cos
(
thëa
);

81 
	`Ârötf
 (
°dîr
, "Invalid distribution of sources selected");

84 
	}
}

88 
ölöe


89 
ªÆ_t


90 
	$ødius
()

92 
roŸ_Àvñ
 = 0;

93  
	`pow
 (2.0, 
roŸ_Àvñ
);

94 
	}
}

100 
ölöe


102 
	$pow2
 (
l
)

104 
	`as£π
 (
l
 >= 0);

105  (1 << 
l
);

106 
	}
}

113 
ªÆ_t


114 
ødius
 (
nodeId
, 
ve˘‹
<
NodeTªe
>& 
nodeVec
)

116  
ødius
(Ë/ 
ªÆ_t
 (
pow2
(
nodeVec
[
nodeId
].
dïth
));

123 
Poöt3


124 
˚¡î
 (
nodeId
, 
ve˘‹
<
NodeTªe
>& 
nodeVec
)

126 
Poöt3
 
˚¡î
(0.0);

127 
	gdim
 = 3;

129 
Poöt3
 
Œ
 (
˚¡î
 - Poöt3 (
ødius
()));

130 
	gtmp
 = 
pow2
 (
nodeVec
[
nodeId
].
dïth
);

131 
Index3
 
∑thL˛
 (
nodeVec
[
nodeId
].
∑th2Node
);

132 
Poöt3
 
	gªs
;

133 
	gd
 = 0; d < 
	gdim
; d++) {

134 
ªs
(
d
Ë
Œ
(dË+ (2 * 
ødius
()Ë* (
∑thL˛
(dË+ 0.5Ë/ 
ªÆ_t
(
tmp
);

136  
	gªs
;

143 
chûd
 (
nodeId
, c⁄° 
Index3
& 
idx
, 
ve˘‹
<
NodeTªe
>& 
nodeVec
)

145 
as£π
 (
idx
 >
Index3
(0) && idx < Index3(2));

146  
	gnodeVec
[
nodeId
].
	gchûd
 + (
idx
(0) * 4 + idx(1) * 2 + idx(2));

153 
födg¡
(
w¡dïth
, c⁄° 
Index3
& 
w¡∑th
, 
ve˘‹
<
NodeTªe
>& 
nodeVec
)

155 
	gcur
 = 0;

156 
Index3
 
À·∑th
 (
w¡∑th
);

157 
	gnodeVec
[
cur
].
	gdïth
 < 
	gw¡dïth
 &&ÇodeVec[cur].
	gchûd
 != -1) {

158 
dif
 = 
w¡dïth
 - 
nodeVec
[
cur
].
dïth
;

159 
	gtmp
 = 
pow2
 (
dif
 - 1);

160 
Index3
 
choi˚
 (
À·∑th
 / 
tmp
);

161 
	gÀ·∑th
 -
choi˚
 * 
tmp
;

162 
	gcur
 = 
chûd
 (
cur
, 
choi˚
, 
nodeVec
);

164  
	gcur
;

170 
boﬁ


171 
adja˚¡
 (
a
, 
b
, 
ve˘‹
<
NodeTªe
>& 
nodeVec
)

173 
	gmd
 = 
max
 (
nodeVec
[
a
].
dïth
,ÇodeVec[
b
].depth);

174 
Index3
 
⁄e
(1);

175 
Index3
 
a˚¡î
 ((2 * 
nodeVec
[
a
].
∑th2Node
 + 
⁄e
Ë* 
pow2
 (
md
 -ÇodeVec[a].
dïth
));

176 
Index3
 
b˚¡î
 ((2 * 
nodeVec
[
b
].
∑th2Node
 + 
⁄e
Ë* 
pow2
(
md
 -ÇodeVec[b].
dïth
));

177 
	g¨adius
 = 
pow2
 (
md
 - 
nodeVec
[
a
].
dïth
);

178 
	gbødius
 = 
pow2
 (
md
 - 
nodeVec
[
b
].
dïth
);

179 
Index3
 
dif
 (
abs
(
a˚¡î
 - 
b˚¡î
));

180 
	gødius
 = 
¨adius
 + 
bødius
;

183 (
	gdif
 <
Index3
 (
ødius
)) &&

184 (
dif
.
lö·y
(Ë=
ødius
);

191 
dwnOrdî
 (
ve˘‹
<>& 
‹dîBoxesVec
, ve˘‹<
NodeTªe
>& 
nodeVec
)

193 
	g‹dîBoxesVec
.
˛ór
();

194 
	gi
 = 0; i < 
	gnodeVec
.
size
(); i++)

195 
	g‹dîBoxesVec
.
push_back
 (
i
);

196 
as£π
 (
‹dîBoxesVec
.
size
(Ë=
nodeVec
.size());

204 
	$§c_åì
 (
N
, 
±s_max
, 
AŒNodes
* 
AŒ_N
)

206 
Àvñ
 = 0;

207 
¨r_beg
 = 0;

208 
¨r_íd
 = 1;

209 
¨r_cou¡
 = 0;

210 
dim
 = 3;

211 
ve˘‹
< ve˘‹<> > 
vecId
;

212 
ve˘‹
<> 
§cNum
;

213 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

214 
ve˘‹
<>& 
nodeLevñ
 = *
AŒ_N
->nodeLevel;

217 
nodeVec
.
	`push_back
 (
	`NodeTªe
 (-1, -1, 
	`Index3
(0,0,0), 0));

218 
vecId
.
	`push_back
 (
ve˘‹
<>());

219 
ve˘‹
<>& 
curVecId
 = 
vecId
[0];

221 
k
 = 0; k < 
N
; k++) {

223 
curVecId
.
	`push_back
 (
k
);

225 
§cNum
.
	`push_back
 (
curVecId
.
	`size
());

227 
nodeLevñ
.
	`push_back
 (
¨r_beg
);

228 
¨r_beg
 < 
¨r_íd
) {

229 
¨r_cou¡
 = 
¨r_íd
;

230 
k
 = 
¨r_beg
; k < 
¨r_íd
; k++) {

232 i‡(
§cNum
[
k
] > 
±s_max
) {

233 
nodeVec
[
k
].
chûd
 = 
¨r_cou¡
;

234 
¨r_cou¡
 =áº_cou¡ + 
	`pow2
 (
dim
);

236 
a
 = 0;á < 2;á++) {

237 
b
 = 0; b < 2; b++) {

238 
c
 = 0; c < 2; c++) {

239 
nodeVec
.
	`push_back
 (
	`NodeTªe
 (
k
, -1, 2 *ÇodeVec[k].
∑th2Node
 + 
	`Index3
(
a
,
b
,
c
),ÇodeVec[k].
dïth
 + 1) );

240 
vecId
.
	`push_back
 (
ve˘‹
<>());

241 
§cNum
.
	`push_back
 (0);

246 
Poöt3
 
	`˚¡îCurNode
 (
	`˚¡î
(
k
, 
nodeVec
));

248 
ve˘‹
<>::
ôî©‹
 
vecIdIt
 = 
vecId
[
k
].
	`begö
(); vecIdIà!vecId[k].
	`íd
(); vecIdIt++) {

249 
Index3
 
idx
;

250 
	`idx
(0Ë(
AŒ_N
->
sx_‹ig
[(*
vecIdIt
)] >
	`˚¡îCurNode
(0));

251 
	`idx
(1Ë(
AŒ_N
->
sy_‹ig
[(*
vecIdIt
)] >
	`˚¡îCurNode
(1));

252 
	`idx
(2Ë(
AŒ_N
->
sz_‹ig
[(*
vecIdIt
)] >
	`˚¡îCurNode
(2));

254 
chûdNodeId
 = 
	`chûd
 (
k
, 
idx
, 
nodeVec
);

255 
vecId
[
chûdNodeId
].
	`push_back
 (*
vecIdIt
);

257 
vecId
[
k
].
	`˛ór
();

259 
a
 = 0;á < 2;á++) {

260 
b
 = 0; b < 2; b++) {

261 
c
 = 0; c < 2; c++) {

262 
chûdNodeId
 = 
	`chûd
 (
k
, 
	`Index3
(
a
,
b
,
c
), 
nodeVec
);

263 
§cNum
[
chûdNodeId
] = 
vecId
[chûdNodeId].
	`size
();

269 
Àvñ
++;

270 
¨r_beg
 = 
¨r_íd
;

271 
¨r_íd
 = 
¨r_cou¡
;

272 
nodeLevñ
.
	`push_back
 (
¨r_beg
);

276 
ve˘‹
<> 
‹dîBoxesVec
;

277 
	`dwnOrdî
 (
‹dîBoxesVec
, 
nodeVec
);

280 
˙t
 = 0;

281 
sum
 = 0;

282 
i
 = 0; i < 
‹dîBoxesVec
.
	`size
(); i++) {

283 
nodeIdx
 = 
‹dîBoxesVec
[
i
];

284 i‡(
§cNum
[
nodeIdx
] > 0) {

285 
nodeVec
[
nodeIdx
].
èg
 =ÇodeVec[nodeIdx].èg | 
LET_SRCNODE
;

286 
nodeVec
[
nodeIdx
].
§cNodeIdx
 = 
˙t
;

287 
˙t
++;

288 if(
nodeVec
[
nodeIdx
].
chûd
==-1) {

289 
nodeVec
[
nodeIdx
].
§cBeg
 = 
sum
;

290 
nodeVec
[
nodeIdx
].
§cNum
 = srcNum[nodeIdx];

291 
sum
 +
§cNum
[
nodeIdx
];

292 
nodeVec
[
nodeIdx
].
§cOwnVecIdxs
 = 
vecId
[nodeIdx];

298 
	}
}

304 
compuã_li°s
 (
nodeId
, 
ve˘‹
<
NodeTªe
>& 
nodeVec
)

306 
	g£t
<> 
	gU£t
, 
	gV£t
, 
	gW£t
, 
	gX£t
;

307 
	gcurNodeId
 = 
nodeId
;

309 i‡(
	gnodeVec
[
curNodeId
].
	g∑ª¡
 != -1) {

310 
∑ª¡NodeId
 = 
nodeVec
[
curNodeId
].
∑ª¡
;

311 
Index3
 
möIdx
(0);

312 
Index3
 
maxIdx
 (
pow2
 (
nodeVec
[
curNodeId
].
dïth
));

314 
	gi
 = -2; i < 4; i++)

315 
	gj
 = -2; j < 4; j++)

316 
	gk
 = -2; k < 4; k++) {

317 
Index3
 
åyP©h
 (2 * 
nodeVec
[
∑ª¡NodeId
].
∑th2Node
 + Index3(
i
,
j
,
k
) );

318 i‡(
	gåyP©h
 >
möIdx
 && 
åyP©h
 < 
maxIdx
 &&ÅryP©h !
nodeVec
[
curNodeId
].
∑th2Node
) {

319 
ªsNodeId
 = 
födg¡
 (
nodeVec
[
curNodeId
].
dïth
, 
åyP©h
,ÇodeVec);

320 
boﬁ
 
	gadj
 = 
adja˚¡
 (
ªsNodeId
, 
curNodeId
, 
nodeVec
);

321 i‡(
	gnodeVec
[
ªsNodeId
].
	gdïth
 <ÇodeVec[
curNodeId
].depth) {

322 i‡(
	gadj
) {

323 i‡(
	gnodeVec
[
curNodeId
].
	gchûd
 == -1)

324 
U£t
.
ö£π
(
ªsNodeId
);

328 
	gX£t
.
ö£π
(
ªsNodeId
);

331 i‡(
	gnodeVec
[
ªsNodeId
].
	gdïth
 =
nodeVec
[
curNodeId
].
dïth
) {

332 i‡(!
adj
) {

333 
Index3
 
bb
 (
nodeVec
[
ªsNodeId
].
∑th2Node
 -ÇodeVec[
curNodeId
].path2Node);

334 
as£π
 (
bb
.
lö·y
() <= 3);

335 
	gV£t
.
ö£π
 (
ªsNodeId
);

338 i‡(
	gnodeVec
[
curNodeId
].
	gchûd
 == -1) {

339 
queue
<> 
ª°
;

340 
	gª°
.
push
 (
ªsNodeId
);

341 
	gª°
.
em±y
(Ë=
Ál£
) {

342 
‰⁄tNodeId
 = 
ª°
.
‰⁄t
();

343 
	gª°
.
p›
();

344 i‡(
adja˚¡
 (
‰⁄tNodeId
, 
curNodeId
, 
nodeVec
Ë=
Ál£
)

345 
W£t
.
ö£π
 (
‰⁄tNodeId
);

347 i‡(
	gnodeVec
[
‰⁄tNodeId
].
	gchûd
 == -1)

348 
U£t
.
ö£π
 (
‰⁄tNodeId
);

350 
	ga
 = 0;á < 2;á++)

351 
	gb
 = 0; b < 2; b++)

352 
	gc
 = 0; c < 2; c++)

353 
	gª°
.
push
 (
chûd
(
‰⁄tNodeId
, 
Index3
(
a
,
b
,
c
), 
nodeVec
));

364 i‡(
	gnodeVec
[
curNodeId
].
	gchûd
 == -1)

365 
U£t
.
ö£π
 (
curNodeId
);

367 
	g£t
<>::
ôî©‹
 
si
 = 
U£t
.
begö
(); 
	gsi
 !U£t.
íd
(); si++)

368 i‡(
	gnodeVec
[*
si
].
	gèg
 & 
	gLET_SRCNODE
)

369 
	gnodeVec
[
nodeId
].
	gUnodes
.
push_back
 (*
si
);

370 
	g£t
<>::
ôî©‹
 
si
 = 
V£t
.
begö
(); 
	gsi
 !V£t.
íd
(); si++)

371 i‡(
	gnodeVec
[*
si
].
	gèg
 & 
	gLET_SRCNODE
)

372 
	gnodeVec
[
nodeId
].
	gVnodes
.
push_back
 (*
si
);

373 
	g£t
<>::
ôî©‹
 
si
 = 
W£t
.
begö
(); 
	gsi
 !W£t.
íd
(); si++)

374 i‡(
	gnodeVec
[*
si
].
	gèg
 & 
	gLET_SRCNODE
)

375 
	gnodeVec
[
nodeId
].
	gWnodes
.
push_back
 (*
si
);

376 
	g£t
<>::
ôî©‹
 
si
 = 
X£t
.
begö
(); 
	gsi
 !X£t.
íd
(); si++)

377 i‡(
	gnodeVec
[*
si
].
	gèg
 & 
	gLET_SRCNODE
)

378 
	gnodeVec
[
nodeId
].
	gXnodes
.
push_back
 (*
si
);

387 
	$åg_åì
 (
N
, 
AŒNodes
* 
AŒ_N
)

389 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

390 
ve˘‹
< ve˘‹<> > 
vecId
;

391 
vecId
.
	`ªsize
 (
nodeVec
.
	`size
());

392 
ve˘‹
<> 
ågNum
;

393 
ågNum
.
	`ªsize
 (
nodeVec
.
	`size
(), 0);

395 
ve˘‹
<>& 
curVecId
 = 
vecId
[0];

397 
k
 = 0; k < 
N
; k++) {

398 
curVecId
.
	`push_back
 (
k
);

400 
ågNum
[0] = 
curVecId
.
	`size
();

402 
ve˘‹
<> 
‹dîBoxesVec
;

403 
	`dwnOrdî
 (
‹dîBoxesVec
, 
nodeVec
);

404 
i
 = 0; i < 
‹dîBoxesVec
.
	`size
(); i++) {

405 
nodeId
 = 
‹dîBoxesVec
[
i
];

406 
NodeTªe
& 
curNode
 = 
nodeVec
[
nodeId
];

407 
ve˘‹
<>& 
curVecId
 = 
vecId
[
nodeId
];

408 i‡(
curNode
.
chûd
 != -1) {

409 
Poöt3
 
	`curCíãr
 (
	`˚¡î
(
nodeId
, 
nodeVec
));

411 
ve˘‹
<>::
ôî©‹
 
curVecIdIt
 = 
curVecId
.
	`begö
(); curVecIdIà!curVecId.
	`íd
(); curVecIdIt++) {

412 
Index3
 
idx
;

413 
	`idx
(0Ë(
AŒ_N
->
tx_‹ig
[(*
curVecIdIt
)] >
	`curCíãr
(0));

414 
	`idx
(1Ë(
AŒ_N
->
ty_‹ig
[(*
curVecIdIt
)] >
	`curCíãr
(1));

415 
	`idx
(2Ë(
AŒ_N
->
tz_‹ig
[(*
curVecIdIt
)] >
	`curCíãr
(2));

416 
chûdNodeId
 = 
	`chûd
 (
nodeId
, 
idx
, 
nodeVec
);

417 
ve˘‹
<>& 
chûdVecId
 = 
vecId
[
chûdNodeId
];

418 
chûdVecId
.
	`push_back
 (*
curVecIdIt
);

420 
curVecId
.
	`˛ór
();

422 
a
 = 0;á < 2;á++) {

423 
b
 = 0; b < 2; b++) {

424 
c
 = 0; c < 2; c++) {

425 
chûdNodeId
 = 
	`chûd
 (
nodeId
, 
	`Index3
(
a
,
b
,
c
), 
nodeVec
);

426 
ågNum
[
chûdNodeId
] = 
vecId
[chûdNodeId].
	`size
();

434 
˙t
 = 0;

435 
sum
 = 0;

436 
i
 = 0; i < 
‹dîBoxesVec
.
	`size
(); i++) {

437 
nodeId
 = 
‹dîBoxesVec
 [
i
];

438 i‡(
ågNum
[
nodeId
] > 0) {

439 
nodeVec
[
nodeId
].
èg
 =ÇodeVec[nodeId].èg | 
LET_TRGNODE
;

440 
nodeVec
[
nodeId
].
ågNodeIdx
 = 
˙t
;

441 
˙t
 ++;

442 if(
nodeVec
[
nodeId
].
chûd
==-1) {

443 
nodeVec
[
nodeId
].
ågBeg
 = 
sum
;

444 
nodeVec
[
nodeId
].
ågNum
 =ÅrgNum[nodeId];

445 
sum
 +
ågNum
[
nodeId
];

446 
nodeVec
[
nodeId
].
ågOwnVecIdxs
 = 
vecId
[nodeId];

452 
i
=0; i < 
‹dîBoxesVec
.
	`size
(); i++) {

453 
nodeId
 = 
‹dîBoxesVec
[
i
];

454 i‡(
nodeVec
[
nodeId
].
èg
 & 
LET_TRGNODE
) {

455 
	`compuã_li°s
 (
nodeId
, 
nodeVec
);

460 
	}
}

	@input.h

1 #i‚de‡
__INPUT_H__


2 
	#__INPUT_H__


	)

3 
	~<ve˘‹
>

5 
	~"vec3t.h
"

7 
usög
 
«me•a˚
 
	g°d
;

13 
	mLET_SRCNODE
 = 1,

14 
	mLET_TRGNODE
 = 2

17 
	sNodeTªe
 {

18 
	m∑ª¡
, 
	mchûd
, 
	mdïth
, 
	mèg
;

19 
Index3
 
	m∑th2Node
;

22 
	m§cNodeIdx
;

24 
	m§cBeg
;

26 
	m§cNum
;

28 
	mve˘‹
<> 
	m§cOwnVecIdxs
;

31 
	mågNodeIdx
;

33 
	mågBeg
;

35 
	mågNum
;

37 
	mve˘‹
<> 
	mågOwnVecIdxs
;

40 
	mve˘‹
<> 
	mUnodes
;

42 
	mve˘‹
<> 
	mVnodes
;

44 
	mve˘‹
<> 
	mWnodes
;

46 
	mve˘‹
<> 
	mXnodes
;

48 
NodeTªe
 (
p
, 
c
, 
Index3
 
t
, 
d
):

49 
∑ª¡
(
p
), 
chûd
(
c
), 
∑th2Node
(
t
), 
dïth
(
d
), 
èg
(
Ál£
), 
§cNodeIdx
(0), 
§cBeg
(0), 
§cNum
(0), 
ågNodeIdx
(0),

50 
ågBeg
(0), 
ågNum
(0) {;}

56 
chûd
 (
nodeId
, c⁄° 
Index3
& 
idx
, 
ve˘‹
<
NodeTªe
>& 
nodeVec
);

58 
Poöt3
 
˚¡î
 (
nodeId
, 
ve˘‹
<
NodeTªe
>& 
nodeVec
);

60 
ªÆ_t
 
ødius
 (
nodeId
, 
ve˘‹
<
NodeTªe
>& 
nodeVec
);

	@naive.cc

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

4 
	~<f·w3.h
>

5 
	~"evÆu©e--basic.h
"

6 
	~"evÆu©e.h
"

7 
	~"ªÆs_Æig√d.h
"

8 
	~"å™s.h
"

9 
	~"vecm©›.h
"

10 
	~"vec3t.h
"

11 
	~"öput.h
"

12 
	~"timög.h
"

17 
	$gë_im∂emíèti⁄_«me
 ()

20 
	}
}

26 
	$gë_num_thªads
 ()

28 
¡hªads
 = 1;

29  
¡hªads
;

30 
	}
}

35 
	$up_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

37 
i
, 
n
, 
≈
;

38 
Poöt3
 
c
;

39 
ªÆ_t
 
r
;

40 
Node
* 
é_pos
;

41 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

42 
Pos
* 
SP
 = 
AŒ_N
->SP;

43 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

44 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

46 
é_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

48 
é_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

49 
é_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

50 
é_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

51 
é_pos
->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

52 
é_pos
->
num_±s
 = 
SP
[
UC
].
n
;

55 
	`compuã_UC2UE_m©
 (
TM
, 
SP
);

58 
TM
->
UE2UC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

60 
a
=0;á<2;á++) {

61 
b
=0; b<2; b++) {

62 
c
=0; c<2; c++) {

63 
Index3
 
	`idx
(
a
, 
b
, 
c
);

64 
	`compuã_UE2UC_m©
 (
idx
, 
TM
, 
SP
);

71 
i
 = 
nodeVec
.
	`size
()-1; i >= 0; i--) {

72 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

73 i‡(
nodeVec
[
i
].
dïth
 >= 0) {

74 
ªÆ_t
 *
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

76 i‡(
nodeVec
[
i
].
chûd
 == -1) {

78 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

79 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

80 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
, &
SP
[
UC
]);

81 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
é_pos
->
dí_pŸ
);

83 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
, 
AŒ_N
->
Ns
[
i
]);

87 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
é_pos
->
dí_pŸ
);

88 
a
=0;á<2;á++) {

89 
b
=0; b<2; b++) {

90 
c
=0; c<2; c++) {

91 
Index3
 
	`idx
(
a
,
b
,
c
);

92 
chi
 = 
	`chûd
(
i
, 
idx
, 
nodeVec
);

93 if(
nodeVec
[
chi
].
èg
 & 
LET_SRCNODE
) {

94 
ªÆ_t
 *
dí
 = &
AŒ_N
->
§c_upw_equ_dí
[
chi
*
	`∂n_size
(
UE
, 
SP
)];

95 
§cDOF
 = 1;

96 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

97 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

98 
l
 = 
nodeVec
[
chi
].
dïth
;

99 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

100 
ªÆ_t
 
s˛vec
[
§cDOF
];

101 
s
=0; s<
§cDOF
; s++)

102 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

103 
˙t
 = 0;

104 
k
=0; k < 
SP
[
UE
].
n
; k++)

105 
s
=0; s < 
§cDOF
; s++) {

106 
tmpDí
[
˙t
] = 
dí
[˙t] * 
s˛vec
[
s
];

107 
˙t
++;

109 
ªÆ_t
 *
UE2UCii
 = 
TM
->
UE2UC
[
	`idx
(2)+idx(1)*2+idx(0)*2*2];

110 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
UE2UCii
, 
tmpDí
, 1.0, 
é_pos
->
dí_pŸ
);

118 
§cDOF
 = 1;

119 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

120 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

121 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
é_pos
->
dí_pŸ
, 1.0, 
tmpDí
);

124 
l
 = 
nodeVec
[
i
].
dïth
;

125 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

126 
ªÆ_t
 
s˛vec
[
§cDOF
];

127 
s
=0; s<
§cDOF
; s++)

128 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

129 
˙t
 = 0;

130 
k
=0; k < 
SP
[
UE
].
n
; k++)

131 
s
=0; s < 
§cDOF
; s++) {

132 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

133 
˙t
++;

139 
	}
}

145 
	$uli°_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

147 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

148 i‡(
AŒ_N
) {

149 
i
;

150 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

152 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

153 
k
;

154 
k
 = 0; k < 
nodeVec
[
i
].
Unodes
.
	`size
(); k++) {

155 
§c
 = 
nodeVec
[
i
].
Unodes
[
k
];

156 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

161 
	}
}

164 
	$uli°__dúe˘_evÆu©i⁄
 (
Node
 
åg
, Nodê
§c
)

166 
i
, 
j
;

167 
ªÆ_t
 
x
, 
y
, 
z
, 
r2
, 
r
;

169 
i
 = 0; i < 
åg
.
num_±s
; i++) {

170 
ªÆ_t
 
tx
 = 
åg
.
x
[
i
];

171 
ªÆ_t
 
ty
 = 
åg
.
y
[
i
];

172 
ªÆ_t
 
tz
 = 
åg
.
z
[
i
];

173 
ªÆ_t
 
td
 = 0.0;

174 
j
 = 0; j < 
§c
.
num_±s
; j++) {

175 
x
 = 
tx
 - 
§c
.x[
j
];

176 
y
 = 
ty
 - 
§c
.y[
j
];

177 
z
 = 
tz
 - 
§c
.z[
j
];

178 
r2
 = 
x
*x + 
y
*y + 
z
*z;

179 #i‡!
	`deföed
 (
USE_FLOAT
)

180 
r
 = 
	`sqπ
(
r2
);

182 
r
 = 
	`sqπf
(
r2
);

184 i‡(
r
 != 0)

185 
td
 +
§c
.
dí_pŸ
[
j
] / 
r
;

187 
åg
.
dí_pŸ
[
i
] +
OOFP_R
 * 
td
;

191 
	}
}

195 
	$mykî√l
 (
¢
, 
ä
, 
ªÆ_t
* 
x1
,Ñól_t* 
x2
,Ñól_t* 
x3
,

196 
ªÆ_t
* 
y1
,Ñól_t* 
y2
,Ñól_t* 
y3
,

197 
ªÆ_t
* 
m©
,Ñól_t* 
ødii
,Ñól_à*
f‹˚_Ve˘‹
)

199 
i
, 
j
;

200 
ªÆ_t
 
x
, 
y
, 
z
, 
r2
, 
r
;

202 
i
 = 0; i < 
¢
; i++) {

203 
ªÆ_t
 
sx
 = 
x1
[
i
];

204 
ªÆ_t
 
sy
 = 
x2
[
i
];

205 
ªÆ_t
 
sz
 = 
x3
[
i
];

206 
ªÆ_t
 
td
 = 0.0;

207 
j
 = 0; j < 
ä
; j++) {

208 
x
 = 
sx
 - 
y1
[
j
];

209 
y
 = 
sy
 - 
y2
[
j
];

210 
z
 = 
sz
 - 
y3
[
j
];

211 
r2
 = 
x
*x + 
y
*y + 
z
*z;

212 #i‡!
	`deföed
 (
USE_FLOAT
)

213 
r
 = 
	`sqπ
(
r2
);

215 
r
 = 
	`sqπf
(
r2
);

217 i‡(
r
 != 0)

218 
m©
[
j
+
i
*
ä
] = 
OOFP_R
 / 
r
;

222 
	}
}

227 
	$compuã_f·_§c
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

229 
i
 = 0;

230 
eff_size
;

231 
ªÆ_t
* 
edí
;

232 
ªÆ_t
* 
udí
;

233 
ªÆ_t
* 
rdí
;

234 
ªÆ_t
* 
tdí
;

235 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

236 
eff_size
 = 
	`eff_d©a_size
 (
UE
);

237 
Pos
* 
SP
 = 
AŒ_N
->SP;

238 
Pos
* 
RP
 = 
AŒ_N
->RP;

239 
rdí
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
);

240 
tdí
 = 
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

242 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

243 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

244 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

245 
	`∂nDí2EffDíöô
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
f‹∂™
, 
AŒ_N
);

248 
i
 = 1; i<
nodeVec
.
	`size
(); i++) {

249 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

250 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

251 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

252 
	`∂nDí2EffDí
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
rdí
, 
tdí
, 
f‹∂™
, 
AŒ_N
);

257 
	}
}

262 
	$compuã_f·_å™s
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

264 
idx
;

265 
§cDOF
;

266 
ågDOF
;

267 
effNum
 = 
	`eff_d©a_size
 (
UE
);

268 
ªÆ_t
 
R
 = 1;

269 
Pos
* 
RP
 = 
AŒ_N
->RP;

270 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

273 
TM
->
UE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 7*7*7);

275 
i1
=-3; i1<=3; i1++)

276 
i2
=-3; i2<=3; i2++)

277 
i3
=-3; i3<=3; i3++)

278 i‡(
	`abs
(
i1
)>1 ||ábs(
i2
)>1 ||ábs(
i3
)>1 ) {

280 
idx
 = (
i1
+3Ë+ (
i2
+3)*7 + (
i3
+3)*7*7;

281 
§cDOF
 = 1;

282 
ågDOF
 = 1;

283 
ªÆ_t
 
díPosX
[1];

284 
ªÆ_t
 
díPosY
[1];

285 
ªÆ_t
 
díPosZ
[1];

286 
díPosX
[0] = (
ªÆ_t
)(
i1
)*2.0*
R
;

287 
díPosY
[0] = (
ªÆ_t
)(
i2
)*2.0*
R
;

288 
díPosZ
[0] = (
ªÆ_t
)(
i3
)*2.0*
R
;

290 
ªÆ_t
 
chkPosX
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosX); 
	`daxpy
(RP->n, 
R
, RP->
x
, chkPosX) ;

291 
ªÆ_t
 
chkPosY
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosY); 
	`daxpy
(RP->n, 
R
, RP->
y
, chkPosY) ;

292 
ªÆ_t
 
chkPosZ
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosZ); 
	`daxpy
(RP->n, 
R
, RP->
z
, chkPosZ) ;

293 
ªÆ_t
* 
â
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

294 
	`kî√l
(1, 
RP
->
n
, 
díPosX
, 
díPosY
, 
díPosZ
, 
chkPosX
, 
chkPosY
, 
chkPosZ
, 
â
);

297 
ªÆ_t
* 
tmp
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

298 
k
=0; k<
RP
->
n
;k++) {

299 
tmp
[
k
] = 
â
[k];

301 
ªÆ_t
 *
UpwEqu2DwnChkii
 = 
	`ªÆs_Æloc__Æig√d
 (
ågDOF
*
§cDOF
 * 
effNum
);

302 
	`FFT_RE_EXECUTE
(
f‹∂™
, 
tmp
, (
FFT_COMPLEX
*)(
UpwEqu2DwnChkii
));

303 
TM
->
UE2DC
[
idx
] = 
UpwEqu2DwnChkii
;

306 
	}
}

312 
	$compuã_if·_åg
 (
AŒNodes
 *
AŒ_N
)

314 
i
 = 0;

315 
öv£t
 = 0;

316 
eff_size
;

317 
ªÆ_t
 *
evÆ
;

318 
ªÆ_t
 *
tvÆ
;

319 
ªÆ_t
 *
rvÆ
;

320 
FFT_PLAN
 
öv∂™
;

321 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

322 
Pos
* 
SP
 = 
AŒ_N
->SP;

323 
Pos
* 
RP
 = 
AŒ_N
->RP;

325 
eff_size
 = 
	`eff_d©a_size
 (
DC
);

326 
rvÆ
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
);

328 
öv£t
 == 0) {

329 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

330 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

331 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_size
];

332 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

333 
k
=0; k<
eff_size
; k++)

334 
evÆ
[
k
] *
ƒmfc
;

335 
	`effVÆ2P VÆöô
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
öv∂™
, 
AŒ_N
);

336 
öv£t
 = 1;

338 
i
++;

341 
j
=
i
; j < 
nodeVec
.
	`size
(); j++) {

342 if–
nodeVec
[
j
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[j].
Vnodes
.
	`size
()>0) {

343 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
j
*
	`∂n_size
(
DC
, 
SP
)];

344 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
j
 * 
eff_size
];

345 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

346 
k
=0; k<
eff_size
; k++)

347 
evÆ
[
k
] *
ƒmfc
;

348 
	`effVÆ2P VÆ
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
rvÆ
, 
öv∂™
, 
AŒ_N
);

351 
	`FFT_DESTROY
 (
öv∂™
);

354 
	}
}

360 
	$vli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

362 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

363 i‡(
AŒ_N
) {

365 
i
, 
j
, 
id
;

366 
eff_§c_size
;

367 
eff_åg_size
;

368 
effNum
;

369 
dim
 = 3;

370 
§cDOF
 = 1;

371 
ågDOF
 = 1;

372 
ªÆ_t
 *
edí
;

373 
ªÆ_t
 *
evÆ
;

374 
ªÆ_t
 *
UpwEqu2DwnChkii
;

375 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

376 
Pos
* 
SP
 = 
AŒ_N
->SP;

377 
Pos
* 
RP
 = 
AŒ_N
->RP;

378 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

380 
FFT_PLAN
 
f‹∂™
;

381 
	`compuã_f·_§c
 (
AŒ_N
, 
f‹∂™
);

382 
	`compuã_f·_å™s
 (
AŒ_N
, 
f‹∂™
);

385 
eff_åg_size
 = 
	`eff_d©a_size
 (
DC
);

386 
eff_§c_size
 = 
	`eff_d©a_size
 (
UE
);

387 
effNum
 = 
eff_§c_size
;

388 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

389 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

390 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_åg_size
];

391 
Poöt3
 
	`gNodeIdxCå
(
	`˚¡î
(
i
, 
nodeVec
));

392 
ªÆ_t
 
D
 = 2.0 * 
	`ødius
 (
i
, 
nodeVec
);

393 
j
 = 0; j < 
nodeVec
[
i
].
Vnodes
.
	`size
(); j++) {

394 
§c
 = 
nodeVec
[
i
].
Vnodes
[
j
];

395 
Poöt3
 
	`viCå
(
	`˚¡î
 (
§c
, 
nodeVec
));

396 
Index3
 
idx
;

397 
d
=0; d<
dim
; d++) {

398 
	`idx
(
d
Ë(
	`round
–(
viCå
[d]-
gNodeIdxCå
[d])/
D
 ));

400 
edí
 = &
AŒ_N
->
eff_dí
[
§c
 * 
eff_§c_size
];

402 
id
 = (
	`idx
(0)+3) + (idx(1)+3)*7 + (idx(2)+3)*7*7;

403 
UpwEqu2DwnChkii
 = 
TM
->
UE2DC
[
id
];

404 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

405 
FFT_COMPLEX
* 
m©På
 = (FFT_COMPLEX*)(
UpwEqu2DwnChkii
);

406 
FFT_COMPLEX
* 
díPå
 = (FFT_COMPLEX*)(
edí
);

407 
FFT_COMPLEX
* 
chkPå
 = (FFT_COMPLEX*)(
evÆ
);

408 
m©Sç
 = 
§cDOF
*
ågDOF
;

409 
díSç
 = 
§cDOF
;

410 
chkSç
 = 
ågDOF
;

412 
ªÆ_t
 
√wÆpha
 = 
ƒmfc
;

413 
i
=0; i<
ågDOF
; i++)

414 
k
=0; k<
§cDOF
; k++) {

415 
m©Off
 = 
k
*
ågDOF
 + 
i
;

416 
díOff
 = 
k
;

417 
chkOff
 = 
i
;

418 
	`poötwi£_mu…
 (
effNum
/2, 
m©På
+
m©Off
, 
m©Sç
, 
díPå
+
díOff
, 
díSç
, 
chkPå
+
chkOff
, 
chkSç
);

424 
	`compuã_if·_åg
 (
AŒ_N
);

428 
	}
}

431 
	$poötwi£_mu…
 (
n
, 
FFT_COMPLEX
* 
x
, 
ix
, FFT_COMPLEX* 
y
, 
iy
, FFT_COMPLEX* 
z
, 
iz
)

433 
i
;

435 
i
 = 0; i < 
n
; i++) {

436 (*
z
)[0] +–(*
x
)[0] * (*
y
)[0] - (*x)[1] * (*y)[1]);

437 (*
z
)[1] +–(*
x
)[0] * (*
y
)[1] + (*x)[1] * (*y)[0]);

438 
x
 = x + 
ix
;

439 
y
 = y + 
iy
;

440 
z
 = z + 
iz
;

443 
	}
}

449 
	$wli°_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

451 
i
, 
j
;

452 
§cDOF
 = 1;

453 
ªÆ_t
 
r
;

454 
Poöt3
 
c
;

455 
Node
* 
¶_pos
;

456 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

457 
Pos
* 
SP
 = 
AŒ_N
->SP;

458 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

460 
¶_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

462 
¶_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

463 
¶_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

464 
¶_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

465 
¶_pos
->
num_±s
 = 
SP
[
UE
].
n
;

467 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

468 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

469 if–
nodeVec
[
i
].
chûd
 == -1) {

470 
j
 = 0; j < 
nodeVec
[
i
].
Wnodes
.
	`size
(); j++) {

471 
§c
 = 
nodeVec
[
i
].
Wnodes
[
j
];

472 if(
nodeVec
[
§c
].
chûd
 =-1 &&ÇodeVec[§c].
§cNum
*
§cDOF
<
	`∂n_size
(
UE
, 
SP
)) {

474 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

478 
c
 = 
	`˚¡î
 (
§c
, 
nodeVec
);

479 
r
 = 
	`ødius
 (
§c
, 
nodeVec
);

480 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
, &
SP
[
UE
]);

481 
¶_pos
->
dí_pŸ
 = &
AŒ_N
->
§c_upw_equ_dí
[
§c
*
	`∂n_size
(
UE
, 
SP
)];

482 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
);

489 
	}
}

495 
	$xli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

497 
i
, 
j
;

498 
ågDOF
 = 1;

499 
Poöt3
 
c
;

500 
ªÆ_t
 
r
;

501 
Node
* 
é_pos
;

502 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

503 
Pos
* 
SP
 = 
AŒ_N
->SP;

504 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

506 
é_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

508 
é_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

509 
é_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

510 
é_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

511 
é_pos
->
num_±s
 = 
SP
[
DC
].
n
;

513 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

514 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

515 
j
 = 0; j < 
nodeVec
[
i
].
Xnodes
.
	`size
(); j++) {

516 
§c
 = 
nodeVec
[
i
].
Xnodes
[
j
];

517 if(
nodeVec
[
i
].
chûd
 =-1 &&ÇodeVec[i].
ågNum
*
ågDOF
<
	`∂n_size
(
DC
, 
SP
)) {

518 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

522 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

523 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

524 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
, &
SP
[
DC
]);

525 
é_pos
->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

527 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
, 
AŒ_N
->
Ns
[
§c
]);

533 
	}
}

538 
	$down_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

540 
ªÆ_t
 
r
;

541 
Poöt3
 
c
;

542 
ªÆ_t
 *
tvÆ
;

543 
ªÆ_t
 *
ddí
;

544 
Node
* 
¶_pos
;

545 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

546 
Pos
* 
SP
 = 
AŒ_N
->SP;

547 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

548 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

551 
	`compuã_DC2DE_m©
 (
TM
, 
SP
);

554 
TM
->
DE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

556 
a
=0;á<2;á++) {

557 
b
=0; b<2; b++) {

558 
c
=0; c<2; c++) {

559 
Index3
 
	`idx
(
a
, 
b
, 
c
);

560 
	`compuã_DE2DC_m©
 (
idx
, 
TM
, 
SP
);

566 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

567 i‡(
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

568 i‡(
nodeVec
[
i
].
dïth
 >= 3) {

569 
∑ª¡
 = 
nodeVec
[
i
].parent;

570 
Index3
 
	`cidx
(
nodeVec
[
i
].
∑th2Node
-2 *ÇodeVec[
∑ª¡
].path2Node);

572 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

573 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
∑ª¡
*
	`∂n_size
(
DE
, 
SP
)];

574 
§cDOF
 = 1;

575 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

576 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

577 
l
 = 
nodeVec
[
∑ª¡
].
dïth
;

578 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

579 
ªÆ_t
 
s˛vec
[
§cDOF
];

580 
s
=0; s<
§cDOF
; s++)

581 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

582 
˙t
 = 0;

583 
j
=0; j < 
SP
[
DE
].
n
; j++)

584 
s
=0; s < 
§cDOF
; s++) {

585 
tmpDí
[
˙t
] = 
ddí
[˙t] * 
s˛vec
[
s
];

586 
˙t
++;

588 
ªÆ_t
 *
DE2DCii
 = 
TM
->
DE2DC
[
	`cidx
(2)+cidx(1)*2+cidx(0)*2*2];

589 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
DE2DCii
, 
tmpDí
, 1.0, 
tvÆ
);

592 i‡(
nodeVec
[
i
].
dïth
 >= 2) {

594 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

595 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

596 
§cDOF
 = 1;

597 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

598 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

599 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
DC2DE
, 
tvÆ
, 1.0, 
tmpDí
);

602 
l
 = 
nodeVec
[
i
].
dïth
;

603 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

604 
ªÆ_t
 
s˛vec
[
§cDOF
];

605 
s
=0; s<
§cDOF
; s++)

606 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

607 
˙t
 = 0;

608 
j
=0; j < 
SP
[
DE
].
n
; j++)

609 
s
=0; s < 
§cDOF
; s++) {

610 
ddí
[
˙t
] = ddí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

611 
˙t
++;

617 
¶_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

619 
¶_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

620 
¶_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

621 
¶_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

622 
¶_pos
->
num_±s
 = 
SP
[
DE
].
n
;

625 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

626 i‡(
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

627 i‡(
nodeVec
[
i
].
chûd
 == -1) {

629 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

630 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

631 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
, &
SP
[
DE
]);

632 
¶_pos
->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

634 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
);

640 
	}
}

646 
	$c›y_åg_vÆ__˝u
 (
FMMWøµî_t
* 
F
)

648 
i
;

649 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

650 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

652 
i
 = 0; i < 
nodeVec
.
	`size
(); i++)

653 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
)

654 i‡(
nodeVec
[
i
].
chûd
 == -1) {

655 
	`£t_vÆue
 (
nodeVec
[
i
].
ågNum
, 
AŒ_N
->
pŸ_‹ig
, AŒ_N->
Nt
[i].
dí_pŸ
,ÇodeVec[i].
ågOwnVecIdxs
);

659 
	}
}

	@node.h

1 #i‚de‡
__NODE_H__


2 
	#__NODE_H__


	)

4 
	~<ve˘‹
>

5 
	~<f·w3.h
>

6 
	~"ªÆs.h
"

7 
	~"ªÆs_Æig√d.h
"

8 
	~"öput.h
"

10 #i‡
deföed
 (
__˝lu•lus
)

14 
usög
 
«me•a˚
 
	g°d
;

19 
ªÆ_t
 *
	mx
;

20 
ªÆ_t
 *
	my
;

21 
ªÆ_t
 *
	mz
;

22 
ªÆ_t
 *
	mdí_pŸ
;

23 
	mnum_±s
;

24 } 
	tNode
;

26 
	~"å™s.h
"

30 
Node
 *
	mNs
;

31 
Node
 *
	mNt
;

34 
	mve˘‹
<
	mNodeTªe
> *
	mN
;

37 
ªÆ_t
 *
	mtx_‹ig
;

38 
ªÆ_t
 *
	mty_‹ig
;

39 
ªÆ_t
 *
	mtz_‹ig
;

40 
ªÆ_t
 *
	mpŸ_‹ig
;

43 
ªÆ_t
 *
	msx_‹ig
;

44 
ªÆ_t
 *
	msy_‹ig
;

45 
ªÆ_t
 *
	msz_‹ig
;

46 
ªÆ_t
 *
	mdí_‹ig
;

49 
ªÆ_t
 *
	mtx
;

50 
ªÆ_t
 *
	mty
;

51 
ªÆ_t
 *
	mtz
;

52 
ªÆ_t
 *
	mpŸ
;

55 
ªÆ_t
 *
	msx
;

56 
ªÆ_t
 *
	msy
;

57 
ªÆ_t
 *
	msz
;

58 
ªÆ_t
 *
	mdí
;

60 
ªÆ_t
 *
	m§c_upw_equ_dí
;

61 
ªÆ_t
 *
	m§c_upw_chk_vÆ
;

62 
ªÆ_t
 *
	måg_dwn_equ_dí
;

63 
ªÆ_t
 *
	måg_dwn_chk_vÆ
;

65 
ªÆ_t
 *
	meff_dí
;

66 
ªÆ_t
 *
	meff_vÆ
;

69 
Pos
 *
	mSP
;

70 
Pos
 *
	mRP
;

72 
Tøns_m©rix
 *
	mTM
;

74 *
	mTu
;

75 *
	mTv
;

77 
	mve˘‹
<> *
	mnodeLevñ
;

78 } 
	tAŒNodes
;

80 
AŒNodes
* 
lﬂd_§c_nodes
 (
ve˘‹
<
NodeTªe
>& 
nodeVec
);

81 
AŒNodes
* 
lﬂd_åg_nodes
 (
ve˘‹
<
NodeTªe
>& 
nodeVec
);

84 *
	mnode_li°
;

85 
	mnum_li°nodes
;

86 } 
	tLi°
;

89 
Li°
* 
	mL
;

90 *
	mnodñi°_buf„r
;

91 *
	mcou¡s
;

92 *
	moff£ts
;

93 
	mli°_size
;

94 } 
	tAŒLi°s
;

96 
AŒLi°s
* 
lﬂd_li°s
 (
ve˘‹
<
NodeTªe
>& 
nodeVec
);

98 
‰ì_nodes
(
AŒNodes
 *);

99 
‰ì_li°s
(
AŒLi°s
 *);

101 
gë_£c⁄ds
();

105 
¸óã
 (
N
, * 
di°ributi⁄
, 
AŒNodes
* 
AŒ_N
);

107 
§c_åì
 (
N
, 
±s_max
, 
AŒNodes
* 
AŒ_N
);

109 
åg_åì
 (
N
, 
AŒNodes
* 
AŒ_N
);

111 
∂nDí2EffDíöô
(
l
, 
ªÆ_t
* 
∂n_dí
,Ñól_t* 
eff_dí
, 
FFT_PLAN
& 
f‹∂™
, 
AŒNodes
 *
AŒ_N
);

113 
∂nDí2EffDí
(
l
, 
ªÆ_t
* 
∂n_dí
,Ñól_t* 
eff_dí
,Ñól_t* 
ªg_dí
,Ñól_t* 
tmp_dí
, 
FFT_PLAN
& 
f‹∂™
, 
AŒNodes
 *
AŒ_N
);

115 
effVÆ2P VÆöô
(
l
, 
ªÆ_t
* 
eff_vÆ
,Ñól_t* 
∂n_vÆ
, 
FFT_PLAN
& 
öv∂™
, 
AŒNodes
 *
AŒ_N
);

117 
effVÆ2P VÆ
(
l
, 
ªÆ_t
* 
eff_vÆ
,Ñól_t* 
∂n_vÆ
,Ñól_t* 
ªg_vÆ
, 
FFT_PLAN
 
öv∂™
, 
AŒNodes
 *
AŒ_N
);

121 #i‡
deföed
 (
__˝lu•lus
)

	@node_gpu.h

1 #i‡!
deföed
 (
INC_NODE_GPU_H
)

2 
	#INC_NODE_GPU_H


	)

4 
	~"ªÆs.h
"

6 
	töt__gpu__t
;

8 #i‡!
deföed
 (
__CUDACC__
)

9 
poöt4_t
 
	tÊﬂt4
;

12 
	#WARP_SIZE
 32

	)

14 #i‡
deföed
 (
__˝lu•lus
)

18 
	#gpu_check_îr‹
(
Â
Ë
	`gpu_check_îr‹__§˝os
 (Â, 
__FILE__
, 
__LINE__
)

	)

20 
	#dty≥
 

	)

36 
n_poöts_
;

37 
ªÆ_t
* 
x_
;

38 
ªÆ_t
* 
y_
;

39 
ªÆ_t
* 
z_
;

40 
ªÆ_t
* 
w_
;

42 
n_boxes_
;

43 * 
B±r_
;

44 * 
Bn_
;

45 } 
	tBoxes_t
;

49 
n_poöts_
;

50 
dty≥
* 
x_
;

51 
dty≥
* 
y_
;

52 
dty≥
* 
z_
;

53 
dty≥
* 
w_
;

55 
n_boxes_
;

56 * 
B±r_
;

57 * 
Bn_
;

58 } 
	tBoxes__gpu__t
;

62 
n_boxes_
;

63 * 
L_
;

64 * 
På_
;

65 } 
	tULi°_t
;

69 
n_boxes_
;

70 * 
L_
;

71 * 
På_
;

72 } 
	tULi°__gpu__t
;

75 
	sFMMWøµî


77 
AŒNodes
 *
AN
;

80 
Boxes_t
 
S_h_
;

83 
Boxes_t
 
T_h_
;

86 
ULi°_t
 
U_h_
;

89 
Boxes__gpu__t
 
S_d_
;

90 
Boxes__gpu__t
 
T_d_
;

91 
ULi°__gpu__t
 
U_d_
;

93 *
èg_h_
;

95 *
dïth_h_
;

96 *
chûd_h_
;

106 
ªÆ_t
 *
ødius_h_
;

107 
ªÆ_t
 *
˚¡î0_h_
;

108 
ªÆ_t
 *
˚¡î1_h_
;

109 
ªÆ_t
 *
˚¡î2_h_
;

112 *
èg_d_
;

113 *
dïth_d_
;

114 *
chûd_d_
;

115 
dty≥
 *
ødius_d_
;

116 
dty≥
 *
˚¡î0_d_
;

117 
dty≥
 *
˚¡î1_d_
;

118 
dty≥
 *
˚¡î2_d_
;

121 
SP_UC_size
;

122 
SP_UC_size_∑dded
;

123 
ªÆ_t
 *
SP_UC_h_
;

125 
dty≥
 *
SP_UC_d_
;

128 
UC2UE_r
;

129 
UC2UE_r_∑dded
;

130 
UC2UE_c
;

131 
ªÆ_t
 *
UC2UE_h_
;

133 
dty≥
 *
UC2UE_d_
;

136 
UE2UC_r
;

137 
UE2UC_r_∑dded
;

138 
UE2UC_c
;

139 
ªÆ_t
 *
UE2UC_h_
;

141 
dty≥
 *
UE2UC_d_
;

144 
åì_max_dïth
;

145 
ªdu˘i⁄_dïth
;

146 
num_nodes_ªdu˘i⁄
;

147 
ªdu˘i⁄_off£t
;

151 
dty≥
 *
SRC_UPW_EQU_DEN_h_
;

152 
dty≥
 *
SRC_UPW_EQU_DEN_d_
;

155 
li°_size
;

156 *
éi°_h_
;

157 *
vli°_h_
;

158 *
vli°_±r_h_
;

160 
vli°_¨øy_size
;

164 *
éi°_d_
;

165 *
vli°_d_
;

166 *
vli°_±r_d_
;

170 
å™s_¨øys_num
;

171 
dty≥
 *
vli°_å™s_d_
;

173 
dty≥
 *
vli°_§c_d_
;

175 
dty≥
 *
vli°_åg_d_
;

180 
å™s_¨øys_num_∑d
;

181 
dty≥
 *
vli°_å™s_d_ª_
;

183 
num_nodes_∑d
;

184 
dty≥
 *
vli°_§c_d_ª_
;

186 
dty≥
 *
vli°_åg_d_ª_
;

190 
dty≥
 *
ªg_dí_d_
;

191 
dty≥
 *
ªg_dí_if·_d_
;

192 
ªg_dí_size
;

195 
dty≥
 *
â
;

198 
RP_n_
;

207 
dty≥
 *
TRG_DWN_CHK_VAL_h_
;

208 
dty≥
 *
TRG_DWN_CHK_VAL_d_
;

209 
SP_DC_n_
;

210 
SP_DC_n_∑dded_
;

215 
öt3
 *
∑th2Node_h_
;

216 
öt3
 *
∑th2Node_d_
;

221 *
∑ª¡_h_
;

222 *
∑ª¡_d_
;

225 
SP_DE_n_
;

226 
SP_DE_n_∑dded
;

227 
dty≥
 *
TRG_DWN_EQU_DEN_d_
;

230 
DC2DE_r
;

231 
DC2DE_r_∑dded
;

232 
DC2DE_c
;

233 
ªÆ_t
 *
DC2DE_h_
;

234 
dty≥
 *
DC2DE_d_
;

237 
DE2DC_r
;

238 
DE2DC_r_∑dded
;

239 
DE2DC_c
;

240 
ªÆ_t
* 
DE2DC_h_
;

241 
dty≥
 *
DE2DC_d_
;

244 
ex∑nsi⁄_dïth
;

246 
num_nodes_ex∑nsi⁄
;

247 
ex∑nsi⁄_off£t
;

250 
dty≥
 *
SP_DE_h_
;

251 
dty≥
 *
SP_DE_d_
;

255 
SP_UE_n_
;

256 
SP_UE_n_∑dded
;

257 
dty≥
 *
SP_UE_h_
;

258 
dty≥
 *
SP_UE_d_
;

261 
ULi°_t
 
W_h_
;

263 
ULi°__gpu__t
 
W_d_
;

265 * 
§cNum_h_
;

266 * 
§cNum_d_
;

272 
dty≥
 *
SP_DC_h_
;

273 
dty≥
 *
SP_DC_d_
;

275 
ULi°_t
 
X_h_
;

276 
ULi°__gpu__t
 
X_d_
;

278 *
ågNum_h_
;

279 *
ågNum_d_
;

283 #i‡
deföed
 (
__˝lu•lus
)

	@omp.cc

1 
	~<as£π.h
>

2 
	~<m©h.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

7 
	~"vecm©›.h
"

8 
	~"ªÆs_Æig√d.h
"

9 
	~"evÆu©e--basic.h
"

10 
	~"evÆu©e.h
"

11 
	~"timög.h
"

12 
	~"utû.h
"

14 
	~<omp.h
>

20 
	$gë_im∂emíèti⁄_«me
 ()

22 c⁄° * 
fmt__
 = "omp-%d";

23 * 
desc__
 = 
NULL
;

24 
size_t
 
desc_max_Àn__
 = 0;

25 #¥agm®
omp
 
∑øŒñ


27 #¥agm®
omp
 
sögÀ


29 
num_thªads
 = 1;

30 i‡(!
desc__
) {

31 
desc_max_Àn__
 = 
	`°æí
 (
fmt__
) + 16;

32 
desc__
 = (*)
	`mÆloc
 ( (Ë* (
	`°æí
 (
fmt__
) + 16));

33 
	`as£π
 (
desc__
);

34 
	`mem£t
 (
desc__
, 0, 
desc_max_Àn__
);

36 
num_thªads
 = 
	`omp_gë_num_thªads
 ();

37 
	`¢¥ötf
 (
desc__
, 
desc_max_Àn__
, 
fmt__
, 
num_thªads
);

40  
desc__
;

41 
	}
}

47 
	$gë_num_thªads
 ()

49 
¡hªads
;

50 #¥agm®
omp
 
∑øŒñ


52 
¡hªads
 = 
	`omp_gë_num_thªads
();

54  
¡hªads
;

55 
	}
}

59 
	$up_compuã
 (
i
, 
Node
 **
é_pos
, 
AŒNodes
 *
AŒ_N
)

61 
Poöt3
 
c
;

62 
ªÆ_t
 
r
;

63 
Pos
* 
SP
 = 
AŒ_N
->SP;

64 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

65 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

67 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

68 
ªÆ_t
 *
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

70 i‡(
nodeVec
[
i
].
chûd
 == -1) {

72 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

73 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

74 
tid
 = 
	`omp_gë_thªad_num
();

75 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
[
tid
], &
SP
[
UC
]);

76 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
é_pos
[
tid
]->
dí_pŸ
);

77 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
[
tid
], 
AŒ_N
->
Ns
[
i
]);

80 
§cDOF
 = 1;

81 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

82 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

83 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
é_pos
[
tid
]->
dí_pŸ
, 1.0, 
tmpDí
);

86 
l
 = 
nodeVec
[
i
].
dïth
;

87 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

88 
ªÆ_t
 
s˛vec
[
§cDOF
];

89 
s
=0; s<
§cDOF
; s++)

90 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

91 
˙t
 = 0;

92 
i
=0; i < 
SP
[
UE
].
n
; i++)

93 
s
=0; s < 
§cDOF
; s++) {

94 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

95 
˙t
++;

98 i‡(
nodeVec
[
i
].
chûd
 != -1) {

99 
Node
* 
äl_pos
;

100 
äl_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

101 
äl_pos
->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

102 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
äl_pos
->
dí_pŸ
);

103 
a
=0;á<2;á++) {

104 
b
=0; b<2; b++) {

105 
c
=0; c<2; c++) {

106 
Index3
 
	`idx
(
a
,
b
,
c
);

107 
chi
 = 
	`chûd
(
i
, 
idx
, 
nodeVec
);

108 if(
nodeVec
[
chi
].
èg
 & 
LET_SRCNODE
) {

109 
ªÆ_t
 *
dí
 = &
AŒ_N
->
§c_upw_equ_dí
[
chi
*
	`∂n_size
(
UE
, 
SP
)];

110 
§cDOF
 = 1;

111 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

112 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

113 
l
 = 
nodeVec
[
chi
].
dïth
;

114 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

115 
ªÆ_t
 
s˛vec
[
§cDOF
];

116 
s
=0; s<
§cDOF
; s++)

117 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

118 
˙t
 = 0;

119 
i
=0; i < 
SP
[
UE
].
n
; i++)

120 
s
=0; s < 
§cDOF
; s++) {

121 
tmpDí
[
˙t
] = 
dí
[˙t] * 
s˛vec
[
s
];

122 
˙t
++;

124 
ªÆ_t
 *
UE2UCii
 = 
TM
->
UE2UC
[
	`idx
(2)+idx(1)*2+idx(0)*2*2];

125 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
UE2UCii
, 
tmpDí
, 1.0, 
äl_pos
->
dí_pŸ
);

132 
§cDOF
 = 1;

133 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

134 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

135 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
äl_pos
->
dí_pŸ
, 1.0, 
tmpDí
);

138 
l
 = 
nodeVec
[
i
].
dïth
;

139 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

140 
ªÆ_t
 
s˛vec
[
§cDOF
];

141 
s
=0; s<
§cDOF
; s++)

142 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

143 
˙t
 = 0;

144 
i
=0; i < 
SP
[
UE
].
n
; i++)

145 
s
=0; s < 
§cDOF
; s++) {

146 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

147 
˙t
++;

152 
	}
}

156 
	$up_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

158 
i
, 
n
, 
≈
;

159 
Poöt3
 
c
;

160 
ªÆ_t
 
r
;

161 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

162 
Pos
* 
SP
 = 
AŒ_N
->SP;

163 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

164 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

165 
ve˘‹
<>& 
nodeLevñ
 = *
AŒ_N
->nodeLevel;

169 
	`compuã_UC2UE_m©
 (
TM
, 
SP
);

172 
TM
->
UE2UC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

174 
a
=0;á<2;á++) {

175 
b
=0; b<2; b++) {

176 
c
=0; c<2; c++) {

177 
Index3
 
	`idx
(
a
, 
b
, 
c
);

178 
	`compuã_UE2UC_m©
 (
idx
, 
TM
, 
SP
);

183 
¡hªads
 = 
	`gë_num_thªads
 ();

184 
Node
* 
é_pos
[
¡hªads
];

185 
i
 = 0; i < 
¡hªads
; i++) {

186 
é_pos
[
i
] = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

188 
é_pos
[
i
]->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

189 
é_pos
[
i
]->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

190 
é_pos
[
i
]->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

191 
é_pos
[
i
]->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

192 
é_pos
[
i
]->
num_±s
 = 
SP
[
UC
].
n
;

196 
l
 = 
nodeLevñ
.
	`size
();

197 
Àaf_nodes
 = 
nodeLevñ
[
l
-1] -ÇodeLevel[l-2];

198 
bz
 = 
	`gëív__upbs
();

199 
nbz
 = 
	`˚û
((
ªÆ_t
)
Àaf_nodes
/
bz
);

200 i‡(
nbz
 < 1)Çbz = 1;

201 
beg
, 
íd
;

203 
k
 = 0; k < 
nbz
; k++) {

204 
j
 = 
l
-1; j > 3; j--) {

205 i‡(
j
 =
l
-1) {

206 
beg
 = 
nodeLevñ
[
j
-1] + 
k
 * 
bz
;

207 
íd
 = ((
beg
 + 
bz
Ë> 
nodeLevñ
[
j
]) ?ÇodeLevel[j] : (beg + bz);

210 
beg
 = (
k
 =0Ë? 
nodeLevñ
[
j
-1] : 
nodeVec
[beg-1].
∑ª¡
 ;

211 
íd
 = (
k
 =
nbz
-1Ë? 
nodeLevñ
[
j
] : 
nodeVec
[íd-1].
∑ª¡
;

213 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
,
c
,
r
)

214 
i
 = 
beg
; i < 
íd
; i++) {

215 
	`up_compuã
 (
i
, 
é_pos
, 
AŒ_N
);

219 
j
 = 3; j > 0; j--) {

220 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
,
c
,
r
)

221 
i
 = 
nodeLevñ
[
j
-1]; i <ÇodeLevel[j]; i++) {

222 
	`up_compuã
 (
i
, 
é_pos
, 
AŒ_N
);

226 
	}
}

232 
	$uli°_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

234 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

235 i‡(
AŒ_N
) {

236 
i
;

237 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

238 * 
Ti
 = 
AŒ_N
->
Tu
;

240 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
 (
AŒ_N
)

242 
i
;

243 
tid
 = 
	`omp_gë_thªad_num
();

244 
i
 = 
Ti
[
tid
]; i < Ti[tid+1]; i++) {

245 
k
;

246 
k
 = 0; k < 
nodeVec
[
i
].
Unodes
.
	`size
(); k++) {

247 
§c
 = 
nodeVec
[
i
].
Unodes
[
k
];

248 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

254 
	}
}

260 
	$uli°__dúe˘_evÆu©i⁄
 (
Node
 
åg
, Nodê
§c
)

262 
i
, 
j
;

263 
ªÆ_t
 
x
, 
y
, 
z
, 
r2
, 
r
;

265 
i
 = 0; i < 
åg
.
num_±s
; i++) {

266 
ªÆ_t
 
tx
 = 
åg
.
x
[
i
];

267 
ªÆ_t
 
ty
 = 
åg
.
y
[
i
];

268 
ªÆ_t
 
tz
 = 
åg
.
z
[
i
];

269 
ªÆ_t
 
td
 = 0.0;

270 
j
 = 0; j < 
§c
.
num_±s
; j++) {

271 
x
 = 
tx
 - 
§c
.x[
j
];

272 
y
 = 
ty
 - 
§c
.y[
j
];

273 
z
 = 
tz
 - 
§c
.z[
j
];

274 
r2
 = 
x
*x + 
y
*y + 
z
*z;

275 #i‡!
	`deföed
 (
USE_FLOAT
)

276 
r
 = 
	`sqπ
(
r2
);

278 
r
 = 
	`sqπf
(
r2
);

280 i‡(
r
 != 0)

281 
td
 +
§c
.
dí_pŸ
[
j
] / 
r
;

283 
åg
.
dí_pŸ
[
i
] +
OOFP_R
 * 
td
;

287 
	}
}

290 
	$mykî√l
 (
¢
, 
ä
, 
ªÆ_t
* 
x1
,Ñól_t* 
x2
,Ñól_t* 
x3
,

291 
ªÆ_t
* 
y1
,Ñól_t* 
y2
,Ñól_t* 
y3
,

292 
ªÆ_t
* 
m©
,Ñól_t* 
ødii
,Ñól_à*
f‹˚_Ve˘‹
)

294 
i
, 
j
;

295 
ªÆ_t
 
x
, 
y
, 
z
, 
r2
, 
r
;

297 
i
 = 0; i < 
¢
; i++) {

298 
ªÆ_t
 
sx
 = 
x1
[
i
];

299 
ªÆ_t
 
sy
 = 
x2
[
i
];

300 
ªÆ_t
 
sz
 = 
x3
[
i
];

301 
ªÆ_t
 
td
 = 0.0;

302 
j
 = 0; j < 
ä
; j++) {

303 
x
 = 
sx
 - 
y1
[
j
];

304 
y
 = 
sy
 - 
y2
[
j
];

305 
z
 = 
sz
 - 
y3
[
j
];

306 
r2
 = 
x
*x + 
y
*y + 
z
*z;

307 #i‡!
	`deföed
 (
USE_FLOAT
)

308 
r
 = 
	`sqπ
(
r2
);

310 
r
 = 
	`sqπf
(
r2
);

312 i‡(
r
 != 0)

313 
m©
[
j
+
i
*
ä
] = 
OOFP_R
 / 
r
;

317 
	}
}

322 
	$compuã_f·_§c
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

324 
i
 = 0;

325 
eff_size
;

326 
¡hªads
;

327 
ªÆ_t
* 
edí
;

328 
ªÆ_t
* 
udí
;

329 
ªÆ_t
* 
rdí
;

330 
ªÆ_t
* 
tdí
;

332 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

333 
eff_size
 = 
	`eff_d©a_size
 (
UE
);

334 
Pos
* 
SP
 = 
AŒ_N
->SP;

335 
Pos
* 
RP
 = 
AŒ_N
->RP;

337 #¥agm®
omp
 
∑øŒñ


339 
¡hªads
 = 
	`omp_gë_num_thªads
();

341 
ªÆ_t
* 
ªg_dí
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
 * 
¡hªads
);

342 
ªÆ_t
* 
tmp_dí
 = 
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
 * 
¡hªads
);

344 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

345 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

346 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

347 
	`∂nDí2EffDíöô
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
f‹∂™
, 
AŒ_N
);

350 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
i
, 
edí
, 
udí
, 
rdí
, 
tdí
)

351 
i
 = 1; i<
nodeVec
.
	`size
(); i++) {

352 
tid
 = 
	`omp_gë_thªad_num
();

353 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

354 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

355 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

356 
rdí
 = &
ªg_dí
[
tid
 * 
RP
->
n
];

357 
tdí
 = &
tmp_dí
[
tid
 * 
SP
[
UE
].
n
];

358 
	`∂nDí2EffDí
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
rdí
, 
tdí
, 
f‹∂™
, 
AŒ_N
);

363 
	}
}

368 
	$compuã_f·_å™s
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

370 
§cDOF
;

371 
ågDOF
;

372 
effNum
 = 
	`eff_d©a_size
 (
UE
);

373 
ªÆ_t
 
R
 = 1;

374 
Pos
* 
RP
 = 
AŒ_N
->RP;

375 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

376 
§cDOF
 = 1;

377 
ågDOF
 = 1;

380 
TM
->
UE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 7*7*7);

382 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`sh¨ed
 (
AŒ_N
)

383 
i1
=-3; i1<=3; i1++)

384 
i2
=-3; i2<=3; i2++)

385 
i3
=-3; i3<=3; i3++)

386 i‡(
	`abs
(
i1
)>1 ||ábs(
i2
)>1 ||ábs(
i3
)>1 ) {

388 
idx
;

389 
idx
 = (
i1
+3Ë+ (
i2
+3)*7 + (
i3
+3)*7*7;

390 
ªÆ_t
 
díPosX
[1];

391 
ªÆ_t
 
díPosY
[1];

392 
ªÆ_t
 
díPosZ
[1];

393 
díPosX
[0] = (
ªÆ_t
)(
i1
)*2.0*
R
;

394 
díPosY
[0] = (
ªÆ_t
)(
i2
)*2.0*
R
;

395 
díPosZ
[0] = (
ªÆ_t
)(
i3
)*2.0*
R
;

397 
ªÆ_t
 
chkPosX
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosX); 
	`daxpy
(RP->n, 
R
, RP->
x
, chkPosX) ;

398 
ªÆ_t
 
chkPosY
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosY); 
	`daxpy
(RP->n, 
R
, RP->
y
, chkPosY) ;

399 
ªÆ_t
 
chkPosZ
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosZ); 
	`daxpy
(RP->n, 
R
, RP->
z
, chkPosZ) ;

400 
ªÆ_t
* 
â
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

401 
	`kî√l
(1, 
RP
->
n
, 
díPosX
, 
díPosY
, 
díPosZ
, 
chkPosX
, 
chkPosY
, 
chkPosZ
, 
â
);

404 
ªÆ_t
* 
tmp
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

405 
k
=0; k<
RP
->
n
;k++) {

406 
tmp
[
k
] = 
â
[k];

408 
ªÆ_t
 *
UpwEqu2DwnChkii
 = 
	`ªÆs_Æloc__Æig√d
 (
ågDOF
*
§cDOF
 * 
effNum
);

409 
	`FFT_RE_EXECUTE
(
f‹∂™
, 
tmp
, (
FFT_COMPLEX
*)(
UpwEqu2DwnChkii
));

410 
TM
->
UE2DC
[
idx
] = 
UpwEqu2DwnChkii
;

413 
	}
}

418 
	$compuã_if·_åg
 (
AŒNodes
 *
AŒ_N
)

420 
i
 = 0;

421 
öv£t
 = 0;

422 
eff_size
;

423 
¡hªads
;

424 
ªÆ_t
 *
evÆ
;

425 
ªÆ_t
 *
tvÆ
;

426 
ªÆ_t
 *
rvÆ
;

427 
FFT_PLAN
 
öv∂™
;

428 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

429 
Pos
* 
SP
 = 
AŒ_N
->SP;

430 
Pos
* 
RP
 = 
AŒ_N
->RP;

432 
eff_size
 = 
	`eff_d©a_size
 (
DC
);

433 
öv£t
 == 0) {

434 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

435 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

436 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_size
];

437 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

438 
k
=0; k<
eff_size
; k++)

439 
evÆ
[
k
] *
ƒmfc
;

440 
	`effVÆ2P VÆöô
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
öv∂™
, 
AŒ_N
);

441 
öv£t
 = 1;

443 
i
++;

446 #¥agm®
omp
 
∑øŒñ


448 
¡hªads
 = 
	`omp_gë_num_thªads
();

450 
ªÆ_t
* 
ªg_vÆ
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
 * 
¡hªads
);

452 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
tvÆ
, 
evÆ
, 
rvÆ
)

453 
j
=
i
; j < 
nodeVec
.
	`size
(); j++) {

454 
tid
 = 
	`omp_gë_thªad_num
();

455 if–
nodeVec
[
j
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[j].
Vnodes
.
	`size
()>0) {

456 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
j
*
	`∂n_size
(
DC
, 
SP
)];

457 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
j
 * 
eff_size
];

458 
rvÆ
 = &
ªg_vÆ
[
tid
 * 
RP
->
n
];

459 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

460 
k
=0; k<
eff_size
; k++)

461 
evÆ
[
k
] *
ƒmfc
;

462 
	`effVÆ2P VÆ
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
rvÆ
, 
öv∂™
, 
AŒ_N
);

466 
	`FFT_DESTROY
(
öv∂™
);

468 
	}
}

473 
	$vli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

475 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

476 i‡(
AŒ_N
) {

477 
eff_§c_size
;

478 
eff_åg_size
;

479 
effNum
;

480 
dim
 = 3;

481 
§cDOF
 = 1;

482 
ågDOF
 = 1;

483 
ªÆ_t
 *
edí
;

484 
ªÆ_t
 *
evÆ
;

485 
ªÆ_t
 *
UpwEqu2DwnChkii
;

486 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

487 
Pos
* 
SP
 = 
AŒ_N
->SP;

488 
Pos
* 
RP
 = 
AŒ_N
->RP;

489 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

490 * 
Ti
 = 
AŒ_N
->
Tv
;

492 
FFT_PLAN
 
f‹∂™
;

493 
	`compuã_f·_§c
 (
AŒ_N
, 
f‹∂™
);

494 
	`compuã_f·_å™s
 (
AŒ_N
, 
f‹∂™
);

497 
eff_åg_size
 = 
	`eff_d©a_size
 (
DC
);

498 
eff_§c_size
 = 
	`eff_d©a_size
 (
UE
);

499 
effNum
 = 
eff_§c_size
;

500 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
edí
, 
evÆ
, 
UpwEqu2DwnChkii
)

502 
i
, 
j
;

503 
tid
 = 
	`omp_gë_thªad_num
();

504 
i
 = 
Ti
[
tid
]; i < Ti[tid+1]; i++) {

505 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

506 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_åg_size
];

507 
Poöt3
 
	`gNodeIdxCå
(
	`˚¡î
(
i
, 
nodeVec
));

508 
ªÆ_t
 
D
 = 2.0 * 
	`ødius
 (
i
, 
nodeVec
);

509 
j
 = 0; j < 
nodeVec
[
i
].
Vnodes
.
	`size
(); j++) {

510 
§c
 = 
nodeVec
[
i
].
Vnodes
[
j
];

511 
Poöt3
 
	`viCå
(
	`˚¡î
 (
§c
, 
nodeVec
));

512 
Index3
 
idx
;

513 
d
=0; d<
dim
; d++) {

514 
	`idx
(
d
Ë(
	`round
–(
viCå
[d]-
gNodeIdxCå
[d])/
D
 ));

516 
edí
 = &
AŒ_N
->
eff_dí
[
§c
 * 
eff_§c_size
];

518 
id
 = (
	`idx
(0)+3) + (idx(1)+3)*7 + (idx(2)+3)*7*7;

519 
UpwEqu2DwnChkii
 = 
TM
->
UE2DC
[
id
];

520 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

521 
FFT_COMPLEX
* 
m©På
 = (FFT_COMPLEX*)(
UpwEqu2DwnChkii
);

522 
FFT_COMPLEX
* 
díPå
 = (FFT_COMPLEX*)(
edí
);

523 
FFT_COMPLEX
* 
chkPå
 = (FFT_COMPLEX*)(
evÆ
);

524 
m©Sç
 = 
§cDOF
*
ågDOF
;

525 
díSç
 = 
§cDOF
;

526 
chkSç
 = 
ågDOF
;

528 
ªÆ_t
 
√wÆpha
 = 
ƒmfc
;

529 
i
=0; i<
ågDOF
; i++)

530 
k
=0; k<
§cDOF
; k++) {

531 
m©Off
 = 
k
*
ågDOF
 + 
i
;

532 
díOff
 = 
k
;

533 
chkOff
 = 
i
;

534 
	`poötwi£_mu…
 (
effNum
/2, 
m©På
+
m©Off
, 
m©Sç
, 
díPå
+
díOff
, 
díSç
, 
chkPå
+
chkOff
, 
chkSç
);

541 
	`compuã_if·_åg
 (
AŒ_N
);

545 
	}
}

552 
	$poötwi£_mu…
 (
n
, 
FFT_COMPLEX
* 
x
, 
ix
, FFT_COMPLEX* 
y
, 
iy
, FFT_COMPLEX* 
z
, 
iz
)

554 
i
;

556 
i
 = 0; i < 
n
; i++) {

557 (*
z
)[0] +–(*
x
)[0] * (*
y
)[0] - (*x)[1] * (*y)[1]);

558 (*
z
)[1] +–(*
x
)[0] * (*
y
)[1] + (*x)[1] * (*y)[0]);

559 
x
 = x + 
ix
;

560 
y
 = y + 
iy
;

561 
z
 = z + 
iz
;

564 
	}
}

570 
	$wli°_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

572 
§cDOF
 = 1;

573 
ªÆ_t
 
r
;

574 
Poöt3
 
c
;

575 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

576 
Pos
* 
SP
 = 
AŒ_N
->SP;

577 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

579 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
c
, 
r
)

580 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

581 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

582 if–
nodeVec
[
i
].
chûd
 == -1) {

583 
j
 = 0; j < 
nodeVec
[
i
].
Wnodes
.
	`size
(); j++) {

584 
§c
 = 
nodeVec
[
i
].
Wnodes
[
j
];

585 if(
nodeVec
[
§c
].
chûd
 =-1 &&ÇodeVec[§c].
§cNum
*
§cDOF
<
	`∂n_size
(
UE
, 
SP
)) {

587 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

591 
c
 = 
	`˚¡î
 (
§c
, 
nodeVec
);

592 
r
 = 
	`ødius
 (
§c
, 
nodeVec
);

593 
Node
* 
¶_pos
;

594 
¶_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

596 
¶_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

597 
¶_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

598 
¶_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

599 
¶_pos
->
num_±s
 = 
SP
[
UE
].
n
;

601 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
, &
SP
[
UE
]);

602 
¶_pos
->
dí_pŸ
 = &
AŒ_N
->
§c_upw_equ_dí
[
§c
*
	`∂n_size
(
UE
, 
SP
)];

603 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
);

610 
	}
}

616 
	$xli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

618 
ågDOF
 = 1;

619 
Poöt3
 
c
;

620 
ªÆ_t
 
r
;

621 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

622 
Pos
* 
SP
 = 
AŒ_N
->SP;

623 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

625 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
 (
c
, 
r
)

626 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

627 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

628 
j
 = 0; j < 
nodeVec
[
i
].
Xnodes
.
	`size
(); j++) {

629 
§c
 = 
nodeVec
[
i
].
Xnodes
[
j
];

630 if(
nodeVec
[
i
].
chûd
 =-1 &&ÇodeVec[i].
ågNum
*
ågDOF
<
	`∂n_size
(
DC
, 
SP
)) {

631 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

635 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

636 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

637 
Node
* 
é_pos
;

638 
é_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

640 
é_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

641 
é_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

642 
é_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

643 
é_pos
->
num_±s
 = 
SP
[
DC
].
n
;

645 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
, &
SP
[
DC
]);

646 
é_pos
->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

648 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
, 
AŒ_N
->
Ns
[
§c
]);

654 
	}
}

659 
	$down_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

661 
i
;

662 
ªÆ_t
 
r
;

663 
Poöt3
 
c
;

664 
ªÆ_t
 *
tvÆ
;

665 
ªÆ_t
 *
ddí
;

666 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

667 
Pos
* 
SP
 = 
AŒ_N
->SP;

668 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

669 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

670 
ve˘‹
<>& 
nodeLevñ
 = *
AŒ_N
->nodeLevel;

673 
	`compuã_DC2DE_m©
 (
TM
, 
SP
);

676 
TM
->
DE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

678 
a
=0;á<2;á++) {

679 
b
=0; b<2; b++) {

680 
c
=0; c<2; c++) {

681 
Index3
 
	`idx
(
a
, 
b
, 
c
);

682 
	`compuã_DE2DC_m©
 (
idx
, 
TM
, 
SP
);

687 
¡hªads
 = 
	`gë_num_thªads
();

688 
Node
* 
¶_pos
[
¡hªads
];

689 
i
 = 0; i < 
¡hªads
; i++) {

690 
¶_pos
[
i
] = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

692 
¶_pos
[
i
]->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

693 
¶_pos
[
i
]->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

694 
¶_pos
[
i
]->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

695 
¶_pos
[
i
]->
num_±s
 = 
SP
[
DE
].
n
;

699 
j
 = 0; j < 
nodeLevñ
.
	`size
()-1; j++) {

700 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
, 
c
, 
r
, 
tvÆ
, 
ddí
)

701 
i
 = 
nodeLevñ
[
j
]; i <ÇodeLevel[j+1]; i++) {

702 i‡(
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

703 i‡(
nodeVec
[
i
].
dïth
 >= 3) {

704 
∑ª¡
 = 
nodeVec
[
i
].parent;

705 
Index3
 
	`cidx
(
nodeVec
[
i
].
∑th2Node
-2 *ÇodeVec[
∑ª¡
].path2Node);

707 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

708 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
∑ª¡
*
	`∂n_size
(
DE
, 
SP
)];

709 
§cDOF
 = 1;

710 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

711 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

712 
l
 = 
nodeVec
[
∑ª¡
].
dïth
;

713 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

714 
ªÆ_t
 
s˛vec
[
§cDOF
];

715 
s
=0; s<
§cDOF
; s++)

716 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

717 
˙t
 = 0;

718 
j
=0; j < 
SP
[
DE
].
n
; j++)

719 
s
=0; s < 
§cDOF
; s++) {

720 
tmpDí
[
˙t
] = 
ddí
[˙t] * 
s˛vec
[
s
];

721 
˙t
++;

723 
ªÆ_t
 *
DE2DCii
 = 
TM
->
DE2DC
[
	`cidx
(2)+cidx(1)*2+cidx(0)*2*2];

724 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
DE2DCii
, 
tmpDí
, 1.0, 
tvÆ
);

727 i‡(
nodeVec
[
i
].
dïth
 >= 2) {

729 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

730 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

731 
§cDOF
 = 1;

732 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

733 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

734 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
DC2DE
, 
tvÆ
, 1.0, 
tmpDí
);

737 
l
 = 
nodeVec
[
i
].
dïth
;

738 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

739 
ªÆ_t
 
s˛vec
[
§cDOF
];

740 
s
=0; s<
§cDOF
; s++)

741 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

742 
˙t
 = 0;

743 
j
=0; j < 
SP
[
DE
].
n
; j++)

744 
s
=0; s < 
§cDOF
; s++) {

745 
ddí
[
˙t
] = ddí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

746 
˙t
++;

750 i‡(
nodeVec
[
i
].
chûd
 == -1) {

752 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

753 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

754 
tid
 = 
	`omp_gë_thªad_num
();

755 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
[
tid
], &
SP
[
DE
]);

756 
¶_pos
[
tid
]->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

758 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
[
tid
]);

764 
	}
}

770 
	$c›y_åg_vÆ__˝u
 (
FMMWøµî_t
* 
F
)

772 
i
;

773 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

774 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

776 
i
 = 0; i < 
nodeVec
.
	`size
(); i++)

777 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
)

778 i‡(
nodeVec
[
i
].
chûd
 == -1) {

779 
	`£t_vÆue
 (
nodeVec
[
i
].
ågNum
, 
AŒ_N
->
pŸ_‹ig
, AŒ_N->
Nt
[i].
dí_pŸ
,ÇodeVec[i].
ågOwnVecIdxs
);

783 
	}
}

	@omp_sse.cc

1 
	~<as£π.h
>

2 
	~<m©h.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

7 
	~"vecm©›.h
"

8 
	~"ªÆs_Æig√d.h
"

9 
	~"evÆu©e--basic.h
"

10 
	~"evÆu©e.h
"

11 
	~"timög.h
"

12 
	~"utû.h
"

14 
	~<omp.h
>

20 
	$gë_im∂emíèti⁄_«me
 ()

22 c⁄° * 
fmt__
 = "omp_sse-%d";

23 * 
desc__
 = 
NULL
;

24 
size_t
 
desc_max_Àn__
 = 0;

25 #¥agm®
omp
 
∑øŒñ


27 #¥agm®
omp
 
sögÀ


29 
num_thªads
 = 1;

30 i‡(!
desc__
) {

31 
desc_max_Àn__
 = 
	`°æí
 (
fmt__
) + 16;

32 
desc__
 = (*)
	`mÆloc
 ( (Ë* (
	`°æí
 (
fmt__
) + 16));

33 
	`as£π
 (
desc__
);

34 
	`mem£t
 (
desc__
, 0, 
desc_max_Àn__
);

36 
num_thªads
 = 
	`omp_gë_num_thªads
 ();

37 
	`¢¥ötf
 (
desc__
, 
desc_max_Àn__
, 
fmt__
, 
num_thªads
);

40  
desc__
;

41 
	}
}

47 
	$gë_num_thªads
 ()

49 
¡hªads
;

50 #¥agm®
omp
 
∑øŒñ


52 
¡hªads
 = 
	`omp_gë_num_thªads
();

54  
¡hªads
;

55 
	}
}

59 
	$up_compuã
 (
i
, 
Node
 **
é_pos
, 
AŒNodes
 *
AŒ_N
)

61 
Poöt3
 
c
;

62 
ªÆ_t
 
r
;

63 
Pos
* 
SP
 = 
AŒ_N
->SP;

64 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

65 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

67 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

68 
ªÆ_t
 *
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

70 i‡(
nodeVec
[
i
].
chûd
 == -1) {

72 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

73 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

74 
tid
 = 
	`omp_gë_thªad_num
();

75 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
[
tid
], &
SP
[
UC
]);

76 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
é_pos
[
tid
]->
dí_pŸ
);

78 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
[
tid
], 
AŒ_N
->
Ns
[
i
]);

81 
§cDOF
 = 1;

82 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

83 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

84 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
é_pos
[
tid
]->
dí_pŸ
, 1.0, 
tmpDí
);

87 
l
 = 
nodeVec
[
i
].
dïth
;

88 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

89 
ªÆ_t
 
s˛vec
[
§cDOF
];

90 
s
=0; s<
§cDOF
; s++)

91 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

92 
˙t
 = 0;

93 
i
=0; i < 
SP
[
UE
].
n
; i++)

94 
s
=0; s < 
§cDOF
; s++) {

95 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

96 
˙t
++;

99 i‡(
nodeVec
[
i
].
chûd
 != -1) {

100 
Node
* 
äl_pos
;

101 
äl_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

102 
äl_pos
->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

103 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
äl_pos
->
dí_pŸ
);

105 
a
=0;á<2;á++) {

106 
b
=0; b<2; b++) {

107 
c
=0; c<2; c++) {

108 
Index3
 
	`idx
(
a
,
b
,
c
);

109 
chi
 = 
	`chûd
(
i
, 
idx
, 
nodeVec
);

110 if(
nodeVec
[
chi
].
èg
 & 
LET_SRCNODE
) {

111 
ªÆ_t
 *
dí
 = &
AŒ_N
->
§c_upw_equ_dí
[
chi
*
	`∂n_size
(
UE
, 
SP
)];

112 
§cDOF
 = 1;

113 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

114 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

115 
l
 = 
nodeVec
[
chi
].
dïth
;

116 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

117 
ªÆ_t
 
s˛vec
[
§cDOF
];

118 
s
=0; s<
§cDOF
; s++)

119 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

120 
˙t
 = 0;

121 
i
=0; i < 
SP
[
UE
].
n
; i++)

122 
s
=0; s < 
§cDOF
; s++) {

123 
tmpDí
[
˙t
] = 
dí
[˙t] * 
s˛vec
[
s
];

124 
˙t
++;

126 
ªÆ_t
 *
UE2UCii
 = 
TM
->
UE2UC
[
	`idx
(2)+idx(1)*2+idx(0)*2*2];

127 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
UE2UCii
, 
tmpDí
, 1.0, 
äl_pos
->
dí_pŸ
);

134 
§cDOF
 = 1;

135 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

136 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

137 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
äl_pos
->
dí_pŸ
, 1.0, 
tmpDí
);

140 
l
 = 
nodeVec
[
i
].
dïth
;

141 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

142 
ªÆ_t
 
s˛vec
[
§cDOF
];

143 
s
=0; s<
§cDOF
; s++)

144 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

145 
˙t
 = 0;

146 
i
=0; i < 
SP
[
UE
].
n
; i++)

147 
s
=0; s < 
§cDOF
; s++) {

148 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

149 
˙t
++;

154 
	}
}

159 
	$up_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

161 
i
, 
n
, 
≈
;

162 
Poöt3
 
c
;

163 
ªÆ_t
 
r
;

164 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

165 
Pos
* 
SP
 = 
AŒ_N
->SP;

166 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

167 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

168 
ve˘‹
<>& 
nodeLevñ
 = *
AŒ_N
->nodeLevel;

172 
	`compuã_UC2UE_m©
 (
TM
, 
SP
);

175 
TM
->
UE2UC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

177 
a
=0;á<2;á++) {

178 
b
=0; b<2; b++) {

179 
c
=0; c<2; c++) {

180 
Index3
 
	`idx
(
a
, 
b
, 
c
);

181 
	`compuã_UE2UC_m©
 (
idx
, 
TM
, 
SP
);

186 
¡hªads
 = 
	`gë_num_thªads
 ();

187 
Node
* 
é_pos
[
¡hªads
];

188 
i
 = 0; i < 
¡hªads
; i++) {

189 
é_pos
[
i
] = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

191 
é_pos
[
i
]->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

192 
é_pos
[
i
]->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

193 
é_pos
[
i
]->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

194 
é_pos
[
i
]->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

195 
é_pos
[
i
]->
num_±s
 = 
SP
[
UC
].
n
;

200 
l
 = 
nodeLevñ
.
	`size
();

201 
Àaf_nodes
 = 
nodeLevñ
[
l
-1] -ÇodeLevel[l-2];

202 
bz
 = 
	`gëív__upbs
();

203 
nbz
 = 
	`˚û
((
ªÆ_t
)
Àaf_nodes
/
bz
);

204 i‡(
nbz
 < 1)Çbz = 1;

205 
beg
, 
íd
;

207 
k
 = 0; k < 
nbz
; k++) {

208 
j
 = 
l
-1; j > 3; j--) {

209 i‡(
j
 =
l
-1) {

210 
beg
 = 
nodeLevñ
[
j
-1] + 
k
 * 
bz
;

211 
íd
 = ((
beg
 + 
bz
Ë> 
nodeLevñ
[
j
]) ?ÇodeLevel[j] : (beg + bz);

214 
beg
 = (
k
 =0Ë? 
nodeLevñ
[
j
-1] : 
nodeVec
[beg-1].
∑ª¡
 ;

215 
íd
 = (
k
 =
nbz
-1Ë? 
nodeLevñ
[
j
] : 
nodeVec
[íd-1].
∑ª¡
;

217 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
,
c
,
r
)

218 
i
 = 
beg
; i < 
íd
; i++) {

219 
	`up_compuã
 (
i
, 
é_pos
, 
AŒ_N
);

223 
j
 = 3; j > 0; j--) {

224 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
,
c
,
r
)

225 
i
 = 
nodeLevñ
[
j
-1]; i <ÇodeLevel[j]; i++) {

226 
	`up_compuã
 (
i
, 
é_pos
, 
AŒ_N
);

230 
	}
}

236 
	$uli°_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

238 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

239 i‡(
AŒ_N
) {

240 
i
;

241 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

242 * 
Ti
 = 
AŒ_N
->
Tu
;

244 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
 (
AŒ_N
)

246 
i
;

247 
tid
 = 
	`omp_gë_thªad_num
();

248 
i
 = 
Ti
[
tid
]; i < Ti[tid+1]; i++) {

249 
k
;

250 
k
 = 0; k < 
nodeVec
[
i
].
Unodes
.
	`size
(); k++) {

251 
§c
 = 
nodeVec
[
i
].
Unodes
[
k
];

252 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

258 
	}
}

264 
	$uli°__dúe˘_evÆu©i⁄
 (
Node
 
åg
, Nodê
§c
)

266 
i
;

267 
SIMD_REG
 
OOFP_R__
 = 
	`SIMD_SET1
 (
OOFP_R
);

268 
i
 = 0; (i+
SIMD_LEN
Ë<
åg
.
num_±s
; i += SIMD_LEN) {

269 
SIMD_REG
 
TX__
 = 
	`SIMD_LOAD_U
 (
åg
.
x
 + 
i
);

270 
SIMD_REG
 
TY__
 = 
	`SIMD_LOAD_U
 (
åg
.
y
 + 
i
);

271 
SIMD_REG
 
TZ__
 = 
	`SIMD_LOAD_U
 (
åg
.
z
 + 
i
);

272 
SIMD_REG
 
TD__
 = 
SIMD_ZERO
;

273 
j
;

274 
j
 = 0; j < 
§c
.
num_±s
; j++) {

275 
SIMD_REG
 
SD1__
 = 
	`SIMD_LOAD1
 (
§c
.
dí_pŸ
 + 
j
);

276 
SIMD_REG
 
DX1__
 = 
	`SIMD_SUB
 (
TX__
, 
	`SIMD_LOAD1
 (
§c
.
x
 + 
j
));

277 
SIMD_REG
 
DY1__
 = 
	`SIMD_SUB
 (
TY__
, 
	`SIMD_LOAD1
 (
§c
.
y
 + 
j
));

278 
SIMD_REG
 
DZ1__
 = 
	`SIMD_SUB
 (
TZ__
, 
	`SIMD_LOAD1
 (
§c
.
z
 + 
j
));

279 
SIMD_REG
 
R__
 = 
	`SIMD_MUL
 (
DX1__
, DX1__);

280 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
DY1__
, DY1__));

281 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
DZ1__
, DZ1__));

282 
SIMD_REG
 
TEMP__
 = 
	`SIMD_CMPEQ
 (
R__
, 
SIMD_ZERO
);

283 #i‡!
	`deföed
 (
USE_FLOAT
)

284 
SIMD_REG
 
XHALF__
 = 
	`SIMD_MUL
 (
	`SIMD_SET1
 (0.5), 
R__
);

285 
R__
 = 
	`SIMD_INV_SQRT_S
 (R__);

286 
SIMD_REG
 
RNR__
 = 
	`SIMD_MUL
 (
R__
, R__);

287 
RNR__
 = 
	`SIMD_MUL
 (RNR__, 
XHALF__
);

288 
RNR__
 = 
	`SIMD_SUB
 (
	`SIMD_SET1
 (1.5), RNR__);

289 
R__
 = 
	`SIMD_MUL
 (
RNR__
, R__);

292 
R__
 = 
	`SIMD_INV_SQRT
 (R__);

295 
R__
 = 
	`SIMD_ANDNOT
 (
TEMP__
, R__);

296 
TD__
 = 
	`SIMD_ADD
 (TD__, 
	`SIMD_MUL
 (
SD1__
, 
R__
));

298 
TD__
 = 
	`SIMD_MUL
 (TD__, 
OOFP_R__
);

299 
TD__
 = 
	`SIMD_ADD
 (TD__, 
	`SIMD_LOAD_U
 (
åg
.
dí_pŸ
 + 
i
));

300 
	`SIMD_STORE_U
 (
åg
.
dí_pŸ
 + 
i
, 
TD__
);

302 
i
 < 
åg
.
num_±s
) {

303 
ªÆ_t
 
tx
 = 
åg
.
x
[
i
];

304 
ªÆ_t
 
ty
 = 
åg
.
y
[
i
];

305 
ªÆ_t
 
tz
 = 
åg
.
z
[
i
];

306 
ªÆ_t
 
td
 = 0.0;

307 
j
;

308 
j
 = 0; j < 
§c
.
num_±s
; j++) {

309 
ªÆ_t
 
x
 = 
tx
 - 
§c
.x[
j
];

310 
ªÆ_t
 
y
 = 
ty
 - 
§c
.y[
j
];

311 
ªÆ_t
 
z
 = 
tz
 - 
§c
.z[
j
];

312 
ªÆ_t
 
r2
 = 
x
*x + 
y
*y + 
z
*z;

313 #i‡!
	`deföed
 (
USE_FLOAT
)

314 
ªÆ_t
 
r
 = 
	`sqπ
(
r2
);

316 
ªÆ_t
 
r
 = 
	`sqπf
(
r2
);

318 i‡(
r
 != 0)

319 
td
 +
§c
.
dí_pŸ
[
j
] / 
r
;

321 
åg
.
dí_pŸ
[
i
] +
OOFP_R
 * 
td
;

322 ++
i
;

325 
	}
}

330 
	$mykî√l
 (
¢
, 
ä
, 
ªÆ_t
* 
x1
,Ñól_t* 
x2
,Ñól_t* 
x3
,

331 
ªÆ_t
* 
y1
,Ñól_t* 
y2
,Ñól_t* 
y3
,

332 
ªÆ_t
* 
m©
,Ñól_t* 
ødii
,Ñól_à*
f‹˚_Ve˘‹
)

334 
i
;

335 
SIMD_REG
 
OOFP_R__
 = 
	`SIMD_SET1
 (
OOFP_R
);

337 
i
 = 0; i < 
¢
; i++) {

338 
SIMD_REG
 
SX__
 = 
	`SIMD_LOAD1
 (&
x1
[
i
]);

339 
SIMD_REG
 
SY__
 = 
	`SIMD_LOAD1
 (&
x2
[
i
]);

340 
SIMD_REG
 
SZ__
 = 
	`SIMD_LOAD1
 (&
x3
[
i
]);

341 
j
;

342 
j
 = 0; (j+
SIMD_LEN
Ë<
ä
; j+=SIMD_LEN) {

343 
SIMD_REG
 
TX1__
 = 
	`SIMD_SUB
 (
SX__
, 
	`SIMD_LOAD_U
 (&
y1
[
j
]));

344 
SIMD_REG
 
TY1__
 = 
	`SIMD_SUB
 (
SY__
, 
	`SIMD_LOAD_U
 (&
y2
[
j
]));

345 
SIMD_REG
 
TZ1__
 = 
	`SIMD_SUB
 (
SZ__
, 
	`SIMD_LOAD_U
 (&
y3
[
j
]));

346 
SIMD_REG
 
R__
 = 
	`SIMD_MUL
 (
TX1__
, TX1__);

347 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
TY1__
, TY1__));

348 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
TZ1__
, TZ1__));

349 
SIMD_REG
 
TEMP__
 = 
	`SIMD_CMPEQ
 (
R__
, 
SIMD_ZERO
);

350 #i‡!
	`deföed
 (
USE_FLOAT
)

351 
SIMD_REG
 
XHALF__
 = 
	`SIMD_MUL
 (
	`SIMD_SET1
 (0.5), 
R__
);

352 
R__
 = 
	`SIMD_INV_SQRT_S
 (R__);

353 
SIMD_REG
 
RNR__
 = 
	`SIMD_MUL
 (
R__
, R__);

354 
RNR__
 = 
	`SIMD_MUL
 (RNR__, 
XHALF__
);

355 
RNR__
 = 
	`SIMD_SUB
 (
	`SIMD_SET1
 (1.5), RNR__);

356 
R__
 = 
	`SIMD_MUL
 (
RNR__
, R__);

358 
R__
 = 
	`SIMD_INV_SQRT
 (R__);

360 
R__
 = 
	`SIMD_ANDNOT
 (
TEMP__
, R__);

361 
R__
 = 
	`SIMD_MUL
 (R__, 
OOFP_R__
);

362 
	`SIMD_STORE_U
 (&
m©
[
i
*
ä
+
j
], 
R__
);

365 ; 
j
 < 
ä
; j++) {

366 
dx
, 
dy
, 
dz
;

367 
dr2
;

368 
dr
;

369 
dx
 = 
x1
[
i
] - 
y1
[
j
];

370 
dy
 = 
x2
[
i
] - 
y2
[
j
];

371 
dz
 = 
x3
[
i
] - 
y3
[
j
];

372 
dr2
 = 
dx
*dx + 
dy
*dy + 
dz
*dz;

373 #i‡!
	`deföed
 (
USE_FLOAT
)

374 
dr
 = 
	`sqπ
(
dr2
);

376 
dr
 = 
	`sqπf
(
dr2
);

378 i‡(
dr
 != 0)

379 
m©
[
i
*
ä
+
j
] = 
OOFP_R
 / 
dr
;

383 
	}
}

388 
	$compuã_f·_§c
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

390 
i
 = 0;

391 
eff_size
;

392 
¡hªads
;

393 
ªÆ_t
* 
edí
;

394 
ªÆ_t
* 
udí
;

395 
ªÆ_t
* 
rdí
;

396 
ªÆ_t
* 
tdí
;

398 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

399 
eff_size
 = 
	`eff_d©a_size
 (
UE
);

400 
Pos
* 
SP
 = 
AŒ_N
->SP;

401 
Pos
* 
RP
 = 
AŒ_N
->RP;

403 #¥agm®
omp
 
∑øŒñ


405 
¡hªads
 = 
	`omp_gë_num_thªads
();

407 
ªÆ_t
* 
ªg_dí
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
 * 
¡hªads
);

408 
ªÆ_t
* 
tmp_dí
 = 
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
 * 
¡hªads
);

410 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

411 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

412 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

413 
	`∂nDí2EffDíöô
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
f‹∂™
, 
AŒ_N
);

417 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
i
, 
edí
, 
udí
, 
rdí
, 
tdí
)

418 
i
 = 1; i<
nodeVec
.
	`size
(); i++) {

419 
tid
 = 
	`omp_gë_thªad_num
();

420 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

421 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

422 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

423 
rdí
 = &
ªg_dí
[
tid
 * 
RP
->
n
];

424 
tdí
 = &
tmp_dí
[
tid
 * 
SP
[
UE
].
n
];

425 
	`∂nDí2EffDí
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
rdí
, 
tdí
, 
f‹∂™
, 
AŒ_N
);

430 
	}
}

435 
	$compuã_f·_å™s
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

437 
§cDOF
;

438 
ågDOF
;

439 
effNum
 = 
	`eff_d©a_size
 (
UE
);

440 
ªÆ_t
 
R
 = 1;

441 
Pos
* 
RP
 = 
AŒ_N
->RP;

442 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

443 
§cDOF
 = 1;

444 
ågDOF
 = 1;

447 
TM
->
UE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 7*7*7);

449 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
()

450 
i1
=-3; i1<=3; i1++)

451 
i2
=-3; i2<=3; i2++)

452 
i3
=-3; i3<=3; i3++)

453 i‡(
	`abs
(
i1
)>1 ||ábs(
i2
)>1 ||ábs(
i3
)>1 ) {

455 
idx
;

456 
idx
 = (
i1
+3Ë+ (
i2
+3)*7 + (
i3
+3)*7*7;

457 
ªÆ_t
 
díPosX
[1];

458 
ªÆ_t
 
díPosY
[1];

459 
ªÆ_t
 
díPosZ
[1];

460 
díPosX
[0] = (
ªÆ_t
)(
i1
)*2.0*
R
;

461 
díPosY
[0] = (
ªÆ_t
)(
i2
)*2.0*
R
;

462 
díPosZ
[0] = (
ªÆ_t
)(
i3
)*2.0*
R
;

464 
ªÆ_t
 
chkPosX
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosX); 
	`daxpy
(RP->n, 
R
, RP->
x
, chkPosX) ;

465 
ªÆ_t
 
chkPosY
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosY); 
	`daxpy
(RP->n, 
R
, RP->
y
, chkPosY) ;

466 
ªÆ_t
 
chkPosZ
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosZ); 
	`daxpy
(RP->n, 
R
, RP->
z
, chkPosZ) ;

467 
ªÆ_t
* 
â
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

468 
	`kî√l
(1, 
RP
->
n
, 
díPosX
, 
díPosY
, 
díPosZ
, 
chkPosX
, 
chkPosY
, 
chkPosZ
, 
â
);

471 
ªÆ_t
* 
tmp
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

472 
k
=0; k<
RP
->
n
;k++) {

473 
tmp
[
k
] = 
â
[k];

475 
ªÆ_t
 *
UpwEqu2DwnChkii
 = 
	`ªÆs_Æloc__Æig√d
 (
ågDOF
*
§cDOF
 * 
effNum
);

476 
	`FFT_RE_EXECUTE
(
f‹∂™
, 
tmp
, (
FFT_COMPLEX
*)(
UpwEqu2DwnChkii
));

477 
TM
->
UE2DC
[
idx
] = 
UpwEqu2DwnChkii
;

480 
	}
}

485 
	$compuã_if·_åg
 (
AŒNodes
 *
AŒ_N
)

487 
i
 = 0;

488 
öv£t
 = 0;

489 
eff_size
;

490 
¡hªads
;

491 
ªÆ_t
 *
evÆ
;

492 
ªÆ_t
 *
tvÆ
;

493 
ªÆ_t
 *
rvÆ
;

494 
FFT_PLAN
 
öv∂™
;

495 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

496 
Pos
* 
SP
 = 
AŒ_N
->SP;

497 
Pos
* 
RP
 = 
AŒ_N
->RP;

499 
eff_size
 = 
	`eff_d©a_size
 (
DC
);

500 
öv£t
 == 0) {

501 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

502 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

503 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_size
];

504 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

505 
k
=0; k<
eff_size
; k++)

506 
evÆ
[
k
] *
ƒmfc
;

507 
	`effVÆ2P VÆöô
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
öv∂™
, 
AŒ_N
);

508 
öv£t
 = 1;

510 
i
++;

513 #¥agm®
omp
 
∑øŒñ


515 
¡hªads
 = 
	`omp_gë_num_thªads
();

517 
ªÆ_t
* 
ªg_vÆ
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
 * 
¡hªads
);

519 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
tvÆ
, 
evÆ
, 
rvÆ
)

520 
j
=
i
; j < 
nodeVec
.
	`size
(); j++) {

521 
tid
 = 
	`omp_gë_thªad_num
();

522 if–
nodeVec
[
j
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[j].
Vnodes
.
	`size
()>0) {

523 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
j
*
	`∂n_size
(
DC
, 
SP
)];

524 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
j
 * 
eff_size
];

525 
rvÆ
 = &
ªg_vÆ
[
tid
 * 
RP
->
n
];

526 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

527 
k
=0; k<
eff_size
; k++)

528 
evÆ
[
k
] *
ƒmfc
;

529 
	`effVÆ2P VÆ
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
rvÆ
, 
öv∂™
, 
AŒ_N
);

533 
	`FFT_DESTROY
(
öv∂™
);

535 
	}
}

540 
	$vli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

542 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

543 i‡(
AŒ_N
) {

545 
eff_§c_size
;

546 
eff_åg_size
;

547 
effNum
;

548 
dim
 = 3;

549 
§cDOF
 = 1;

550 
ågDOF
 = 1;

551 
ªÆ_t
 *
edí
;

552 
ªÆ_t
 *
evÆ
;

553 
ªÆ_t
 *
UpwEqu2DwnChkii
;

554 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

555 
Pos
* 
SP
 = 
AŒ_N
->SP;

556 
Pos
* 
RP
 = 
AŒ_N
->RP;

557 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

558 * 
Ti
 = 
AŒ_N
->
Tv
;

560 
FFT_PLAN
 
f‹∂™
;

561 
	`compuã_f·_§c
 (
AŒ_N
, 
f‹∂™
);

562 
	`compuã_f·_å™s
 (
AŒ_N
, 
f‹∂™
);

565 
eff_åg_size
 = 
	`eff_d©a_size
 (
DC
);

566 
eff_§c_size
 = 
	`eff_d©a_size
 (
UE
);

567 
effNum
 = 
eff_§c_size
;

568 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
edí
, 
evÆ
, 
UpwEqu2DwnChkii
)

570 
i
, 
j
;

571 
tid
 = 
	`omp_gë_thªad_num
();

572 
i
 = 
Ti
[
tid
]; i < Ti[tid+1]; i++) {

573 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

574 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_åg_size
];

575 
Poöt3
 
	`gNodeIdxCå
(
	`˚¡î
(
i
, 
nodeVec
));

576 
ªÆ_t
 
D
 = 2.0 * 
	`ødius
 (
i
, 
nodeVec
);

577 
j
 = 0; j < 
nodeVec
[
i
].
Vnodes
.
	`size
(); j++) {

578 
§c
 = 
nodeVec
[
i
].
Vnodes
[
j
];

579 
Poöt3
 
	`viCå
(
	`˚¡î
 (
§c
, 
nodeVec
));

580 
Index3
 
idx
;

581 
d
=0; d<
dim
; d++) {

582 
	`idx
(
d
Ë(
	`round
–(
viCå
[d]-
gNodeIdxCå
[d])/
D
 ));

584 
edí
 = &
AŒ_N
->
eff_dí
[
§c
 * 
eff_§c_size
];

586 
id
 = (
	`idx
(0)+3) + (idx(1)+3)*7 + (idx(2)+3)*7*7;

587 
UpwEqu2DwnChkii
 = 
TM
->
UE2DC
[
id
];

588 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

589 
FFT_COMPLEX
* 
m©På
 = (FFT_COMPLEX*)(
UpwEqu2DwnChkii
);

590 
FFT_COMPLEX
* 
díPå
 = (FFT_COMPLEX*)(
edí
);

591 
FFT_COMPLEX
* 
chkPå
 = (FFT_COMPLEX*)(
evÆ
);

592 
m©Sç
 = 
§cDOF
*
ågDOF
;

593 
díSç
 = 
§cDOF
;

594 
chkSç
 = 
ågDOF
;

596 
ªÆ_t
 
√wÆpha
 = 
ƒmfc
;

597 
i
=0; i<
ågDOF
; i++)

598 
k
=0; k<
§cDOF
; k++) {

599 
m©Off
 = 
k
*
ågDOF
 + 
i
;

600 
díOff
 = 
k
;

601 
chkOff
 = 
i
;

602 
	`poötwi£_mu…
 (
effNum
/2, 
m©På
+
m©Off
, 
m©Sç
, 
díPå
+
díOff
, 
díSç
, 
chkPå
+
chkOff
, 
chkSç
);

609 
	`compuã_if·_åg
 (
AŒ_N
);

613 
	}
}

620 
	$poötwi£_mu…
 (
n
, 
FFT_COMPLEX
* 
x
, 
ix
, FFT_COMPLEX* 
y
, 
iy
, FFT_COMPLEX* 
z
, 
iz
)

622 
i
;

623 
SIMD_REG
 
tmp
 = 
SIMD_SET_1
;

624 
i
 = 0; i + 
SIMD_LEN
 <(
n
 * 2); i+=SIMD_LEN) {

625 
SIMD_REG
 
Z
 = 
	`SIMD_LOAD
 (&(*
z
)[
i
]);

626 
SIMD_REG
 
X
 = 
	`SIMD_LOAD
 (&(*
x
)[
i
]);

627 
SIMD_REG
 
Y
 = 
	`SIMD_LOAD
 (&(*
y
)[
i
]);

629 
SIMD_REG
 
x0
 = 
	`SIMD_SHUFFLE
 (
X
, X, 
SHUFFLE_0
);

630 
SIMD_REG
 
p0
 = 
	`SIMD_MUL
 (
x0
, 
Y
);

631 
Z
 = 
	`SIMD_ADD
 (Z, 
p0
);

633 
x0
 = 
	`SIMD_SHUFFLE
 (
X
, X, 
SHUFFLE_1
);

634 
SIMD_REG
 
y0
 = 
	`SIMD_SHUFFLE
 (
Y
, Y, 
SHUFFLE_2
);

635 
p0
 = 
	`SIMD_MUL
 (
x0
, 
y0
);

636 
p0
 = 
	`SIMD_MUL
 (p0, 
tmp
);

637 
Z
 = 
	`SIMD_ADD
 (Z, 
p0
);

639 
	`SIMD_STORE
 (&(*
z
)[
i
], 
Z
);

642 ; 
i
 < (
n
 * 2); i+=2) {

643 (*
z
)[0] +–(*
x
)[0] * (*
y
)[0] - (*x)[1] * (*y)[1]);

644 (*
z
)[1] +–(*
x
)[0] * (*
y
)[1] + (*x)[1] * (*y)[0]);

645 
x
 = x + 1;

646 
y
 = y + 1;

647 
z
 = z + 1;

650 
	}
}

656 
	$wli°_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

658 
§cDOF
 = 1;

659 
ªÆ_t
 
r
;

660 
Poöt3
 
c
;

661 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

662 
Pos
* 
SP
 = 
AŒ_N
->SP;

663 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

665 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
c
, 
r
)

666 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

667 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

668 if–
nodeVec
[
i
].
chûd
 == -1) {

669 
j
 = 0; j < 
nodeVec
[
i
].
Wnodes
.
	`size
(); j++) {

670 
§c
 = 
nodeVec
[
i
].
Wnodes
[
j
];

671 if(
nodeVec
[
§c
].
chûd
 =-1 &&ÇodeVec[§c].
§cNum
*
§cDOF
<
	`∂n_size
(
UE
, 
SP
)) {

673 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

677 
c
 = 
	`˚¡î
 (
§c
, 
nodeVec
);

678 
r
 = 
	`ødius
 (
§c
, 
nodeVec
);

679 
Node
* 
¶_pos
;

680 
¶_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

682 
¶_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

683 
¶_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

684 
¶_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

685 
¶_pos
->
num_±s
 = 
SP
[
UE
].
n
;

687 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
, &
SP
[
UE
]);

688 
¶_pos
->
dí_pŸ
 = &
AŒ_N
->
§c_upw_equ_dí
[
§c
*
	`∂n_size
(
UE
, 
SP
)];

689 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
);

696 
	}
}

702 
	$xli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

704 
ågDOF
 = 1;

705 
Poöt3
 
c
;

706 
ªÆ_t
 
r
;

707 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

708 
Pos
* 
SP
 = 
AŒ_N
->SP;

709 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

711 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
 (
c
, 
r
)

712 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

713 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

714 
j
 = 0; j < 
nodeVec
[
i
].
Xnodes
.
	`size
(); j++) {

715 
§c
 = 
nodeVec
[
i
].
Xnodes
[
j
];

716 if(
nodeVec
[
i
].
chûd
 =-1 &&ÇodeVec[i].
ågNum
*
ågDOF
<
	`∂n_size
(
DC
, 
SP
)) {

717 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

721 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

722 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

723 
Node
* 
é_pos
;

724 
é_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

726 
é_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

727 
é_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

728 
é_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

729 
é_pos
->
num_±s
 = 
SP
[
DC
].
n
;

731 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
, &
SP
[
DC
]);

732 
é_pos
->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

734 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
, 
AŒ_N
->
Ns
[
§c
]);

740 
	}
}

746 
	$down_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

748 
i
;

749 
ªÆ_t
 
r
;

750 
Poöt3
 
c
;

751 
ªÆ_t
 *
tvÆ
;

752 
ªÆ_t
 *
ddí
;

753 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

754 
Pos
* 
SP
 = 
AŒ_N
->SP;

755 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

756 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

757 
ve˘‹
<>& 
nodeLevñ
 = *
AŒ_N
->nodeLevel;

760 
	`compuã_DC2DE_m©
 (
TM
, 
SP
);

763 
TM
->
DE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

765 
a
=0;á<2;á++) {

766 
b
=0; b<2; b++) {

767 
c
=0; c<2; c++) {

768 
Index3
 
	`idx
(
a
, 
b
, 
c
);

769 
	`compuã_DE2DC_m©
 (
idx
, 
TM
, 
SP
);

774 
¡hªads
 = 
	`gë_num_thªads
();

775 
Node
* 
¶_pos
[
¡hªads
];

776 
i
 = 0; i < 
¡hªads
; i++) {

777 
¶_pos
[
i
] = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

779 
¶_pos
[
i
]->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

780 
¶_pos
[
i
]->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

781 
¶_pos
[
i
]->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

782 
¶_pos
[
i
]->
num_±s
 = 
SP
[
DE
].
n
;

786 
j
 = 0; j < 
nodeLevñ
.
	`size
()-1; j++) {

787 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
, 
c
, 
r
, 
tvÆ
, 
ddí
)

788 
i
 = 
nodeLevñ
[
j
]; i <ÇodeLevel[j+1]; i++) {

789 i‡(
nodeVec
[
i
].
dïth
 >= 3) {

790 
∑ª¡
 = 
nodeVec
[
i
].parent;

791 
Index3
 
	`cidx
(
nodeVec
[
i
].
∑th2Node
-2 *ÇodeVec[
∑ª¡
].path2Node);

793 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

794 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
∑ª¡
*
	`∂n_size
(
DE
, 
SP
)];

795 
§cDOF
 = 1;

796 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

797 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

798 
l
 = 
nodeVec
[
∑ª¡
].
dïth
;

799 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

800 
ªÆ_t
 
s˛vec
[
§cDOF
];

801 
s
=0; s<
§cDOF
; s++)

802 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

803 
˙t
 = 0;

804 
j
=0; j < 
SP
[
DE
].
n
; j++)

805 
s
=0; s < 
§cDOF
; s++) {

806 
tmpDí
[
˙t
] = 
ddí
[˙t] * 
s˛vec
[
s
];

807 
˙t
++;

809 
ªÆ_t
 *
DE2DCii
 = 
TM
->
DE2DC
[
	`cidx
(2)+cidx(1)*2+cidx(0)*2*2];

810 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
DE2DCii
, 
tmpDí
, 1.0, 
tvÆ
);

813 i‡(
nodeVec
[
i
].
dïth
 >= 2) {

815 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

816 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

817 
§cDOF
 = 1;

818 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

819 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

820 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
DC2DE
, 
tvÆ
, 1.0, 
tmpDí
);

823 
l
 = 
nodeVec
[
i
].
dïth
;

824 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

825 
ªÆ_t
 
s˛vec
[
§cDOF
];

826 
s
=0; s<
§cDOF
; s++)

827 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

828 
˙t
 = 0;

829 
j
=0; j < 
SP
[
DE
].
n
; j++)

830 
s
=0; s < 
§cDOF
; s++) {

831 
ddí
[
˙t
] = ddí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

832 
˙t
++;

837 i‡(
nodeVec
[
i
].
chûd
 == -1) {

839 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

840 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

841 
tid
 = 
	`omp_gë_thªad_num
();

842 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
[
tid
], &
SP
[
DE
]);

843 
¶_pos
[
tid
]->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

845 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
[
tid
]);

850 
	}
}

856 
	$c›y_åg_vÆ__˝u
 (
FMMWøµî_t
* 
F
)

858 
i
;

859 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

860 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

862 
i
 = 0; i < 
nodeVec
.
	`size
(); i++)

863 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
)

864 i‡(
nodeVec
[
i
].
chûd
 == -1) {

865 
	`£t_vÆue
 (
nodeVec
[
i
].
ågNum
, 
AŒ_N
->
pŸ_‹ig
, AŒ_N->
Nt
[i].
dí_pŸ
,ÇodeVec[i].
ågOwnVecIdxs
);

869 
	}
}

	@omp_sse_block.cc

1 
	~<as£π.h
>

2 
	~<m©h.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°döt.h
>

6 
	~<°rög.h
>

8 
	~"vecm©›.h
"

9 
	~"ªÆs_Æig√d.h
"

10 
	~"evÆu©e--basic.h
"

11 
	~"evÆu©e.h
"

12 
	~"utû.h
"

13 
	~"timög.h
"

15 
	~<omp.h
>

21 
	$gë_im∂emíèti⁄_«me
 ()

23 c⁄° * 
fmt__
 = "omp_sse-%d";

24 * 
desc__
 = 
NULL
;

25 
size_t
 
desc_max_Àn__
 = 0;

26 #¥agm®
omp
 
∑øŒñ


28 #¥agm®
omp
 
sögÀ


30 
num_thªads
 = 1;

31 i‡(!
desc__
) {

32 
desc_max_Àn__
 = 
	`°æí
 (
fmt__
) + 16;

33 
desc__
 = (*)
	`mÆloc
 ( (Ë* (
	`°æí
 (
fmt__
) + 16));

34 
	`as£π
 (
desc__
);

35 
	`mem£t
 (
desc__
, 0, 
desc_max_Àn__
);

37 
num_thªads
 = 
	`omp_gë_num_thªads
 ();

38 
	`¢¥ötf
 (
desc__
, 
desc_max_Àn__
, 
fmt__
, 
num_thªads
);

41  
desc__
;

42 
	}
}

48 
	$gë_num_thªads
 ()

50 
¡hªads
;

51 #¥agm®
omp
 
∑øŒñ


53 
¡hªads
 = 
	`omp_gë_num_thªads
();

55  
¡hªads
;

56 
	}
}

60 
	$up_compuã
 (
i
, 
Node
 **
é_pos
, 
AŒNodes
 *
AŒ_N
)

62 
Poöt3
 
c
;

63 
ªÆ_t
 
r
;

64 
Pos
* 
SP
 = 
AŒ_N
->SP;

65 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

66 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

68 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

69 
ªÆ_t
 *
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

72 i‡(
nodeVec
[
i
].
chûd
 == -1) {

75 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

76 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

77 
tid
 = 
	`omp_gë_thªad_num
();

78 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
[
tid
], &
SP
[
UC
]);

79 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
é_pos
[
tid
]->
dí_pŸ
);

80 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
[
tid
], 
AŒ_N
->
Ns
[
i
]);

83 
§cDOF
 = 1;

84 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

85 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

86 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
é_pos
[
tid
]->
dí_pŸ
, 1.0, 
tmpDí
);

89 
l
 = 
nodeVec
[
i
].
dïth
;

90 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

91 
ªÆ_t
 
s˛vec
[
§cDOF
];

92 
s
=0; s<
§cDOF
; s++)

93 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

94 
˙t
 = 0;

95 
i
=0; i < 
SP
[
UE
].
n
; i++)

96 
s
=0; s < 
§cDOF
; s++) {

97 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

98 
˙t
++;

103 i‡(
nodeVec
[
i
].
chûd
 != -1) {

104 
Node
* 
äl_pos
;

105 
äl_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

106 
äl_pos
->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

107 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
äl_pos
->
dí_pŸ
);

108 
a
=0;á<2;á++) {

109 
b
=0; b<2; b++) {

110 
c
=0; c<2; c++) {

111 
Index3
 
	`idx
(
a
,
b
,
c
);

112 
chi
 = 
	`chûd
(
i
, 
idx
, 
nodeVec
);

113 if(
nodeVec
[
chi
].
èg
 & 
LET_SRCNODE
) {

114 
ªÆ_t
 *
dí
 = &
AŒ_N
->
§c_upw_equ_dí
[
chi
*
	`∂n_size
(
UE
, 
SP
)];

115 
§cDOF
 = 1;

116 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

117 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

118 
l
 = 
nodeVec
[
chi
].
dïth
;

119 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

120 
ªÆ_t
 
s˛vec
[
§cDOF
];

121 
s
=0; s<
§cDOF
; s++)

122 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

123 
˙t
 = 0;

124 
i
=0; i < 
SP
[
UE
].
n
; i++)

125 
s
=0; s < 
§cDOF
; s++) {

126 
tmpDí
[
˙t
] = 
dí
[˙t] * 
s˛vec
[
s
];

127 
˙t
++;

129 
ªÆ_t
 *
UE2UCii
 = 
TM
->
UE2UC
[
	`idx
(2)+idx(1)*2+idx(0)*2*2];

130 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
UE2UCii
, 
tmpDí
, 1.0, 
äl_pos
->
dí_pŸ
);

137 
§cDOF
 = 1;

138 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

139 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

140 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
äl_pos
->
dí_pŸ
, 1.0, 
tmpDí
);

143 
l
 = 
nodeVec
[
i
].
dïth
;

144 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

145 
ªÆ_t
 
s˛vec
[
§cDOF
];

146 
s
=0; s<
§cDOF
; s++)

147 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

148 
˙t
 = 0;

149 
i
=0; i < 
SP
[
UE
].
n
; i++)

150 
s
=0; s < 
§cDOF
; s++) {

151 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

152 
˙t
++;

158 
	}
}

162 
	$up_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

164 
i
, 
n
, 
≈
;

165 
Poöt3
 
c
;

166 
ªÆ_t
 
r
;

167 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

168 
Pos
* 
SP
 = 
AŒ_N
->SP;

169 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

170 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

171 
ve˘‹
<>& 
nodeLevñ
 = *
AŒ_N
->nodeLevel;

174 
	`compuã_UC2UE_m©
 (
TM
, 
SP
);

177 
TM
->
UE2UC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

179 
a
=0;á<2;á++) {

180 
b
=0; b<2; b++) {

181 
c
=0; c<2; c++) {

182 
Index3
 
	`idx
(
a
, 
b
, 
c
);

183 
	`compuã_UE2UC_m©
 (
idx
, 
TM
, 
SP
);

188 
¡hªads
 = 
	`gë_num_thªads
 ();

189 
Node
* 
é_pos
[
¡hªads
];

190 
i
 = 0; i < 
¡hªads
; i++) {

191 
é_pos
[
i
] = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

193 
é_pos
[
i
]->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

194 
é_pos
[
i
]->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

195 
é_pos
[
i
]->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

196 
é_pos
[
i
]->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

197 
é_pos
[
i
]->
num_±s
 = 
SP
[
UC
].
n
;

201 
l
 = 
nodeLevñ
.
	`size
();

202 
Àaf_nodes
 = 
nodeLevñ
[
l
-1] -ÇodeLevel[l-2];

203 
bz
 = 
	`gëív__upbs
();

204 
nbz
 = 
	`˚û
((
ªÆ_t
)
Àaf_nodes
/
bz
);

205 i‡(
nbz
 < 1)Çbz = 1;

206 
beg
, 
íd
;

208 
k
 = 0; k < 
nbz
; k++) {

209 
j
 = 
l
-1; j > 3; j--) {

210 i‡(
j
 =
l
-1) {

211 
beg
 = 
nodeLevñ
[
j
-1] + 
k
 * 
bz
;

212 
íd
 = ((
beg
 + 
bz
Ë> 
nodeLevñ
[
j
]) ?ÇodeLevel[j] : (beg + bz);

215 
beg
 = (
k
 =0Ë? 
nodeLevñ
[
j
-1] : 
nodeVec
[beg-1].
∑ª¡
 ;

216 
íd
 = (
k
 =
nbz
-1Ë? 
nodeLevñ
[
j
] : 
nodeVec
[íd-1].
∑ª¡
;

218 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
,
c
,
r
)

219 
i
 = 
beg
; i < 
íd
; i++) {

220 
	`up_compuã
 (
i
, 
é_pos
, 
AŒ_N
);

225 
j
 = 3; j > 0; j--) {

226 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
,
c
,
r
)

227 
i
 = 
nodeLevñ
[
j
-1]; i <ÇodeLevel[j]; i++) {

228 
	`up_compuã
 (
i
, 
é_pos
, 
AŒ_N
);

232 
	}
}

237 
	$uli°_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

239 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

240 i‡(
AŒ_N
) {

241 
i
;

242 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

243 * 
Ti
 = 
AŒ_N
->
Tu
;

245 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
 (
AŒ_N
)

247 
i
;

248 
uöt64_t
 
sum
 = 0;

249 
tid
 = 
	`omp_gë_thªad_num
();

250 
i
 = 
Ti
[
tid
]; i < Ti[tid+1]; i++) {

251 
k
;

252 
k
 = 0; k < 
nodeVec
[
i
].
Unodes
.
	`size
(); k++) {

253 
§c
 = 
nodeVec
[
i
].
Unodes
[
k
];

254 
sum
 +
AŒ_N
->
Nt
[
i
].
num_±s
 * AŒ_N->
Ns
[
§c
].num_pts;

255 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

261 
	}
}

267 
	$uli°__dúe˘_evÆu©i⁄
 (
Node
 
åg
, Nodê
§c
)

269 
i
;

270 
SIMD_REG
 
OOFP_R__
 = 
	`SIMD_SET1
 (
OOFP_R
);

271 
i
 = 0; (i+
SIMD_LEN
Ë<
åg
.
num_±s
; i += SIMD_LEN) {

272 
SIMD_REG
 
TX__
 = 
	`SIMD_LOAD_U
 (
åg
.
x
 + 
i
);

273 
SIMD_REG
 
TY__
 = 
	`SIMD_LOAD_U
 (
åg
.
y
 + 
i
);

274 
SIMD_REG
 
TZ__
 = 
	`SIMD_LOAD_U
 (
åg
.
z
 + 
i
);

275 
SIMD_REG
 
TD__
 = 
SIMD_ZERO
;

276 
j
;

277 
j
 = 0; j < 
§c
.
num_±s
; j++) {

278 
SIMD_REG
 
SD1__
 = 
	`SIMD_LOAD1
 (
§c
.
dí_pŸ
 + 
j
);

279 
SIMD_REG
 
DX1__
 = 
	`SIMD_SUB
 (
TX__
, 
	`SIMD_LOAD1
 (
§c
.
x
 + 
j
));

280 
SIMD_REG
 
DY1__
 = 
	`SIMD_SUB
 (
TY__
, 
	`SIMD_LOAD1
 (
§c
.
y
 + 
j
));

281 
SIMD_REG
 
DZ1__
 = 
	`SIMD_SUB
 (
TZ__
, 
	`SIMD_LOAD1
 (
§c
.
z
 + 
j
));

282 
SIMD_REG
 
R__
 = 
	`SIMD_MUL
 (
DX1__
, DX1__);

283 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
DY1__
, DY1__));

284 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
DZ1__
, DZ1__));

285 
SIMD_REG
 
TEMP__
 = 
	`SIMD_CMPEQ
 (
R__
, 
SIMD_ZERO
);

286 #i‡!
	`deföed
 (
USE_FLOAT
)

287 
SIMD_REG
 
XHALF__
 = 
	`SIMD_MUL
 (
	`SIMD_SET1
 (0.5), 
R__
);

288 
R__
 = 
	`SIMD_INV_SQRT_S
 (R__);

289 
SIMD_REG
 
RNR__
 = 
	`SIMD_MUL
 (
R__
, R__);

290 
RNR__
 = 
	`SIMD_MUL
 (RNR__, 
XHALF__
);

291 
RNR__
 = 
	`SIMD_SUB
 (
	`SIMD_SET1
 (1.5), RNR__);

292 
R__
 = 
	`SIMD_MUL
 (
RNR__
, R__);

295 
R__
 = 
	`SIMD_INV_SQRT
 (R__);

298 
TD__
 = 
	`SIMD_ADD
 (TD__, 
	`SIMD_MUL
 (
SD1__
, 
R__
));

300 
TD__
 = 
	`SIMD_MUL
 (TD__, 
OOFP_R__
);

301 
TD__
 = 
	`SIMD_ADD
 (TD__, 
	`SIMD_LOAD_U
 (
åg
.
dí_pŸ
 + 
i
));

302 
	`SIMD_STORE_U
 (
åg
.
dí_pŸ
 + 
i
, 
TD__
);

304 
i
 < 
åg
.
num_±s
) {

305 
ªÆ_t
 
tx
 = 
åg
.
x
[
i
];

306 
ªÆ_t
 
ty
 = 
åg
.
y
[
i
];

307 
ªÆ_t
 
tz
 = 
åg
.
z
[
i
];

308 
ªÆ_t
 
td
 = 0.0;

309 
j
;

310 
j
 = 0; j < 
§c
.
num_±s
; j++) {

311 
ªÆ_t
 
x
 = 
tx
 - 
§c
.x[
j
];

312 
ªÆ_t
 
y
 = 
ty
 - 
§c
.y[
j
];

313 
ªÆ_t
 
z
 = 
tz
 - 
§c
.z[
j
];

314 
ªÆ_t
 
r2
 = 
x
*x + 
y
*y + 
z
*z;

315 #i‡!
	`deföed
 (
USE_FLOAT
)

316 
ªÆ_t
 
r
 = 
	`sqπ
(
r2
);

318 
ªÆ_t
 
r
 = 
	`sqπf
(
r2
);

321 
td
 +
§c
.
dí_pŸ
[
j
] / 
r
;

323 
åg
.
dí_pŸ
[
i
] +
OOFP_R
 * 
td
;

324 ++
i
;

327 
	}
}

332 
	$mykî√l
 (
¢
, 
ä
, 
ªÆ_t
* 
x1
,Ñól_t* 
x2
,Ñól_t* 
x3
,

333 
ªÆ_t
* 
y1
,Ñól_t* 
y2
,Ñól_t* 
y3
,

334 
ªÆ_t
* 
m©
,Ñól_t* 
ødii
,Ñól_à*
f‹˚_Ve˘‹
)

336 
i
;

337 
SIMD_REG
 
OOFP_R__
 = 
	`SIMD_SET1
 (
OOFP_R
);

339 
i
 = 0; i < 
¢
; i++) {

340 
SIMD_REG
 
SX__
 = 
	`SIMD_LOAD1
 (&
x1
[
i
]);

341 
SIMD_REG
 
SY__
 = 
	`SIMD_LOAD1
 (&
x2
[
i
]);

342 
SIMD_REG
 
SZ__
 = 
	`SIMD_LOAD1
 (&
x3
[
i
]);

343 
j
;

344 
j
 = 0; (j+
SIMD_LEN
Ë<
ä
; j+=SIMD_LEN) {

345 
SIMD_REG
 
TX1__
 = 
	`SIMD_SUB
 (
SX__
, 
	`SIMD_LOAD_U
 (&
y1
[
j
]));

346 
SIMD_REG
 
TY1__
 = 
	`SIMD_SUB
 (
SY__
, 
	`SIMD_LOAD_U
 (&
y2
[
j
]));

347 
SIMD_REG
 
TZ1__
 = 
	`SIMD_SUB
 (
SZ__
, 
	`SIMD_LOAD_U
 (&
y3
[
j
]));

348 
SIMD_REG
 
R__
 = 
	`SIMD_MUL
 (
TX1__
, TX1__);

349 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
TY1__
, TY1__));

350 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
TZ1__
, TZ1__));

351 
SIMD_REG
 
TEMP__
 = 
	`SIMD_CMPEQ
 (
R__
, 
SIMD_ZERO
);

352 #i‡!
	`deföed
 (
USE_FLOAT
)

353 
SIMD_REG
 
XHALF__
 = 
	`SIMD_MUL
 (
	`SIMD_SET1
 (0.5), 
R__
);

354 
R__
 = 
	`SIMD_INV_SQRT_S
 (R__);

355 
SIMD_REG
 
RNR__
 = 
	`SIMD_MUL
 (
R__
, R__);

356 
RNR__
 = 
	`SIMD_MUL
 (RNR__, 
XHALF__
);

357 
RNR__
 = 
	`SIMD_SUB
 (
	`SIMD_SET1
 (1.5), RNR__);

358 
R__
 = 
	`SIMD_MUL
 (
RNR__
, R__);

360 
R__
 = 
	`SIMD_INV_SQRT
 (R__);

363 
R__
 = 
	`SIMD_MUL
 (R__, 
OOFP_R__
);

364 
	`SIMD_STORE_U
 (&
m©
[
i
*
ä
+
j
], 
R__
);

367 ; 
j
 < 
ä
; j++) {

368 
dx
, 
dy
, 
dz
;

369 
dr2
;

370 
dr
;

371 
dx
 = 
x1
[
i
] - 
y1
[
j
];

372 
dy
 = 
x2
[
i
] - 
y2
[
j
];

373 
dz
 = 
x3
[
i
] - 
y3
[
j
];

374 
dr2
 = 
dx
*dx + 
dy
*dy + 
dz
*dz;

375 #i‡!
	`deföed
 (
USE_FLOAT
)

376 
dr
 = 
	`sqπ
(
dr2
);

378 
dr
 = 
	`sqπf
(
dr2
);

381 
m©
[
i
*
ä
+
j
] = 
OOFP_R
 / 
dr
;

385 
	}
}

390 
	$compuã_f·_§c
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

392 
i
 = 0;

393 
eff_size
;

394 
¡hªads
;

395 
ªÆ_t
* 
edí
;

396 
ªÆ_t
* 
udí
;

397 
ªÆ_t
* 
rdí
;

398 
ªÆ_t
* 
tdí
;

400 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

401 
eff_size
 = 
	`eff_d©a_size
 (
UE
);

402 
Pos
* 
SP
 = 
AŒ_N
->SP;

403 
Pos
* 
RP
 = 
AŒ_N
->RP;

405 #¥agm®
omp
 
∑øŒñ


407 
¡hªads
 = 
	`omp_gë_num_thªads
();

409 
ªÆ_t
* 
ªg_dí
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
 * 
¡hªads
);

410 
ªÆ_t
* 
tmp_dí
 = 
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
 * 
¡hªads
);

412 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

413 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

414 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

415 
	`∂nDí2EffDíöô
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
f‹∂™
, 
AŒ_N
);

418 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
i
, 
edí
, 
udí
, 
rdí
, 
tdí
)

419 
i
 = 1; i<
nodeVec
.
	`size
(); i++) {

420 
tid
 = 
	`omp_gë_thªad_num
();

421 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

422 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

423 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

424 
rdí
 = &
ªg_dí
[
tid
 * 
RP
->
n
];

425 
tdí
 = &
tmp_dí
[
tid
 * 
SP
[
UE
].
n
];

426 
	`∂nDí2EffDí
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
rdí
, 
tdí
, 
f‹∂™
, 
AŒ_N
);

431 
	}
}

436 
	$compuã_f·_å™s
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

438 
§cDOF
;

439 
ågDOF
;

440 
effNum
 = 
	`eff_d©a_size
 (
UE
);

441 
ªÆ_t
 
R
 = 1;

442 
Pos
* 
RP
 = 
AŒ_N
->RP;

443 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

444 
§cDOF
 = 1;

445 
ågDOF
 = 1;

448 
TM
->
UE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 7*7*7);

450 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
()

451 
i1
=-3; i1<=3; i1++)

452 
i2
=-3; i2<=3; i2++)

453 
i3
=-3; i3<=3; i3++)

454 i‡(
	`abs
(
i1
)>1 ||ábs(
i2
)>1 ||ábs(
i3
)>1 ) {

456 
idx
;

457 
idx
 = (
i1
+3Ë+ (
i2
+3)*7 + (
i3
+3)*7*7;

458 
ªÆ_t
 
díPosX
[1];

459 
ªÆ_t
 
díPosY
[1];

460 
ªÆ_t
 
díPosZ
[1];

461 
díPosX
[0] = (
ªÆ_t
)(
i1
)*2.0*
R
;

462 
díPosY
[0] = (
ªÆ_t
)(
i2
)*2.0*
R
;

463 
díPosZ
[0] = (
ªÆ_t
)(
i3
)*2.0*
R
;

465 
ªÆ_t
 
chkPosX
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosX); 
	`daxpy
(RP->n, 
R
, RP->
x
, chkPosX) ;

466 
ªÆ_t
 
chkPosY
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosY); 
	`daxpy
(RP->n, 
R
, RP->
y
, chkPosY) ;

467 
ªÆ_t
 
chkPosZ
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosZ); 
	`daxpy
(RP->n, 
R
, RP->
z
, chkPosZ) ;

468 
ªÆ_t
* 
â
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

469 
	`kî√l
(1, 
RP
->
n
, 
díPosX
, 
díPosY
, 
díPosZ
, 
chkPosX
, 
chkPosY
, 
chkPosZ
, 
â
);

472 
ªÆ_t
* 
tmp
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

473 
k
=0; k<
RP
->
n
;k++) {

474 
tmp
[
k
] = 
â
[k];

476 
ªÆ_t
 *
UpwEqu2DwnChkii
 = 
	`ªÆs_Æloc__Æig√d
 (
ågDOF
*
§cDOF
 * 
effNum
);

477 
	`FFT_RE_EXECUTE
(
f‹∂™
, 
tmp
, (
FFT_COMPLEX
*)(
UpwEqu2DwnChkii
));

478 
TM
->
UE2DC
[
idx
] = 
UpwEqu2DwnChkii
;

481 
	}
}

486 
	$compuã_if·_åg
 (
AŒNodes
 *
AŒ_N
)

488 
i
 = 0;

489 
öv£t
 = 0;

490 
eff_size
;

491 
¡hªads
;

492 
ªÆ_t
 *
evÆ
;

493 
ªÆ_t
 *
tvÆ
;

494 
ªÆ_t
 *
rvÆ
;

495 
FFT_PLAN
 
öv∂™
;

496 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

497 
Pos
* 
SP
 = 
AŒ_N
->SP;

498 
Pos
* 
RP
 = 
AŒ_N
->RP;

500 
eff_size
 = 
	`eff_d©a_size
 (
DC
);

501 
öv£t
 == 0) {

502 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

503 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

504 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_size
];

505 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

506 
k
=0; k<
eff_size
; k++)

507 
evÆ
[
k
] *
ƒmfc
;

508 
	`effVÆ2P VÆöô
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
öv∂™
, 
AŒ_N
);

509 
öv£t
 = 1;

511 
i
++;

514 #¥agm®
omp
 
∑øŒñ


516 
¡hªads
 = 
	`omp_gë_num_thªads
();

518 
ªÆ_t
* 
ªg_vÆ
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
 * 
¡hªads
);

520 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
tvÆ
, 
evÆ
, 
rvÆ
)

521 
j
=
i
; j < 
nodeVec
.
	`size
(); j++) {

522 
tid
 = 
	`omp_gë_thªad_num
();

523 if–
nodeVec
[
j
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[j].
Vnodes
.
	`size
()>0) {

524 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
j
*
	`∂n_size
(
DC
, 
SP
)];

525 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
j
 * 
eff_size
];

526 
rvÆ
 = &
ªg_vÆ
[
tid
 * 
RP
->
n
];

527 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

528 
k
=0; k<
eff_size
; k++)

529 
evÆ
[
k
] *
ƒmfc
;

530 
	`effVÆ2P VÆ
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
rvÆ
, 
öv∂™
, 
AŒ_N
);

534 
	`FFT_DESTROY
(
öv∂™
);

536 
	}
}

541 
	$vli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

543 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

544 i‡(
AŒ_N
) {

545 
eff_§c_size
;

546 
eff_åg_size
;

547 
effNum
;

548 
dim
 = 3;

549 
§cDOF
 = 1;

550 
ågDOF
 = 1;

551 
ªÆ_t
 *
edí
;

552 
ªÆ_t
 *
evÆ
;

553 
ªÆ_t
 *
UpwEqu2DwnChkii
;

554 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

555 
Pos
* 
SP
 = 
AŒ_N
->SP;

556 
Pos
* 
RP
 = 
AŒ_N
->RP;

557 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

558 * 
Ti
 = 
AŒ_N
->
Tv
;

560 
FFT_PLAN
 
f‹∂™
;

562 
	`compuã_f·_§c
 (
AŒ_N
, 
f‹∂™
);

563 
	`compuã_f·_å™s
 (
AŒ_N
, 
f‹∂™
);

566 
eff_åg_size
 = 
	`eff_d©a_size
 (
DC
);

567 
eff_§c_size
 = 
	`eff_d©a_size
 (
UE
);

568 
effNum
 = 
eff_§c_size
;

570 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
edí
, 
evÆ
, 
UpwEqu2DwnChkii
)

572 
i
, 
j
, 
b
;

573 
°_blk
, 
íd_blk
;

574 
bs
 = 
	`gëív__block_size
 ();

575 
å™s_vec_cou¡
 = 7*7*7;

576 
nb
 = 
å™s_vec_cou¡
 / 
bs
;

577 
tid
 = 
	`omp_gë_thªad_num
();

578 
b
 = 0; b < 
nb
; b++) {

579 
°_blk
 = 
b
 * 
bs
;

580 
íd_blk
 = (
b
 =
nb
 - 1Ë? 
å™s_vec_cou¡
 : (b + 1Ë* 
bs
;

581 
i
 = 
Ti
[
tid
]; i < Ti[tid+1]; i++) {

582 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

583 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_åg_size
];

584 
Poöt3
 
	`gNodeIdxCå
(
	`˚¡î
(
i
, 
nodeVec
));

585 
ªÆ_t
 
D
 = 2.0 * 
	`ødius
 (
i
, 
nodeVec
);

586 
j
 = 0; j < 
nodeVec
[
i
].
Vnodes
.
	`size
(); j++) {

587 
§c
 = 
nodeVec
[
i
].
Vnodes
[
j
];

588 
Poöt3
 
	`viCå
(
	`˚¡î
 (
§c
, 
nodeVec
));

589 
Index3
 
idx
;

590 
d
=0; d<
dim
; d++) {

591 
	`idx
(
d
Ë(
	`round
–(
viCå
[d]-
gNodeIdxCå
[d])/
D
 ));

593 
edí
 = &
AŒ_N
->
eff_dí
[
§c
 * 
eff_§c_size
];

595 
id
 = (
	`idx
(0)+3) + (idx(1)+3)*7 + (idx(2)+3)*7*7;

596 
UpwEqu2DwnChkii
 = 
TM
->
UE2DC
[
id
];

597 i‡(
id
 >
°_blk
 && id < 
íd_blk
) {

598 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

599 
FFT_COMPLEX
* 
m©På
 = (FFT_COMPLEX*)(
UpwEqu2DwnChkii
);

600 
FFT_COMPLEX
* 
díPå
 = (FFT_COMPLEX*)(
edí
);

601 
FFT_COMPLEX
* 
chkPå
 = (FFT_COMPLEX*)(
evÆ
);

602 
m©Sç
 = 
§cDOF
*
ågDOF
;

603 
díSç
 = 
§cDOF
;

604 
chkSç
 = 
ågDOF
;

606 
ªÆ_t
 
√wÆpha
 = 
ƒmfc
;

607 
i
=0; i<
ågDOF
; i++)

608 
k
=0; k<
§cDOF
; k++) {

609 
m©Off
 = 
k
*
ågDOF
 + 
i
;

610 
díOff
 = 
k
;

611 
chkOff
 = 
i
;

612 
	`poötwi£_mu…
 (
effNum
/2, 
m©På
+
m©Off
, 
m©Sç
, 
díPå
+
díOff
, 
díSç
, 
chkPå
+
chkOff
, 
chkSç
);

621 
	`compuã_if·_åg
 (
AŒ_N
);

624 
	}
}

631 
	$poötwi£_mu…
 (
n
, 
FFT_COMPLEX
* 
x
, 
ix
, FFT_COMPLEX* 
y
, 
iy
, FFT_COMPLEX* 
z
, 
iz
)

633 
i
;

634 
SIMD_REG
 
tmp
 = 
SIMD_SET_1
;

635 
i
 = 0; i + 
SIMD_LEN
 <(
n
 * 2); i+=SIMD_LEN) {

636 
SIMD_REG
 
Z
 = 
	`SIMD_LOAD
 (&(*
z
)[
i
]);

637 
SIMD_REG
 
X
 = 
	`SIMD_LOAD
 (&(*
x
)[
i
]);

638 
SIMD_REG
 
Y
 = 
	`SIMD_LOAD
 (&(*
y
)[
i
]);

640 
SIMD_REG
 
x0
 = 
	`SIMD_SHUFFLE
 (
X
, X, 
SHUFFLE_0
);

641 
SIMD_REG
 
p0
 = 
	`SIMD_MUL
 (
x0
, 
Y
);

642 
Z
 = 
	`SIMD_ADD
 (Z, 
p0
);

644 
x0
 = 
	`SIMD_SHUFFLE
 (
X
, X, 
SHUFFLE_1
);

645 
SIMD_REG
 
y0
 = 
	`SIMD_SHUFFLE
 (
Y
, Y, 
SHUFFLE_2
);

646 
p0
 = 
	`SIMD_MUL
 (
x0
, 
y0
);

647 
p0
 = 
	`SIMD_MUL
 (p0, 
tmp
);

648 
Z
 = 
	`SIMD_ADD
 (Z, 
p0
);

650 
	`SIMD_STORE
 (&(*
z
)[
i
], 
Z
);

653 ; 
i
 < (
n
 * 2); i+=2) {

654 (*
z
)[0] +–(*
x
)[0] * (*
y
)[0] - (*x)[1] * (*y)[1]);

655 (*
z
)[1] +–(*
x
)[0] * (*
y
)[1] + (*x)[1] * (*y)[0]);

656 
x
 = x + 1;

657 
y
 = y + 1;

658 
z
 = z + 1;

661 
	}
}

667 
	$wli°_ˇlc__˝u
 (
FMMWøµî_t
 *
F
)

669 
§cDOF
 = 1;

670 
ªÆ_t
 
r
;

671 
Poöt3
 
c
;

672 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

673 
Pos
* 
SP
 = 
AŒ_N
->SP;

674 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

676 
¡hªads
 = 
	`gë_num_thªads
();

677 
Node
* 
¶_pos
[
¡hªads
];

678 
i
 = 0; i < 
¡hªads
; i++) {

679 
¶_pos
[
i
] = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

681 
¶_pos
[
i
]->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

682 
¶_pos
[
i
]->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

683 
¶_pos
[
i
]->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

684 
¶_pos
[
i
]->
num_±s
 = 
SP
[
UE
].
n
;

686 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
c
, 
r
)

687 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

688 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

689 if–
nodeVec
[
i
].
chûd
 == -1) {

690 
j
 = 0; j < 
nodeVec
[
i
].
Wnodes
.
	`size
(); j++) {

691 
§c
 = 
nodeVec
[
i
].
Wnodes
[
j
];

692 if(
nodeVec
[
§c
].
chûd
 =-1 &&ÇodeVec[§c].
§cNum
*
§cDOF
<
	`∂n_size
(
UE
, 
SP
)) {

694 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

698 
c
 = 
	`˚¡î
 (
§c
, 
nodeVec
);

699 
r
 = 
	`ødius
 (
§c
, 
nodeVec
);

700 
tid
 = 
	`omp_gë_thªad_num
();

701 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
[
tid
], &
SP
[
UE
]);

702 
¶_pos
[
tid
]->
dí_pŸ
 = &
AŒ_N
->
§c_upw_equ_dí
[
§c
*
	`∂n_size
(
UE
, 
SP
)];

703 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
[
tid
]);

710 
	}
}

716 
	$xli°_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

718 
ågDOF
 = 1;

719 
Poöt3
 
c
;

720 
ªÆ_t
 
r
;

721 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

722 
Pos
* 
SP
 = 
AŒ_N
->SP;

723 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

725 
¡hªads
 = 
	`gë_num_thªads
 ();

727 
Node
* 
é_pos
[
¡hªads
];

728 
i
 = 0; i < 
¡hªads
; i++) {

729 
é_pos
[
i
] = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

731 
é_pos
[
i
]->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

732 
é_pos
[
i
]->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

733 
é_pos
[
i
]->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

734 
é_pos
[
i
]->
num_±s
 = 
SP
[
DC
].
n
;

737 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
 (
c
, 
r
)

738 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

739 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

740 
j
 = 0; j < 
nodeVec
[
i
].
Xnodes
.
	`size
(); j++) {

741 
§c
 = 
nodeVec
[
i
].
Xnodes
[
j
];

742 if(
nodeVec
[
i
].
chûd
 =-1 &&ÇodeVec[i].
ågNum
*
ågDOF
<
	`∂n_size
(
DC
, 
SP
)) {

743 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

747 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

748 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

749 
tid
 = 
	`omp_gë_thªad_num
();

750 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
[
tid
], &
SP
[
DC
]);

751 
é_pos
[
tid
]->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

753 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
[
tid
], 
AŒ_N
->
Ns
[
§c
]);

759 
	}
}

765 
	$down_ˇlc__˝u
 (
FMMWøµî_t
* 
F
)

767 
i
;

768 
ªÆ_t
 
r
;

769 
Poöt3
 
c
;

770 
ªÆ_t
 *
tvÆ
;

771 
ªÆ_t
 *
ddí
;

772 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

773 
Pos
* 
SP
 = 
AŒ_N
->SP;

774 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

775 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

776 
ve˘‹
<>& 
nodeLevñ
 = *
AŒ_N
->nodeLevel;

779 
	`compuã_DC2DE_m©
 (
TM
, 
SP
);

782 
TM
->
DE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

784 
a
=0;á<2;á++) {

785 
b
=0; b<2; b++) {

786 
c
=0; c<2; c++) {

787 
Index3
 
	`idx
(
a
, 
b
, 
c
);

788 
	`compuã_DE2DC_m©
 (
idx
, 
TM
, 
SP
);

793 
¡hªads
 = 
	`gë_num_thªads
();

794 
Node
* 
¶_pos
[
¡hªads
];

795 
i
 = 0; i < 
¡hªads
; i++) {

796 
¶_pos
[
i
] = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

798 
¶_pos
[
i
]->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

799 
¶_pos
[
i
]->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

800 
¶_pos
[
i
]->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

801 
¶_pos
[
i
]->
num_±s
 = 
SP
[
DE
].
n
;

805 
j
 = 0; j < 
nodeLevñ
.
	`size
()-1; j++) {

806 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
, 
c
, 
r
, 
tvÆ
, 
ddí
)

807 
i
 = 
nodeLevñ
[
j
]; i <ÇodeLevel[j+1]; i++) {

808 i‡(
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

809 i‡(
nodeVec
[
i
].
dïth
 >= 3) {

810 
∑ª¡
 = 
nodeVec
[
i
].parent;

811 
Index3
 
	`cidx
(
nodeVec
[
i
].
∑th2Node
-2 *ÇodeVec[
∑ª¡
].path2Node);

813 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

814 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
∑ª¡
*
	`∂n_size
(
DE
, 
SP
)];

815 
§cDOF
 = 1;

816 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

817 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

818 
l
 = 
nodeVec
[
∑ª¡
].
dïth
;

819 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

820 
ªÆ_t
 
s˛vec
[
§cDOF
];

821 
s
=0; s<
§cDOF
; s++)

822 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

823 
˙t
 = 0;

824 
j
=0; j < 
SP
[
DE
].
n
; j++)

825 
s
=0; s < 
§cDOF
; s++) {

826 
tmpDí
[
˙t
] = 
ddí
[˙t] * 
s˛vec
[
s
];

827 
˙t
++;

829 
ªÆ_t
 *
DE2DCii
 = 
TM
->
DE2DC
[
	`cidx
(2)+cidx(1)*2+cidx(0)*2*2];

830 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
DE2DCii
, 
tmpDí
, 1.0, 
tvÆ
);

833 i‡(
nodeVec
[
i
].
dïth
 >= 2) {

835 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

836 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

837 
§cDOF
 = 1;

838 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

839 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

840 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
DC2DE
, 
tvÆ
, 1.0, 
tmpDí
);

843 
l
 = 
nodeVec
[
i
].
dïth
;

844 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

845 
ªÆ_t
 
s˛vec
[
§cDOF
];

846 
s
=0; s<
§cDOF
; s++)

847 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

848 
˙t
 = 0;

849 
j
=0; j < 
SP
[
DE
].
n
; j++)

850 
s
=0; s < 
§cDOF
; s++) {

851 
ddí
[
˙t
] = ddí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

852 
˙t
++;

857 i‡(
nodeVec
[
i
].
chûd
 == -1) {

859 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

860 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

861 
tid
 = 
	`omp_gë_thªad_num
();

862 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
[
tid
], &
SP
[
DE
]);

863 
¶_pos
[
tid
]->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

865 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
[
tid
]);

871 
	}
}

877 
	$c›y_åg_vÆ__˝u
 (
FMMWøµî_t
* 
F
)

879 
i
;

880 
AŒNodes
 *
AŒ_N
 = 
F
->
AN
;

881 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

883 
i
 = 0; i < 
nodeVec
.
	`size
(); i++)

884 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
)

885 i‡(
nodeVec
[
i
].
chûd
 == -1) {

886 
	`£t_vÆue
 (
nodeVec
[
i
].
ågNum
, 
AŒ_N
->
pŸ_‹ig
, AŒ_N->
Nt
[i].
dí_pŸ
,ÇodeVec[i].
ågOwnVecIdxs
);

890 
	}
}

	@omp_sse_no_fusion.cc

1 
	~<as£π.h
>

2 
	~<m©h.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

7 
	~"vecm©›.h
"

8 
	~"ªÆs_Æig√d.h
"

9 
	~"evÆu©e--basic.h
"

11 
	~<omp.h
>

17 
	$uli°_gë_im∂emíèti⁄_«me
 ()

19 c⁄° * 
fmt__
 = "omp_sse-%d";

20 * 
desc__
 = 
NULL
;

21 
size_t
 
desc_max_Àn__
 = 0;

22 #¥agm®
omp
 
∑øŒñ


24 #¥agm®
omp
 
sögÀ


26 
num_thªads
 = 1;

27 i‡(!
desc__
) {

28 
desc_max_Àn__
 = 
	`°æí
 (
fmt__
) + 16;

29 
desc__
 = (*)
	`mÆloc
 ( (Ë* (
	`°æí
 (
fmt__
) + 16));

30 
	`as£π
 (
desc__
);

31 
	`mem£t
 (
desc__
, 0, 
desc_max_Àn__
);

33 
num_thªads
 = 
	`omp_gë_num_thªads
 ();

34 
	`¢¥ötf
 (
desc__
, 
desc_max_Àn__
, 
fmt__
, 
num_thªads
);

37  
desc__
;

38 
	}
}

44 
	$gë_num_thªads
 ()

46 
¡hªads
;

47 #¥agm®
omp
 
∑øŒñ


49 
¡hªads
 = 
	`omp_gë_num_thªads
();

51  
¡hªads
;

52 
	}
}

58 
	$up_ˇlc
 (
AŒNodes
 *
AŒ_N
)

60 
i
, 
n
, 
≈
;

61 
Poöt3
 
c
;

62 
ªÆ_t
 
r
;

63 
Pos
* 
SP
 = 
AŒ_N
->SP;

64 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

65 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

69 
	`compuã_UC2UE_m©
 (
TM
, 
SP
);

72 
TM
->
UE2UC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

74 
a
=0;á<2;á++) {

75 
b
=0; b<2; b++) {

76 
c
=0; c<2; c++) {

77 
Index3
 
	`idx
(
a
, 
b
, 
c
);

78 
	`compuã_UE2UC_m©
 (
idx
, 
TM
, 
SP
);

85 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
,
c
,
r
)

86 
i
 = 
nodeVec
.
	`size
()-1; i >= 0; i--) {

87 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

88 i‡(
nodeVec
[
i
].
dïth
 >= 0) {

89 
ªÆ_t
 *
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

91 i‡(
nodeVec
[
i
].
chûd
 == -1) {

93 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

94 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

95 
Node
* 
é_pos
;

96 
é_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

98 
é_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

99 
é_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

100 
é_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

101 
é_pos
->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

102 
é_pos
->
num_±s
 = 
SP
[
UC
].
n
;

104 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
, &
SP
[
UC
]);

105 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
é_pos
->
dí_pŸ
);

107 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
, 
AŒ_N
->
Ns
[
i
]);

110 
§cDOF
 = 1;

111 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

112 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

113 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
é_pos
->
dí_pŸ
, 1.0, 
tmpDí
);

116 
l
 = 
nodeVec
[
i
].
dïth
;

117 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

118 
ªÆ_t
 
s˛vec
[
§cDOF
];

119 
s
=0; s<
§cDOF
; s++)

120 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

121 
˙t
 = 0;

122 
i
=0; i < 
SP
[
UE
].
n
; i++)

123 
s
=0; s < 
§cDOF
; s++) {

124 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

125 
˙t
++;

132 
i
 = 
nodeVec
.
	`size
()-1; i >= 0; i--) {

133 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

134 i‡(
nodeVec
[
i
].
dïth
 >= 0) {

135 
ªÆ_t
 *
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

136 i‡(
nodeVec
[
i
].
chûd
 != -1) {

137 
Node
* 
é_pos
;

138 
é_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

140 
é_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

141 
é_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

142 
é_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

143 
é_pos
->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

144 
é_pos
->
num_±s
 = 
SP
[
UC
].
n
;

145 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
é_pos
->
dí_pŸ
);

147 
a
=0;á<2;á++) {

148 
b
=0; b<2; b++) {

149 
c
=0; c<2; c++) {

150 
Index3
 
	`idx
(
a
,
b
,
c
);

151 
chi
 = 
	`chûd
(
i
, 
idx
, 
nodeVec
);

152 if(
nodeVec
[
chi
].
èg
 & 
LET_SRCNODE
) {

153 
ªÆ_t
 *
dí
 = &
AŒ_N
->
§c_upw_equ_dí
[
chi
*
	`∂n_size
(
UE
, 
SP
)];

154 
§cDOF
 = 1;

155 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

156 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

157 
l
 = 
nodeVec
[
chi
].
dïth
;

158 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

159 
ªÆ_t
 
s˛vec
[
§cDOF
];

160 
s
=0; s<
§cDOF
; s++)

161 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

162 
˙t
 = 0;

163 
i
=0; i < 
SP
[
UE
].
n
; i++)

164 
s
=0; s < 
§cDOF
; s++) {

165 
tmpDí
[
˙t
] = 
dí
[˙t] * 
s˛vec
[
s
];

166 
˙t
++;

168 
ªÆ_t
 *
UE2UCii
 = 
TM
->
UE2UC
[
	`idx
(2)+idx(1)*2+idx(0)*2*2];

169 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
UE2UCii
, 
tmpDí
, 1.0, 
é_pos
->
dí_pŸ
);

176 
§cDOF
 = 1;

177 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

178 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

179 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
é_pos
->
dí_pŸ
, 1.0, 
tmpDí
);

182 
l
 = 
nodeVec
[
i
].
dïth
;

183 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

184 
ªÆ_t
 
s˛vec
[
§cDOF
];

185 
s
=0; s<
§cDOF
; s++)

186 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

187 
˙t
 = 0;

188 
i
=0; i < 
SP
[
UE
].
n
; i++)

189 
s
=0; s < 
§cDOF
; s++) {

190 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

191 
˙t
++;

198 
	}
}

204 
	$uli°_ˇlc
 (
AŒNodes
 *
AŒ_N
)

206 i‡(
AŒ_N
) {

207 
i
;

208 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

209 * 
Ti
 = 
AŒ_N
->
Tu
;

211 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
 (
AŒ_N
)

213 
i
;

214 
tid
 = 
	`omp_gë_thªad_num
();

215 
i
 = 
Ti
[
tid
]; i < Ti[tid+1]; i++) {

216 
k
;

217 
k
 = 0; k < 
nodeVec
[
i
].
Unodes
.
	`size
(); k++) {

218 
§c
 = 
nodeVec
[
i
].
Unodes
[
k
];

219 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

225 
	}
}

231 
	$uli°__dúe˘_evÆu©i⁄
 (
Node
 
åg
, Nodê
§c
)

233 
i
, 
j
;

234 
ªÆ_t
* 
m©
 = 
	`ªÆs_Æloc__Æig√d
 (
åg
.
num_±s
*
§c
.num_pts);

235 
SIMD_REG
 
OOFP_R__
 = 
	`SIMD_SET1
 (
OOFP_R
);

236 
i
 = 0; i < 
§c
.
num_±s
; i++) {

237 
SIMD_REG
 
SX__
 = 
	`SIMD_LOAD1
 (
§c
.
x
 + 
i
);

238 
SIMD_REG
 
SY__
 = 
	`SIMD_LOAD1
 (
§c
.
y
 + 
i
);

239 
SIMD_REG
 
SZ__
 = 
	`SIMD_LOAD1
 (
§c
.
z
 + 
i
);

240 
j
 = 0; (j+
SIMD_LEN
Ë<
åg
.
num_±s
; j+=SIMD_LEN) {

241 
SIMD_REG
 
DX1__
 = 
	`SIMD_SUB
 (
SX__
, 
	`SIMD_LOAD_U
 (
åg
.
x
 + 
j
));

242 
SIMD_REG
 
DY1__
 = 
	`SIMD_SUB
 (
SY__
, 
	`SIMD_LOAD_U
 (
åg
.
y
 + 
j
));

243 
SIMD_REG
 
DZ1__
 = 
	`SIMD_SUB
 (
SZ__
, 
	`SIMD_LOAD_U
 (
åg
.
z
 + 
j
));

244 
SIMD_REG
 
R__
 = 
	`SIMD_MUL
 (
DX1__
, DX1__);

245 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
DY1__
, DY1__));

246 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
DZ1__
, DZ1__));

247 #i‡!
	`deföed
 (
USE_FLOAT
)

248 
SIMD_REG
 
XHALF__
 = 
	`SIMD_MUL
 (
	`SIMD_SET1
 (0.5), 
R__
);

249 
R__
 = 
	`SIMD_INV_SQRT_S
 (R__);

250 
SIMD_REG
 
RNR__
 = 
	`SIMD_MUL
 (
R__
, R__);

251 
RNR__
 = 
	`SIMD_MUL
 (RNR__, 
XHALF__
);

252 
RNR__
 = 
	`SIMD_SUB
 (
	`SIMD_SET1
 (1.5), RNR__);

253 
R__
 = 
	`SIMD_MUL
 (
RNR__
, R__);

256 
R__
 = 
	`SIMD_INV_SQRT
 (R__);

258 
R__
 = 
	`SIMD_MUL
 (R__, 
OOFP_R__
);

259 
	`SIMD_STORE_U
 (&
m©
[
i
*
åg
.
num_±s
+
j
], 
R__
);

261 ; 
j
 < 
åg
.
num_±s
; j++) {

262 
ªÆ_t
 
x
 = 
§c
.x[
i
] - 
åg
.x[
j
];

263 
ªÆ_t
 
y
 = 
§c
.y[
i
] - 
åg
.y[
j
];

264 
ªÆ_t
 
z
 = 
§c
.z[
i
] - 
åg
.z[
j
];

265 
ªÆ_t
 
r2
 = 
x
*x + 
y
*y + 
z
*z;

266 #i‡!
	`deföed
 (
USE_FLOAT
)

267 
ªÆ_t
 
r
 = 
	`sqπ
(
r2
);

269 
ªÆ_t
 
r
 = 
	`sqπf
(
r2
);

271 
m©
[
i
*
åg
.
num_±s
+
j
] = 
OOFP_R
 / 
r
;

274 
	`dgemv
 (
åg
.
num_±s
, 
§c
.num_±s, 1.0, 
m©
, src.
dí_pŸ
, 1.0,Årg.den_pot);

275 
	`ªÆs_‰ì
 (
m©
);

278 
	}
}

281 
	$mykî√l
 (
¢
, 
ä
, 
ªÆ_t
* 
x1
,Ñól_t* 
x2
,Ñól_t* 
x3
,

282 
ªÆ_t
* 
y1
,Ñól_t* 
y2
,Ñól_t* 
y3
,

283 
ªÆ_t
* 
m©
,Ñól_t* 
ødii
,Ñól_à*
f‹˚_Ve˘‹
)

285 
i
;

286 
SIMD_REG
 
OOFP_R__
 = 
	`SIMD_SET1
 (
OOFP_R
);

288 
i
 = 0; i < 
¢
; i++) {

289 
SIMD_REG
 
SX__
 = 
	`SIMD_LOAD1
 (&
x1
[
i
]);

290 
SIMD_REG
 
SY__
 = 
	`SIMD_LOAD1
 (&
x2
[
i
]);

291 
SIMD_REG
 
SZ__
 = 
	`SIMD_LOAD1
 (&
x3
[
i
]);

292 
j
;

293 
j
 = 0; (j+
SIMD_LEN
Ë<
ä
; j+=SIMD_LEN) {

294 
SIMD_REG
 
TX1__
 = 
	`SIMD_SUB
 (
SX__
, 
	`SIMD_LOAD_U
 (&
y1
[
j
]));

295 
SIMD_REG
 
TY1__
 = 
	`SIMD_SUB
 (
SY__
, 
	`SIMD_LOAD_U
 (&
y2
[
j
]));

296 
SIMD_REG
 
TZ1__
 = 
	`SIMD_SUB
 (
SZ__
, 
	`SIMD_LOAD_U
 (&
y3
[
j
]));

297 
SIMD_REG
 
R__
 = 
	`SIMD_MUL
 (
TX1__
, TX1__);

298 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
TY1__
, TY1__));

299 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
TZ1__
, TZ1__));

300 #i‡!
	`deföed
 (
USE_FLOAT
)

301 
SIMD_REG
 
XHALF__
 = 
	`SIMD_MUL
 (
	`SIMD_SET1
 (0.5), 
R__
);

302 
R__
 = 
	`SIMD_INV_SQRT_S
 (R__);

303 
SIMD_REG
 
RNR__
 = 
	`SIMD_MUL
 (
R__
, R__);

304 
RNR__
 = 
	`SIMD_MUL
 (RNR__, 
XHALF__
);

305 
RNR__
 = 
	`SIMD_SUB
 (
	`SIMD_SET1
 (1.5), RNR__);

306 
R__
 = 
	`SIMD_MUL
 (
RNR__
, R__);

308 
R__
 = 
	`SIMD_INV_SQRT
 (R__);

310 
R__
 = 
	`SIMD_MUL
 (R__, 
OOFP_R__
);

311 
	`SIMD_STORE_U
 (&
m©
[
i
*
ä
+
j
], 
R__
);

314 ; 
j
 < 
ä
; j++) {

315 
dx
, 
dy
, 
dz
;

316 
dr2
;

317 
dr
;

318 
dx
 = 
x1
[
i
] - 
y1
[
j
];

319 
dy
 = 
x2
[
i
] - 
y2
[
j
];

320 
dz
 = 
x3
[
i
] - 
y3
[
j
];

321 
dr2
 = 
dx
*dx + 
dy
*dy + 
dz
*dz;

322 #i‡!
	`deföed
 (
USE_FLOAT
)

323 
dr
 = 
	`sqπ
(
dr2
);

325 
dr
 = 
	`sqπf
(
dr2
);

327 
m©
[
i
*
ä
+
j
] = 
OOFP_R
 / 
dr
;

331 
	}
}

336 
	$compuã_f·_§c
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

338 
i
 = 0;

339 
eff_size
;

340 
¡hªads
;

341 
ªÆ_t
* 
edí
;

342 
ªÆ_t
* 
udí
;

343 
ªÆ_t
* 
rdí
;

344 
ªÆ_t
* 
tdí
;

346 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

347 
eff_size
 = 
	`eff_d©a_size
 (
UE
);

348 
Pos
* 
SP
 = 
AŒ_N
->SP;

349 
Pos
* 
RP
 = 
AŒ_N
->RP;

351 #¥agm®
omp
 
∑øŒñ


353 
¡hªads
 = 
	`omp_gë_num_thªads
();

355 
ªÆ_t
* 
ªg_dí
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
 * 
¡hªads
);

356 
ªÆ_t
* 
tmp_dí
 = 
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
 * 
¡hªads
);

358 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

359 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

360 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

361 
	`∂nDí2EffDíöô
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
f‹∂™
, 
AŒ_N
);

365 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
i
, 
edí
, 
udí
, 
rdí
, 
tdí
)

366 
i
 = 1; i<
nodeVec
.
	`size
(); i++) {

367 
tid
 = 
	`omp_gë_thªad_num
();

368 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

369 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

370 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

371 
rdí
 = &
ªg_dí
[
tid
 * 
RP
->
n
];

372 
tdí
 = &
tmp_dí
[
tid
 * 
SP
[
UE
].
n
];

373 
	`∂nDí2EffDí
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
rdí
, 
tdí
, 
f‹∂™
, 
AŒ_N
);

378 
	}
}

383 
	$compuã_f·_å™s
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

385 
§cDOF
;

386 
ågDOF
;

387 
effNum
 = 
	`eff_d©a_size
 (
UE
);

388 
ªÆ_t
 
R
 = 1;

389 
Pos
* 
RP
 = 
AŒ_N
->RP;

390 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

391 
§cDOF
 = 1;

392 
ågDOF
 = 1;

395 
TM
->
UE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 7*7*7);

397 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
()

398 
i1
=-3; i1<=3; i1++)

399 
i2
=-3; i2<=3; i2++)

400 
i3
=-3; i3<=3; i3++)

401 i‡(
	`abs
(
i1
)>1 ||ábs(
i2
)>1 ||ábs(
i3
)>1 ) {

403 
idx
;

404 
idx
 = (
i1
+3Ë+ (
i2
+3)*7 + (
i3
+3)*7*7;

405 
ªÆ_t
 
díPosX
[1];

406 
ªÆ_t
 
díPosY
[1];

407 
ªÆ_t
 
díPosZ
[1];

408 
díPosX
[0] = (
ªÆ_t
)(
i1
)*2.0*
R
;

409 
díPosY
[0] = (
ªÆ_t
)(
i2
)*2.0*
R
;

410 
díPosZ
[0] = (
ªÆ_t
)(
i3
)*2.0*
R
;

412 
ªÆ_t
 
chkPosX
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosX); 
	`daxpy
(RP->n, 
R
, RP->
x
, chkPosX) ;

413 
ªÆ_t
 
chkPosY
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosY); 
	`daxpy
(RP->n, 
R
, RP->
y
, chkPosY) ;

414 
ªÆ_t
 
chkPosZ
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosZ); 
	`daxpy
(RP->n, 
R
, RP->
z
, chkPosZ) ;

415 
ªÆ_t
* 
â
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

416 
	`kî√l
(1, 
RP
->
n
, 
díPosX
, 
díPosY
, 
díPosZ
, 
chkPosX
, 
chkPosY
, 
chkPosZ
, 
â
);

419 
ªÆ_t
* 
tmp
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

420 
k
=0; k<
RP
->
n
;k++) {

421 
tmp
[
k
] = 
â
[k];

423 
ªÆ_t
 *
UpwEqu2DwnChkii
 = 
	`ªÆs_Æloc__Æig√d
 (
ågDOF
*
§cDOF
 * 
effNum
);

424 
	`FFT_RE_EXECUTE
(
f‹∂™
, 
tmp
, (
FFT_COMPLEX
*)(
UpwEqu2DwnChkii
));

425 
TM
->
UE2DC
[
idx
] = 
UpwEqu2DwnChkii
;

428 
	}
}

433 
	$compuã_if·_åg
 (
AŒNodes
 *
AŒ_N
)

435 
i
 = 0;

436 
öv£t
 = 0;

437 
eff_size
;

438 
¡hªads
;

439 
ªÆ_t
 *
evÆ
;

440 
ªÆ_t
 *
tvÆ
;

441 
ªÆ_t
 *
rvÆ
;

442 
FFT_PLAN
 
öv∂™
;

443 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

444 
Pos
* 
SP
 = 
AŒ_N
->SP;

445 
Pos
* 
RP
 = 
AŒ_N
->RP;

447 
eff_size
 = 
	`eff_d©a_size
 (
DC
);

448 
öv£t
 == 0) {

449 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

450 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

451 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_size
];

452 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

453 
k
=0; k<
eff_size
; k++)

454 
evÆ
[
k
] *
ƒmfc
;

455 
	`effVÆ2P VÆöô
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
öv∂™
, 
AŒ_N
);

456 
öv£t
 = 1;

458 
i
++;

461 #¥agm®
omp
 
∑øŒñ


463 
¡hªads
 = 
	`omp_gë_num_thªads
();

465 
ªÆ_t
* 
ªg_vÆ
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
 * 
¡hªads
);

467 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
tvÆ
, 
evÆ
, 
rvÆ
)

468 
j
=
i
; j < 
nodeVec
.
	`size
(); j++) {

469 
tid
 = 
	`omp_gë_thªad_num
();

470 if–
nodeVec
[
j
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[j].
Vnodes
.
	`size
()>0) {

471 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
j
*
	`∂n_size
(
DC
, 
SP
)];

472 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
j
 * 
eff_size
];

473 
rvÆ
 = &
ªg_vÆ
[
tid
 * 
RP
->
n
];

474 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

475 
k
=0; k<
eff_size
; k++)

476 
evÆ
[
k
] *
ƒmfc
;

477 
	`effVÆ2P VÆ
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
rvÆ
, 
öv∂™
, 
AŒ_N
);

481 
	`FFT_DESTROY
(
öv∂™
);

483 
	}
}

488 
	$vli°_ˇlc
 (
AŒNodes
 *
AŒ_N
)

490 i‡(
AŒ_N
) {

492 
eff_§c_size
;

493 
eff_åg_size
;

494 
effNum
;

495 
dim
 = 3;

496 
§cDOF
 = 1;

497 
ågDOF
 = 1;

498 
ªÆ_t
 *
edí
;

499 
ªÆ_t
 *
evÆ
;

500 
ªÆ_t
 *
UpwEqu2DwnChkii
;

501 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

502 
Pos
* 
SP
 = 
AŒ_N
->SP;

503 
Pos
* 
RP
 = 
AŒ_N
->RP;

504 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

505 * 
Ti
 = 
AŒ_N
->
Tv
;

507 
FFT_PLAN
 
f‹∂™
;

508 
	`compuã_f·_§c
 (
AŒ_N
, 
f‹∂™
);

509 
	`compuã_f·_å™s
 (
AŒ_N
, 
f‹∂™
);

512 
eff_åg_size
 = 
	`eff_d©a_size
 (
DC
);

513 
eff_§c_size
 = 
	`eff_d©a_size
 (
UE
);

514 
effNum
 = 
eff_§c_size
;

515 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
edí
, 
evÆ
, 
UpwEqu2DwnChkii
)

517 
i
, 
j
;

518 
tid
 = 
	`omp_gë_thªad_num
();

519 
i
 = 
Ti
[
tid
]; i < Ti[tid+1]; i++) {

520 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

521 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_åg_size
];

522 
Poöt3
 
	`gNodeIdxCå
(
	`˚¡î
(
i
, 
nodeVec
));

523 
ªÆ_t
 
D
 = 2.0 * 
	`ødius
 (
i
, 
nodeVec
);

524 
j
 = 0; j < 
nodeVec
[
i
].
Vnodes
.
	`size
(); j++) {

525 
§c
 = 
nodeVec
[
i
].
Vnodes
[
j
];

526 
Poöt3
 
	`viCå
(
	`˚¡î
 (
§c
, 
nodeVec
));

527 
Index3
 
idx
;

528 
d
=0; d<
dim
; d++) {

529 
	`idx
(
d
Ë(
	`round
–(
viCå
[d]-
gNodeIdxCå
[d])/
D
 ));

531 
edí
 = &
AŒ_N
->
eff_dí
[
§c
 * 
eff_§c_size
];

533 
id
 = (
	`idx
(0)+3) + (idx(1)+3)*7 + (idx(2)+3)*7*7;

534 
UpwEqu2DwnChkii
 = 
TM
->
UE2DC
[
id
];

535 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

536 
FFT_COMPLEX
* 
m©På
 = (FFT_COMPLEX*)(
UpwEqu2DwnChkii
);

537 
FFT_COMPLEX
* 
díPå
 = (FFT_COMPLEX*)(
edí
);

538 
FFT_COMPLEX
* 
chkPå
 = (FFT_COMPLEX*)(
evÆ
);

539 
m©Sç
 = 
§cDOF
*
ågDOF
;

540 
díSç
 = 
§cDOF
;

541 
chkSç
 = 
ågDOF
;

543 
ªÆ_t
 
√wÆpha
 = 
ƒmfc
;

544 
i
=0; i<
ågDOF
; i++)

545 
k
=0; k<
§cDOF
; k++) {

546 
m©Off
 = 
k
*
ågDOF
 + 
i
;

547 
díOff
 = 
k
;

548 
chkOff
 = 
i
;

549 
	`poötwi£_mu…
 (
effNum
/2, 
m©På
+
m©Off
, 
m©Sç
, 
díPå
+
díOff
, 
díSç
, 
chkPå
+
chkOff
, 
chkSç
);

556 
	`compuã_if·_åg
 (
AŒ_N
);

560 
	}
}

567 
	$poötwi£_mu…
 (
n
, 
FFT_COMPLEX
* 
x
, 
ix
, FFT_COMPLEX* 
y
, 
iy
, FFT_COMPLEX* 
z
, 
iz
)

569 
i
;

570 
SIMD_REG
 
tmp
 = 
SIMD_SET_1
;

571 
i
 = 0; i + 
SIMD_LEN
 <(
n
 * 2); i+=SIMD_LEN) {

572 
SIMD_REG
 
Z
 = 
	`SIMD_LOAD
 (&(*
z
)[
i
]);

573 
SIMD_REG
 
X
 = 
	`SIMD_LOAD
 (&(*
x
)[
i
]);

574 
SIMD_REG
 
Y
 = 
	`SIMD_LOAD
 (&(*
y
)[
i
]);

576 
SIMD_REG
 
x0
 = 
	`SIMD_SHUFFLE
 (
X
, X, 
SHUFFLE_0
);

577 
SIMD_REG
 
p0
 = 
	`SIMD_MUL
 (
x0
, 
Y
);

578 
Z
 = 
	`SIMD_ADD
 (Z, 
p0
);

580 
x0
 = 
	`SIMD_SHUFFLE
 (
X
, X, 
SHUFFLE_1
);

581 
SIMD_REG
 
y0
 = 
	`SIMD_SHUFFLE
 (
Y
, Y, 
SHUFFLE_2
);

582 
p0
 = 
	`SIMD_MUL
 (
x0
, 
y0
);

583 
p0
 = 
	`SIMD_MUL
 (p0, 
tmp
);

584 
Z
 = 
	`SIMD_ADD
 (Z, 
p0
);

586 
	`SIMD_STORE
 (&(*
z
)[
i
], 
Z
);

589 ; 
i
 < (
n
 * 2); i+=2) {

590 (*
z
)[0] +–(*
x
)[0] * (*
y
)[0] - (*x)[1] * (*y)[1]);

591 (*
z
)[1] +–(*
x
)[0] * (*
y
)[1] + (*x)[1] * (*y)[0]);

592 
x
 = x + 1;

593 
y
 = y + 1;

594 
z
 = z + 1;

597 
	}
}

603 
	$wli°_ˇlc
 (
AŒNodes
 *
AŒ_N
)

605 
§cDOF
 = 1;

606 
ªÆ_t
 
r
;

607 
Poöt3
 
c
;

608 
Pos
* 
SP
 = 
AŒ_N
->SP;

609 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

611 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
c
, 
r
)

612 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

613 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

614 if–
nodeVec
[
i
].
chûd
 == -1) {

615 
j
 = 0; j < 
nodeVec
[
i
].
Wnodes
.
	`size
(); j++) {

616 
§c
 = 
nodeVec
[
i
].
Wnodes
[
j
];

617 if(
nodeVec
[
§c
].
chûd
 =-1 &&ÇodeVec[§c].
§cNum
*
§cDOF
<
	`∂n_size
(
UE
, 
SP
)) {

619 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

623 
c
 = 
	`˚¡î
 (
§c
, 
nodeVec
);

624 
r
 = 
	`ødius
 (
§c
, 
nodeVec
);

625 
Node
* 
¶_pos
;

626 
¶_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

628 
¶_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

629 
¶_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

630 
¶_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

631 
¶_pos
->
num_±s
 = 
SP
[
UE
].
n
;

633 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
, &
SP
[
UE
]);

634 
¶_pos
->
dí_pŸ
 = &
AŒ_N
->
§c_upw_equ_dí
[
§c
*
	`∂n_size
(
UE
, 
SP
)];

635 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
);

642 
	}
}

648 
	$xli°_ˇlc
 (
AŒNodes
 *
AŒ_N
)

650 
ågDOF
 = 1;

651 
Poöt3
 
c
;

652 
ªÆ_t
 
r
;

653 
Pos
* 
SP
 = 
AŒ_N
->SP;

654 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

656 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
 (
c
, 
r
)

657 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

658 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

659 
j
 = 0; j < 
nodeVec
[
i
].
Xnodes
.
	`size
(); j++) {

660 
§c
 = 
nodeVec
[
i
].
Xnodes
[
j
];

661 if(
nodeVec
[
i
].
chûd
 =-1 &&ÇodeVec[i].
ågNum
*
ågDOF
<
	`∂n_size
(
DC
, 
SP
)) {

662 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

666 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

667 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

668 
Node
* 
é_pos
;

669 
é_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

671 
é_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

672 
é_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

673 
é_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

674 
é_pos
->
num_±s
 = 
SP
[
DC
].
n
;

676 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
, &
SP
[
DC
]);

677 
é_pos
->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

679 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
, 
AŒ_N
->
Ns
[
§c
]);

685 
	}
}

691 
	$down_ˇlc
 (
AŒNodes
 *
AŒ_N
)

693 
ªÆ_t
 
r
;

694 
Poöt3
 
c
;

695 
ªÆ_t
 *
tvÆ
;

696 
ªÆ_t
 *
ddí
;

697 
Node
* 
¶_pos
;

698 
Pos
* 
SP
 = 
AŒ_N
->SP;

699 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

700 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

703 
	`compuã_DC2DE_m©
 (
TM
, 
SP
);

706 
TM
->
DE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

708 
a
=0;á<2;á++) {

709 
b
=0; b<2; b++) {

710 
c
=0; c<2; c++) {

711 
Index3
 
	`idx
(
a
, 
b
, 
c
);

712 
	`compuã_DE2DC_m©
 (
idx
, 
TM
, 
SP
);

718 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

719 i‡(
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

720 i‡(
nodeVec
[
i
].
dïth
 >= 3) {

721 
∑ª¡
 = 
nodeVec
[
i
].parent;

722 
Index3
 
	`cidx
(
nodeVec
[
i
].
∑th2Node
-2 *ÇodeVec[
∑ª¡
].path2Node);

724 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

725 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
∑ª¡
*
	`∂n_size
(
DE
, 
SP
)];

726 
§cDOF
 = 1;

727 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

728 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

729 
l
 = 
nodeVec
[
∑ª¡
].
dïth
;

730 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

731 
ªÆ_t
 
s˛vec
[
§cDOF
];

732 
s
=0; s<
§cDOF
; s++)

733 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

734 
˙t
 = 0;

735 
j
=0; j < 
SP
[
DE
].
n
; j++)

736 
s
=0; s < 
§cDOF
; s++) {

737 
tmpDí
[
˙t
] = 
ddí
[˙t] * 
s˛vec
[
s
];

738 
˙t
++;

740 
ªÆ_t
 *
DE2DCii
 = 
TM
->
DE2DC
[
	`cidx
(2)+cidx(1)*2+cidx(0)*2*2];

741 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
DE2DCii
, 
tmpDí
, 1.0, 
tvÆ
);

744 i‡(
nodeVec
[
i
].
dïth
 >= 2) {

746 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

747 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

748 
§cDOF
 = 1;

749 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

750 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

751 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
DC2DE
, 
tvÆ
, 1.0, 
tmpDí
);

754 
l
 = 
nodeVec
[
i
].
dïth
;

755 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

756 
ªÆ_t
 
s˛vec
[
§cDOF
];

757 
s
=0; s<
§cDOF
; s++)

758 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

759 
˙t
 = 0;

760 
j
=0; j < 
SP
[
DE
].
n
; j++)

761 
s
=0; s < 
§cDOF
; s++) {

762 
ddí
[
˙t
] = ddí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

763 
˙t
++;

771 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
c
, 
r
)

772 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

773 i‡(
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

774 i‡(
nodeVec
[
i
].
chûd
 == -1) {

776 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

777 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

778 
Node
* 
¶_pos
;

779 
¶_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

781 
¶_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

782 
¶_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

783 
¶_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

784 
¶_pos
->
num_±s
 = 
SP
[
DE
].
n
;

785 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
, &
SP
[
DE
]);

786 
¶_pos
->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

788 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
);

794 
	}
}

800 
	$c›y_åg_vÆ
 (
AŒNodes
 *
AŒ_N
)

802 
i
;

803 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

805 
i
 = 0; i < 
nodeVec
.
	`size
(); i++)

806 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
)

807 i‡(
nodeVec
[
i
].
chûd
 == -1) {

808 
	`£t_vÆue
 (
nodeVec
[
i
].
ågNum
, 
AŒ_N
->
pŸ_‹ig
, AŒ_N->
Nt
[i].
dí_pŸ
,ÇodeVec[i].
ågOwnVecIdxs
);

812 
	}
}

	@omp_sse_no_nr.cc

1 
	~<as£π.h
>

2 
	~<m©h.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

7 
	~"vecm©›.h
"

8 
	~"ªÆs_Æig√d.h
"

9 
	~"evÆu©e--basic.h
"

11 
	~<omp.h
>

17 
	$uli°_gë_im∂emíèti⁄_«me
 ()

19 c⁄° * 
fmt__
 = "omp_sse-%d";

20 * 
desc__
 = 
NULL
;

21 
size_t
 
desc_max_Àn__
 = 0;

22 #¥agm®
omp
 
∑øŒñ


24 #¥agm®
omp
 
sögÀ


26 
num_thªads
 = 1;

27 i‡(!
desc__
) {

28 
desc_max_Àn__
 = 
	`°æí
 (
fmt__
) + 16;

29 
desc__
 = (*)
	`mÆloc
 ( (Ë* (
	`°æí
 (
fmt__
) + 16));

30 
	`as£π
 (
desc__
);

31 
	`mem£t
 (
desc__
, 0, 
desc_max_Àn__
);

33 
num_thªads
 = 
	`omp_gë_num_thªads
 ();

34 
	`¢¥ötf
 (
desc__
, 
desc_max_Àn__
, 
fmt__
, 
num_thªads
);

37  
desc__
;

38 
	}
}

44 
	$gë_num_thªads
 ()

46 
¡hªads
;

47 #¥agm®
omp
 
∑øŒñ


49 
¡hªads
 = 
	`omp_gë_num_thªads
();

51  
¡hªads
;

52 
	}
}

58 
	$up_ˇlc
 (
AŒNodes
 *
AŒ_N
)

60 
i
, 
n
, 
≈
;

61 
Poöt3
 
c
;

62 
ªÆ_t
 
r
;

63 
Pos
* 
SP
 = 
AŒ_N
->SP;

64 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

65 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

69 
	`compuã_UC2UE_m©
 (
TM
, 
SP
);

72 
TM
->
UE2UC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

74 
a
=0;á<2;á++) {

75 
b
=0; b<2; b++) {

76 
c
=0; c<2; c++) {

77 
Index3
 
	`idx
(
a
, 
b
, 
c
);

78 
	`compuã_UE2UC_m©
 (
idx
, 
TM
, 
SP
);

85 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
i
,
c
,
r
)

86 
i
 = 
nodeVec
.
	`size
()-1; i >= 0; i--) {

87 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

88 i‡(
nodeVec
[
i
].
dïth
 >= 0) {

89 
ªÆ_t
 *
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

91 i‡(
nodeVec
[
i
].
chûd
 == -1) {

93 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

94 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

95 
Node
* 
é_pos
;

96 
é_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

98 
é_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

99 
é_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

100 
é_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

101 
é_pos
->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

102 
é_pos
->
num_±s
 = 
SP
[
UC
].
n
;

104 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
, &
SP
[
UC
]);

105 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
é_pos
->
dí_pŸ
);

107 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
, 
AŒ_N
->
Ns
[
i
]);

110 
§cDOF
 = 1;

111 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

112 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

113 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
é_pos
->
dí_pŸ
, 1.0, 
tmpDí
);

116 
l
 = 
nodeVec
[
i
].
dïth
;

117 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

118 
ªÆ_t
 
s˛vec
[
§cDOF
];

119 
s
=0; s<
§cDOF
; s++)

120 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

121 
˙t
 = 0;

122 
i
=0; i < 
SP
[
UE
].
n
; i++)

123 
s
=0; s < 
§cDOF
; s++) {

124 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

125 
˙t
++;

132 
i
 = 
nodeVec
.
	`size
()-1; i >= 0; i--) {

133 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

134 i‡(
nodeVec
[
i
].
dïth
 >= 0) {

135 
ªÆ_t
 *
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

136 i‡(
nodeVec
[
i
].
chûd
 != -1) {

137 
Node
* 
é_pos
;

138 
é_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

140 
é_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

141 
é_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

142 
é_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

143 
é_pos
->
dí_pŸ
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UC
].
n
);

144 
é_pos
->
num_±s
 = 
SP
[
UC
].
n
;

145 
	`ªÆs_zîo
 (
SP
[
UC
].
n
, 
é_pos
->
dí_pŸ
);

147 
a
=0;á<2;á++) {

148 
b
=0; b<2; b++) {

149 
c
=0; c<2; c++) {

150 
Index3
 
	`idx
(
a
,
b
,
c
);

151 
chi
 = 
	`chûd
(
i
, 
idx
, 
nodeVec
);

152 if(
nodeVec
[
chi
].
èg
 & 
LET_SRCNODE
) {

153 
ªÆ_t
 *
dí
 = &
AŒ_N
->
§c_upw_equ_dí
[
chi
*
	`∂n_size
(
UE
, 
SP
)];

154 
§cDOF
 = 1;

155 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

156 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

157 
l
 = 
nodeVec
[
chi
].
dïth
;

158 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

159 
ªÆ_t
 
s˛vec
[
§cDOF
];

160 
s
=0; s<
§cDOF
; s++)

161 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

162 
˙t
 = 0;

163 
i
=0; i < 
SP
[
UE
].
n
; i++)

164 
s
=0; s < 
§cDOF
; s++) {

165 
tmpDí
[
˙t
] = 
dí
[˙t] * 
s˛vec
[
s
];

166 
˙t
++;

168 
ªÆ_t
 *
UE2UCii
 = 
TM
->
UE2UC
[
	`idx
(2)+idx(1)*2+idx(0)*2*2];

169 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
UE2UCii
, 
tmpDí
, 1.0, 
é_pos
->
dí_pŸ
);

176 
§cDOF
 = 1;

177 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
UE
].
n
);

178 
	`ªÆs_zîo
 (
SP
[
UE
].
n
, 
tmpDí
);

179 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
UC2UE
, 
é_pos
->
dí_pŸ
, 1.0, 
tmpDí
);

182 
l
 = 
nodeVec
[
i
].
dïth
;

183 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

184 
ªÆ_t
 
s˛vec
[
§cDOF
];

185 
s
=0; s<
§cDOF
; s++)

186 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

187 
˙t
 = 0;

188 
i
=0; i < 
SP
[
UE
].
n
; i++)

189 
s
=0; s < 
§cDOF
; s++) {

190 
udí
[
˙t
] = udí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

191 
˙t
++;

198 
	}
}

204 
	$uli°_ˇlc
 (
AŒNodes
 *
AŒ_N
)

206 i‡(
AŒ_N
) {

207 
i
;

208 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

209 * 
Ti
 = 
AŒ_N
->
Tu
;

211 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
 (
AŒ_N
)

213 
i
;

214 
tid
 = 
	`omp_gë_thªad_num
();

215 
i
 = 
Ti
[
tid
]; i < Ti[tid+1]; i++) {

216 
k
;

217 
k
 = 0; k < 
nodeVec
[
i
].
Unodes
.
	`size
(); k++) {

218 
§c
 = 
nodeVec
[
i
].
Unodes
[
k
];

219 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

225 
	}
}

231 
	$uli°__dúe˘_evÆu©i⁄
 (
Node
 
åg
, Nodê
§c
)

233 
i
;

234 
SIMD_REG
 
OOFP_R__
 = 
	`SIMD_SET1
 (
OOFP_R
);

235 
i
 = 0; (i+
SIMD_LEN
Ë<
åg
.
num_±s
; i += SIMD_LEN) {

236 
SIMD_REG
 
TX__
 = 
	`SIMD_LOAD_U
 (
åg
.
x
 + 
i
);

237 
SIMD_REG
 
TY__
 = 
	`SIMD_LOAD_U
 (
åg
.
y
 + 
i
);

238 
SIMD_REG
 
TZ__
 = 
	`SIMD_LOAD_U
 (
åg
.
z
 + 
i
);

239 
SIMD_REG
 
TD__
 = 
SIMD_ZERO
;

240 
j
;

241 
j
 = 0; j < 
§c
.
num_±s
; j++) {

242 
SIMD_REG
 
SD1__
 = 
	`SIMD_LOAD1
 (
§c
.
dí_pŸ
 + 
j
);

243 
SIMD_REG
 
DX1__
 = 
	`SIMD_SUB
 (
TX__
, 
	`SIMD_LOAD1
 (
§c
.
x
 + 
j
));

244 
SIMD_REG
 
DY1__
 = 
	`SIMD_SUB
 (
TY__
, 
	`SIMD_LOAD1
 (
§c
.
y
 + 
j
));

245 
SIMD_REG
 
DZ1__
 = 
	`SIMD_SUB
 (
TZ__
, 
	`SIMD_LOAD1
 (
§c
.
z
 + 
j
));

246 
SIMD_REG
 
R__
 = 
	`SIMD_MUL
 (
DX1__
, DX1__);

247 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
DY1__
, DY1__));

248 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
DZ1__
, DZ1__));

249 #i‡!
	`deföed
 (
USE_FLOAT
)

250 
R__
 = 
	`SIMD_SQRT
 (R__);

251 
R__
 = 
	`SIMD_DIV
 (
	`SIMD_SET1
(1.0), R__);

253 
R__
 = 
	`SIMD_INV_SQRT
 (R__);

255 
TD__
 = 
	`SIMD_ADD
 (TD__, 
	`SIMD_MUL
 (
SD1__
, 
R__
));

257 
TD__
 = 
	`SIMD_MUL
 (TD__, 
OOFP_R__
);

258 
TD__
 = 
	`SIMD_ADD
 (TD__, 
	`SIMD_LOAD_U
 (
åg
.
dí_pŸ
 + 
i
));

259 
	`SIMD_STORE_U
 (
åg
.
dí_pŸ
 + 
i
, 
TD__
);

261 
i
 < 
åg
.
num_±s
) {

262 
ªÆ_t
 
tx
 = 
åg
.
x
[
i
];

263 
ªÆ_t
 
ty
 = 
åg
.
y
[
i
];

264 
ªÆ_t
 
tz
 = 
åg
.
z
[
i
];

265 
ªÆ_t
 
td
 = 0.0;

266 
j
;

267 
j
 = 0; j < 
§c
.
num_±s
; j++) {

268 
ªÆ_t
 
x
 = 
tx
 - 
§c
.x[
j
];

269 
ªÆ_t
 
y
 = 
ty
 - 
§c
.y[
j
];

270 
ªÆ_t
 
z
 = 
tz
 - 
§c
.z[
j
];

271 
ªÆ_t
 
r2
 = 
x
*x + 
y
*y + 
z
*z;

272 #i‡!
	`deföed
 (
USE_FLOAT
)

273 
ªÆ_t
 
r
 = 
	`sqπ
(
r2
);

275 
ªÆ_t
 
r
 = 
	`sqπf
(
r2
);

277 
td
 +
§c
.
dí_pŸ
[
j
] / 
r
;

279 
åg
.
dí_pŸ
[
i
] +
OOFP_R
 * 
td
;

280 ++
i
;

283 
	}
}

286 
	$mykî√l
 (
¢
, 
ä
, 
ªÆ_t
* 
x1
,Ñól_t* 
x2
,Ñól_t* 
x3
,

287 
ªÆ_t
* 
y1
,Ñól_t* 
y2
,Ñól_t* 
y3
,

288 
ªÆ_t
* 
m©
,Ñól_t* 
ødii
,Ñól_à*
f‹˚_Ve˘‹
)

290 
i
;

291 
SIMD_REG
 
OOFP_R__
 = 
	`SIMD_SET1
 (
OOFP_R
);

293 
i
 = 0; i < 
¢
; i++) {

294 
SIMD_REG
 
SX__
 = 
	`SIMD_LOAD1
 (&
x1
[
i
]);

295 
SIMD_REG
 
SY__
 = 
	`SIMD_LOAD1
 (&
x2
[
i
]);

296 
SIMD_REG
 
SZ__
 = 
	`SIMD_LOAD1
 (&
x3
[
i
]);

297 
j
;

298 
j
 = 0; (j+
SIMD_LEN
Ë<
ä
; j+=SIMD_LEN) {

299 
SIMD_REG
 
TX1__
 = 
	`SIMD_SUB
 (
SX__
, 
	`SIMD_LOAD_U
 (&
y1
[
j
]));

300 
SIMD_REG
 
TY1__
 = 
	`SIMD_SUB
 (
SY__
, 
	`SIMD_LOAD_U
 (&
y2
[
j
]));

301 
SIMD_REG
 
TZ1__
 = 
	`SIMD_SUB
 (
SZ__
, 
	`SIMD_LOAD_U
 (&
y3
[
j
]));

302 
SIMD_REG
 
R__
 = 
	`SIMD_MUL
 (
TX1__
, TX1__);

303 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
TY1__
, TY1__));

304 
R__
 = 
	`SIMD_ADD
 (R__, 
	`SIMD_MUL
 (
TZ1__
, TZ1__));

305 #i‡!
	`deföed
 (
USE_FLOAT
)

306 
SIMD_REG
 
XHALF__
 = 
	`SIMD_MUL
 (
	`SIMD_SET1
 (0.5), 
R__
);

307 
R__
 = 
	`SIMD_INV_SQRT_S
 (R__);

308 
SIMD_REG
 
RNR__
 = 
	`SIMD_MUL
 (
R__
, R__);

309 
RNR__
 = 
	`SIMD_MUL
 (RNR__, 
XHALF__
);

310 
RNR__
 = 
	`SIMD_SUB
 (
	`SIMD_SET1
 (1.5), RNR__);

311 
R__
 = 
	`SIMD_MUL
 (
RNR__
, R__);

313 
R__
 = 
	`SIMD_INV_SQRT
 (R__);

315 
R__
 = 
	`SIMD_MUL
 (R__, 
OOFP_R__
);

316 
	`SIMD_STORE_U
 (&
m©
[
i
*
ä
+
j
], 
R__
);

319 ; 
j
 < 
ä
; j++) {

320 
dx
, 
dy
, 
dz
;

321 
dr2
;

322 
dr
;

323 
dx
 = 
x1
[
i
] - 
y1
[
j
];

324 
dy
 = 
x2
[
i
] - 
y2
[
j
];

325 
dz
 = 
x3
[
i
] - 
y3
[
j
];

326 
dr2
 = 
dx
*dx + 
dy
*dy + 
dz
*dz;

327 #i‡!
	`deföed
 (
USE_FLOAT
)

328 
dr
 = 
	`sqπ
(
dr2
);

330 
dr
 = 
	`sqπf
(
dr2
);

332 
m©
[
i
*
ä
+
j
] = 
OOFP_R
 / 
dr
;

336 
	}
}

341 
	$compuã_f·_§c
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

343 
i
 = 0;

344 
eff_size
;

345 
¡hªads
;

346 
ªÆ_t
* 
edí
;

347 
ªÆ_t
* 
udí
;

348 
ªÆ_t
* 
rdí
;

349 
ªÆ_t
* 
tdí
;

351 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

352 
eff_size
 = 
	`eff_d©a_size
 (
UE
);

353 
Pos
* 
SP
 = 
AŒ_N
->SP;

354 
Pos
* 
RP
 = 
AŒ_N
->RP;

356 #¥agm®
omp
 
∑øŒñ


358 
¡hªads
 = 
	`omp_gë_num_thªads
();

360 
ªÆ_t
* 
ªg_dí
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
 * 
¡hªads
);

361 
ªÆ_t
* 
tmp_dí
 = 
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
 * 
¡hªads
);

363 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

364 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

365 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

366 
	`∂nDí2EffDíöô
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
f‹∂™
, 
AŒ_N
);

370 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
i
, 
edí
, 
udí
, 
rdí
, 
tdí
)

371 
i
 = 1; i<
nodeVec
.
	`size
(); i++) {

372 
tid
 = 
	`omp_gë_thªad_num
();

373 i‡(
nodeVec
[
i
].
èg
 & 
LET_SRCNODE
) {

374 
edí
 = &
AŒ_N
->
eff_dí
[
i
 * 
eff_size
];

375 
udí
 = &
AŒ_N
->
§c_upw_equ_dí
[
i
*
	`∂n_size
(
UE
, 
SP
)];

376 
rdí
 = &
ªg_dí
[
tid
 * 
RP
->
n
];

377 
tdí
 = &
tmp_dí
[
tid
 * 
SP
[
UE
].
n
];

378 
	`∂nDí2EffDí
(
nodeVec
[
i
].
dïth
, 
udí
, 
edí
, 
rdí
, 
tdí
, 
f‹∂™
, 
AŒ_N
);

383 
	}
}

388 
	$compuã_f·_å™s
 (
AŒNodes
 *
AŒ_N
, 
FFT_PLAN
& 
f‹∂™
)

390 
§cDOF
;

391 
ågDOF
;

392 
effNum
 = 
	`eff_d©a_size
 (
UE
);

393 
ªÆ_t
 
R
 = 1;

394 
Pos
* 
RP
 = 
AŒ_N
->RP;

395 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

396 
§cDOF
 = 1;

397 
ågDOF
 = 1;

400 
TM
->
UE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 7*7*7);

402 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
()

403 
i1
=-3; i1<=3; i1++)

404 
i2
=-3; i2<=3; i2++)

405 
i3
=-3; i3<=3; i3++)

406 i‡(
	`abs
(
i1
)>1 ||ábs(
i2
)>1 ||ábs(
i3
)>1 ) {

408 
idx
;

409 
idx
 = (
i1
+3Ë+ (
i2
+3)*7 + (
i3
+3)*7*7;

410 
ªÆ_t
 
díPosX
[1];

411 
ªÆ_t
 
díPosY
[1];

412 
ªÆ_t
 
díPosZ
[1];

413 
díPosX
[0] = (
ªÆ_t
)(
i1
)*2.0*
R
;

414 
díPosY
[0] = (
ªÆ_t
)(
i2
)*2.0*
R
;

415 
díPosZ
[0] = (
ªÆ_t
)(
i3
)*2.0*
R
;

417 
ªÆ_t
 
chkPosX
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosX); 
	`daxpy
(RP->n, 
R
, RP->
x
, chkPosX) ;

418 
ªÆ_t
 
chkPosY
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosY); 
	`daxpy
(RP->n, 
R
, RP->
y
, chkPosY) ;

419 
ªÆ_t
 
chkPosZ
[
RP
->
n
]; 
	`ªÆs_zîo
(RP->n, chkPosZ); 
	`daxpy
(RP->n, 
R
, RP->
z
, chkPosZ) ;

420 
ªÆ_t
* 
â
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

421 
	`kî√l
(1, 
RP
->
n
, 
díPosX
, 
díPosY
, 
díPosZ
, 
chkPosX
, 
chkPosY
, 
chkPosZ
, 
â
);

424 
ªÆ_t
* 
tmp
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
*
ågDOF
*
§cDOF
);

425 
k
=0; k<
RP
->
n
;k++) {

426 
tmp
[
k
] = 
â
[k];

428 
ªÆ_t
 *
UpwEqu2DwnChkii
 = 
	`ªÆs_Æloc__Æig√d
 (
ågDOF
*
§cDOF
 * 
effNum
);

429 
	`FFT_RE_EXECUTE
(
f‹∂™
, 
tmp
, (
FFT_COMPLEX
*)(
UpwEqu2DwnChkii
));

430 
TM
->
UE2DC
[
idx
] = 
UpwEqu2DwnChkii
;

433 
	}
}

438 
	$compuã_if·_åg
 (
AŒNodes
 *
AŒ_N
)

440 
i
 = 0;

441 
öv£t
 = 0;

442 
eff_size
;

443 
¡hªads
;

444 
ªÆ_t
 *
evÆ
;

445 
ªÆ_t
 *
tvÆ
;

446 
ªÆ_t
 *
rvÆ
;

447 
FFT_PLAN
 
öv∂™
;

448 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

449 
Pos
* 
SP
 = 
AŒ_N
->SP;

450 
Pos
* 
RP
 = 
AŒ_N
->RP;

452 
eff_size
 = 
	`eff_d©a_size
 (
DC
);

453 
öv£t
 == 0) {

454 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

455 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

456 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_size
];

457 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

458 
k
=0; k<
eff_size
; k++)

459 
evÆ
[
k
] *
ƒmfc
;

460 
	`effVÆ2P VÆöô
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
öv∂™
, 
AŒ_N
);

461 
öv£t
 = 1;

463 
i
++;

466 #¥agm®
omp
 
∑øŒñ


468 
¡hªads
 = 
	`omp_gë_num_thªads
();

470 
ªÆ_t
* 
ªg_vÆ
 = 
	`ªÆs_Æloc__Æig√d
 (
RP
->
n
 * 
¡hªads
);

472 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
tvÆ
, 
evÆ
, 
rvÆ
)

473 
j
=
i
; j < 
nodeVec
.
	`size
(); j++) {

474 
tid
 = 
	`omp_gë_thªad_num
();

475 if–
nodeVec
[
j
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[j].
Vnodes
.
	`size
()>0) {

476 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
j
*
	`∂n_size
(
DC
, 
SP
)];

477 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
j
 * 
eff_size
];

478 
rvÆ
 = &
ªg_vÆ
[
tid
 * 
RP
->
n
];

479 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

480 
k
=0; k<
eff_size
; k++)

481 
evÆ
[
k
] *
ƒmfc
;

482 
	`effVÆ2P VÆ
(
nodeVec
[
i
].
dïth
, 
evÆ
, 
tvÆ
, 
rvÆ
, 
öv∂™
, 
AŒ_N
);

486 
	`FFT_DESTROY
(
öv∂™
);

488 
	}
}

493 
	$vli°_ˇlc
 (
AŒNodes
 *
AŒ_N
)

495 i‡(
AŒ_N
) {

497 
eff_§c_size
;

498 
eff_åg_size
;

499 
effNum
;

500 
dim
 = 3;

501 
§cDOF
 = 1;

502 
ågDOF
 = 1;

503 
ªÆ_t
 *
edí
;

504 
ªÆ_t
 *
evÆ
;

505 
ªÆ_t
 *
UpwEqu2DwnChkii
;

506 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

507 
Pos
* 
SP
 = 
AŒ_N
->SP;

508 
Pos
* 
RP
 = 
AŒ_N
->RP;

509 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

510 * 
Ti
 = 
AŒ_N
->
Tv
;

512 
FFT_PLAN
 
f‹∂™
;

513 
	`compuã_f·_§c
 (
AŒ_N
, 
f‹∂™
);

514 
	`compuã_f·_å™s
 (
AŒ_N
, 
f‹∂™
);

517 
eff_åg_size
 = 
	`eff_d©a_size
 (
DC
);

518 
eff_§c_size
 = 
	`eff_d©a_size
 (
UE
);

519 
effNum
 = 
eff_§c_size
;

520 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
edí
, 
evÆ
, 
UpwEqu2DwnChkii
)

522 
i
, 
j
;

523 
tid
 = 
	`omp_gë_thªad_num
();

524 
i
 = 
Ti
[
tid
]; i < Ti[tid+1]; i++) {

525 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
 &&ÇodeVec[i].
Vnodes
.
	`size
()>0) {

526 
evÆ
 = &
AŒ_N
->
eff_vÆ
[
i
 * 
eff_åg_size
];

527 
Poöt3
 
	`gNodeIdxCå
(
	`˚¡î
(
i
, 
nodeVec
));

528 
ªÆ_t
 
D
 = 2.0 * 
	`ødius
 (
i
, 
nodeVec
);

529 
j
 = 0; j < 
nodeVec
[
i
].
Vnodes
.
	`size
(); j++) {

530 
§c
 = 
nodeVec
[
i
].
Vnodes
[
j
];

531 
Poöt3
 
	`viCå
(
	`˚¡î
 (
§c
, 
nodeVec
));

532 
Index3
 
idx
;

533 
d
=0; d<
dim
; d++) {

534 
	`idx
(
d
Ë(
	`round
–(
viCå
[d]-
gNodeIdxCå
[d])/
D
 ));

536 
edí
 = &
AŒ_N
->
eff_dí
[
§c
 * 
eff_§c_size
];

538 
id
 = (
	`idx
(0)+3) + (idx(1)+3)*7 + (idx(2)+3)*7*7;

539 
UpwEqu2DwnChkii
 = 
TM
->
UE2DC
[
id
];

540 
ªÆ_t
 
ƒmfc
 = 1.0/
	`ªÆ_t
(
RP
->
n
);

541 
FFT_COMPLEX
* 
m©På
 = (FFT_COMPLEX*)(
UpwEqu2DwnChkii
);

542 
FFT_COMPLEX
* 
díPå
 = (FFT_COMPLEX*)(
edí
);

543 
FFT_COMPLEX
* 
chkPå
 = (FFT_COMPLEX*)(
evÆ
);

544 
m©Sç
 = 
§cDOF
*
ågDOF
;

545 
díSç
 = 
§cDOF
;

546 
chkSç
 = 
ågDOF
;

548 
ªÆ_t
 
√wÆpha
 = 
ƒmfc
;

549 
i
=0; i<
ågDOF
; i++)

550 
k
=0; k<
§cDOF
; k++) {

551 
m©Off
 = 
k
*
ågDOF
 + 
i
;

552 
díOff
 = 
k
;

553 
chkOff
 = 
i
;

554 
	`poötwi£_mu…
 (
effNum
/2, 
m©På
+
m©Off
, 
m©Sç
, 
díPå
+
díOff
, 
díSç
, 
chkPå
+
chkOff
, 
chkSç
);

561 
	`compuã_if·_åg
 (
AŒ_N
);

565 
	}
}

572 
	$poötwi£_mu…
 (
n
, 
FFT_COMPLEX
* 
x
, 
ix
, FFT_COMPLEX* 
y
, 
iy
, FFT_COMPLEX* 
z
, 
iz
)

574 
i
;

575 
SIMD_REG
 
tmp
 = 
SIMD_SET_1
;

576 
i
 = 0; i + 
SIMD_LEN
 <(
n
 * 2); i+=SIMD_LEN) {

577 
SIMD_REG
 
Z
 = 
	`SIMD_LOAD
 (&(*
z
)[
i
]);

578 
SIMD_REG
 
X
 = 
	`SIMD_LOAD
 (&(*
x
)[
i
]);

579 
SIMD_REG
 
Y
 = 
	`SIMD_LOAD
 (&(*
y
)[
i
]);

581 
SIMD_REG
 
x0
 = 
	`SIMD_SHUFFLE
 (
X
, X, 
SHUFFLE_0
);

582 
SIMD_REG
 
p0
 = 
	`SIMD_MUL
 (
x0
, 
Y
);

583 
Z
 = 
	`SIMD_ADD
 (Z, 
p0
);

585 
x0
 = 
	`SIMD_SHUFFLE
 (
X
, X, 
SHUFFLE_1
);

586 
SIMD_REG
 
y0
 = 
	`SIMD_SHUFFLE
 (
Y
, Y, 
SHUFFLE_2
);

587 
p0
 = 
	`SIMD_MUL
 (
x0
, 
y0
);

588 
p0
 = 
	`SIMD_MUL
 (p0, 
tmp
);

589 
Z
 = 
	`SIMD_ADD
 (Z, 
p0
);

591 
	`SIMD_STORE
 (&(*
z
)[
i
], 
Z
);

594 ; 
i
 < (
n
 * 2); i+=2) {

595 (*
z
)[0] +–(*
x
)[0] * (*
y
)[0] - (*x)[1] * (*y)[1]);

596 (*
z
)[1] +–(*
x
)[0] * (*
y
)[1] + (*x)[1] * (*y)[0]);

597 
x
 = x + 1;

598 
y
 = y + 1;

599 
z
 = z + 1;

602 
	}
}

608 
	$wli°_ˇlc
 (
AŒNodes
 *
AŒ_N
)

610 
§cDOF
 = 1;

611 
ªÆ_t
 
r
;

612 
Poöt3
 
c
;

613 
Pos
* 
SP
 = 
AŒ_N
->SP;

614 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

616 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
(
c
, 
r
)

617 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

618 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

619 if–
nodeVec
[
i
].
chûd
 == -1) {

620 
j
 = 0; j < 
nodeVec
[
i
].
Wnodes
.
	`size
(); j++) {

621 
§c
 = 
nodeVec
[
i
].
Wnodes
[
j
];

622 if(
nodeVec
[
§c
].
chûd
 =-1 &&ÇodeVec[§c].
§cNum
*
§cDOF
<
	`∂n_size
(
UE
, 
SP
)) {

624 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

628 
c
 = 
	`˚¡î
 (
§c
, 
nodeVec
);

629 
r
 = 
	`ødius
 (
§c
, 
nodeVec
);

630 
Node
* 
¶_pos
;

631 
¶_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

633 
¶_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

634 
¶_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

635 
¶_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
UE
].
n
);

636 
¶_pos
->
num_±s
 = 
SP
[
UE
].
n
;

638 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
, &
SP
[
UE
]);

639 
¶_pos
->
dí_pŸ
 = &
AŒ_N
->
§c_upw_equ_dí
[
§c
*
	`∂n_size
(
UE
, 
SP
)];

640 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
);

647 
	}
}

653 
	$xli°_ˇlc
 (
AŒNodes
 *
AŒ_N
)

655 
ågDOF
 = 1;

656 
Poöt3
 
c
;

657 
ªÆ_t
 
r
;

658 
Pos
* 
SP
 = 
AŒ_N
->SP;

659 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

661 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(Ë
	`¥iv©e
 (
c
, 
r
)

662 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

663 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

664 
j
 = 0; j < 
nodeVec
[
i
].
Xnodes
.
	`size
(); j++) {

665 
§c
 = 
nodeVec
[
i
].
Xnodes
[
j
];

666 if(
nodeVec
[
i
].
chûd
 =-1 &&ÇodeVec[i].
ågNum
*
ågDOF
<
	`∂n_size
(
DC
, 
SP
)) {

667 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], AŒ_N->
Ns
[
§c
]);

671 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

672 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

673 
Node
* 
é_pos
;

674 
é_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

676 
é_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

677 
é_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

678 
é_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DC
].
n
);

679 
é_pos
->
num_±s
 = 
SP
[
DC
].
n
;

681 
	`compuã_loˇÕos
 (
c
, 
r
, 
é_pos
, &
SP
[
DC
]);

682 
é_pos
->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

684 
	`uli°__dúe˘_evÆu©i⁄
 (*
é_pos
, 
AŒ_N
->
Ns
[
§c
]);

690 
	}
}

696 
	$down_ˇlc
 (
AŒNodes
 *
AŒ_N
)

698 
ªÆ_t
 
r
;

699 
Poöt3
 
c
;

700 
ªÆ_t
 *
tvÆ
;

701 
ªÆ_t
 *
ddí
;

702 
Node
* 
¶_pos
;

703 
Pos
* 
SP
 = 
AŒ_N
->SP;

704 
Tøns_m©rix
* 
TM
 = 
AŒ_N
->TM;

705 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

708 
	`compuã_DC2DE_m©
 (
TM
, 
SP
);

711 
TM
->
DE2DC
 = (
ªÆ_t
 **Ë
	`mÆloc
 ((real_t*) * 2*2*2);

713 
a
=0;á<2;á++) {

714 
b
=0; b<2; b++) {

715 
c
=0; c<2; c++) {

716 
Index3
 
	`idx
(
a
, 
b
, 
c
);

717 
	`compuã_DE2DC_m©
 (
idx
, 
TM
, 
SP
);

723 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

724 i‡(
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

725 i‡(
nodeVec
[
i
].
dïth
 >= 3) {

726 
∑ª¡
 = 
nodeVec
[
i
].parent;

727 
Index3
 
	`cidx
(
nodeVec
[
i
].
∑th2Node
-2 *ÇodeVec[
∑ª¡
].path2Node);

729 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

730 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
∑ª¡
*
	`∂n_size
(
DE
, 
SP
)];

731 
§cDOF
 = 1;

732 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

733 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

734 
l
 = 
nodeVec
[
∑ª¡
].
dïth
;

735 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

736 
ªÆ_t
 
s˛vec
[
§cDOF
];

737 
s
=0; s<
§cDOF
; s++)

738 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

739 
˙t
 = 0;

740 
j
=0; j < 
SP
[
DE
].
n
; j++)

741 
s
=0; s < 
§cDOF
; s++) {

742 
tmpDí
[
˙t
] = 
ddí
[˙t] * 
s˛vec
[
s
];

743 
˙t
++;

745 
ªÆ_t
 *
DE2DCii
 = 
TM
->
DE2DC
[
	`cidx
(2)+cidx(1)*2+cidx(0)*2*2];

746 
	`dgemv
(
TM
->
n
, TM->
m
, 1.0, 
DE2DCii
, 
tmpDí
, 1.0, 
tvÆ
);

749 i‡(
nodeVec
[
i
].
dïth
 >= 2) {

751 
tvÆ
 = &
AŒ_N
->
åg_dwn_chk_vÆ
[
i
*
	`∂n_size
(
DC
, 
SP
)];

752 
ddí
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

753 
§cDOF
 = 1;

754 
ªÆ_t
 *
tmpDí
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
§cDOF
*
SP
[
DE
].
n
);

755 
	`ªÆs_zîo
 (
SP
[
DE
].
n
, 
tmpDí
);

756 
	`dgemv
(
TM
->
m
, TM->
n
, 1.0, TM->
DC2DE
, 
tvÆ
, 1.0, 
tmpDí
);

759 
l
 = 
nodeVec
[
i
].
dïth
;

760 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

761 
ªÆ_t
 
s˛vec
[
§cDOF
];

762 
s
=0; s<
§cDOF
; s++)

763 
s˛vec
[
s
] = 
	`pow
(2.0, -
l
*
degVec
[s]);

764 
˙t
 = 0;

765 
j
=0; j < 
SP
[
DE
].
n
; j++)

766 
s
=0; s < 
§cDOF
; s++) {

767 
ddí
[
˙t
] = ddí[˙t] + 
tmpDí
[˙t] * 
s˛vec
[
s
];

768 
˙t
++;

776 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
guided
Ë
	`¥iv©e
(
c
, 
r
)

777 
i
 = 0; i < 
nodeVec
.
	`size
(); i++) {

778 i‡(
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
) {

779 i‡(
nodeVec
[
i
].
chûd
 == -1) {

781 
c
 = 
	`˚¡î
 (
i
, 
nodeVec
);

782 
r
 = 
	`ødius
 (
i
, 
nodeVec
);

783 
Node
* 
¶_pos
;

784 
¶_pos
 = (
Node
 *Ë
	`_mm_mÆloc
((Node), 
IDEAL_ALIGNMENT
);

786 
¶_pos
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

787 
¶_pos
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

788 
¶_pos
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
SP
[
DE
].
n
);

789 
¶_pos
->
num_±s
 = 
SP
[
DE
].
n
;

790 
	`compuã_loˇÕos
 (
c
, 
r
, 
¶_pos
, &
SP
[
DE
]);

791 
¶_pos
->
dí_pŸ
 = &
AŒ_N
->
åg_dwn_equ_dí
[
i
*
	`∂n_size
(
DE
, 
SP
)];

793 
	`uli°__dúe˘_evÆu©i⁄
 (
AŒ_N
->
Nt
[
i
], *
¶_pos
);

799 
	}
}

805 
	$c›y_åg_vÆ
 (
AŒNodes
 *
AŒ_N
)

807 
i
;

808 
ve˘‹
<
NodeTªe
>& 
nodeVec
 = *
AŒ_N
->
N
;

810 
i
 = 0; i < 
nodeVec
.
	`size
(); i++)

811 if–
nodeVec
[
i
].
èg
 & 
LET_TRGNODE
)

812 i‡(
nodeVec
[
i
].
chûd
 == -1) {

813 
	`£t_vÆue
 (
nodeVec
[
i
].
ågNum
, 
AŒ_N
->
pŸ_‹ig
, AŒ_N->
Nt
[i].
dí_pŸ
,ÇodeVec[i].
ågOwnVecIdxs
);

817 
	}
}

	@partial.h

58 
	#MIN_DATA
 0

	)

60 #i‡
MIN_DATA


61 
	#__SOURCE_BOX__
 0

	)

62 
	#__TARGET_BOX__
 0

	)

63 
	#__U_LIST__
 0

	)

64 
	#__TAG__
 0

	)

65 
	#__DEPTH__
 0

	)

66 
	#__CHILDREN__
 0

	)

67 
	#__RADIUS__
 0

	)

68 
	#__CENTER__
 0

	)

69 
	#__SP_UC__
 0

	)

70 
	#__UC2UE__
 0

	)

71 
	#__UE2UC__
 0

	)

72 
	#__SRC_UPW_EQU_DEN__
 0

	)

73 
	#__VLIST_SRC__
 0

	)

74 
	#__REG_DEN__
 0

	)

75 
	#__TT__
 0

	)

76 
	#__VLIST_TRANS__
 0

	)

77 
	#__VLIST_TRG__
 0

	)

78 
	#__VLIST_TLIST__
 0

	)

79 
	#__REG_DEN_IFFT__
 0

	)

80 
	#__TRG_DWN_CHK_VAL__
 0

	)

81 
	#__PATH2NODE__
 0

	)

82 
	#__TRG_DWN_EQU_DEN__
 0

	)

83 
	#__PARENT__
 0

	)

84 
	#__DC2DE__
 0

	)

85 
	#__DE2DC__
 0

	)

86 
	#__SP_DE__
 0

	)

87 
	#__SP_UE__
 0

	)

88 
	#__W_LIST__
 0

	)

89 
	#__SRCNUM__
 0

	)

90 
	#__SP_DC__
 0

	)

91 
	#__X_LIST__
 0

	)

92 
	#__TRGNUM__
 0

	)

95 
	#__SOURCE_BOX__
 1

	)

96 
	#__TARGET_BOX__
 1

	)

97 
	#__U_LIST__
 1

	)

98 
	#__TAG__
 1

	)

99 
	#__DEPTH__
 1

	)

100 
	#__CHILDREN__
 1

	)

101 
	#__RADIUS__
 1

	)

102 
	#__CENTER__
 1

	)

103 
	#__SP_UC__
 1

	)

104 
	#__UC2UE__
 1

	)

105 
	#__UE2UC__
 1

	)

106 
	#__SRC_UPW_EQU_DEN__
 1

	)

107 
	#__VLIST_SRC__
 1

	)

108 
	#__REG_DEN__
 1

	)

109 
	#__TT__
 1

	)

110 
	#__VLIST_TRANS__
 1

	)

111 
	#__VLIST_TRG__
 1

	)

112 
	#__VLIST_TLIST__
 1

	)

113 
	#__REG_DEN_IFFT__
 0

	)

114 
	#__TRG_DWN_CHK_VAL__
 1

	)

115 
	#__PATH2NODE__
 1

	)

116 
	#__TRG_DWN_EQU_DEN__
 1

	)

117 
	#__PARENT__
 1

	)

118 
	#__DC2DE__
 1

	)

119 
	#__DE2DC__
 1

	)

120 
	#__SP_DE__
 1

	)

121 
	#__SP_UE__
 1

	)

122 
	#__W_LIST__
 1

	)

123 
	#__SRCNUM__
 1

	)

124 
	#__SP_DC__
 1

	)

125 
	#__X_LIST__
 1

	)

126 
	#__TRGNUM__
 1

	)

131 #i‡
NP_3


134 
	#BLK_SIZE_UP
 112

	)

138 
	#UC2UE_R_PADDED
 256

	)

141 
	#UE2UC_R_PADDED
 896

	)

145 
	#RP_N
 224

	)

149 
	#UC2UE_R
 (
UC2UE_R_PADDED
/8)

	)

150 
	#NP_CUBED_POWER_OF_2
 32

	)

154 
	#SP_DC_N
 32

	)

157 
	#SP_DE_N_PADDED_8
 256

	)

161 
	#SL_POS_SIZE
 32

	)

167 #i‡
NP_4


170 
	#BLK_SIZE_UP
 160

	)

174 
	#UC2UE_R_PADDED
 512

	)

177 
	#UE2UC_R_PADDED
 1280

	)

181 
	#RP_N
 512

	)

185 
	#UC2UE_R
 (
UC2UE_R_PADDED
/8)

	)

186 
	#NP_CUBED_POWER_OF_2
 64

	)

190 
	#SP_DC_N
 64

	)

193 
	#SP_DE_N_PADDED_8
 512

	)

197 
	#SL_POS_SIZE
 64

	)

201 #i‡
NP_6


204 
	#BLK_SIZE_UP
 304

	)

208 
	#UC2UE_R_PADDED
 1280

	)

210 
	#UE2UC_R_PADDED
 2432

	)

214 
	#RP_N
 1728

	)

218 
	#UC2UE_R
 (
UC2UE_R_PADDED
/8)

	)

219 
	#NP_CUBED_POWER_OF_2
 256

	)

223 
	#SP_DC_N
 160

	)

226 
	#SP_DE_N_PADDED_8
 1280

	)

230 
	#SL_POS_SIZE
 160

	)

233 #i‡
NP_8


236 
	#BLK_SIZE_UP
 496

	)

240 
	#UC2UE_R_PADDED
 2432

	)

243 
	#UE2UC_R_PADDED
 3968

	)

247 
	#RP_N
 4096

	)

251 
	#UC2UE_R
 (
UC2UE_R_PADDED
/8)

	)

252 
	#NP_CUBED_POWER_OF_2
 512

	)

256 
	#SP_DC_N
 304

	)

259 
	#SP_DE_N_PADDED_8
 2432

	)

263 
	#SL_POS_SIZE
 304

	)

	@reals.c

8 
	~<as£π.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~"ªÆs.h
"

13 
ªÆ_t
 *

14 
	$ªÆs_Æloc
 (
size_t
 
n
)

16 
ªÆ_t
* 
x
 = 
NULL
;

17 i‡(
n
) {

18 
x
 = (
ªÆ_t
 *)
	`mÆloc
 (
n
 *  (real_t));

19 
	`as£π
 (
x
);

21  
x
;

22 
	}
}

25 
	$ªÆs_zîo
 (
size_t
 
n
, 
ªÆ_t
* 
x
)

27 
	`as£π
 (
x
 || !
n
);

28 i‡(
n
)

29 
	`bzîo
 (
x
, 
n
 *  (
ªÆ_t
));

30 
	}
}

33 
	$ªÆs_c›y
 (
size_t
 
n
, c⁄° 
ªÆ_t
* 
ª°ri˘
 
§c
,Ñól_t*Ñe°ri˘ 
de°
)

35 i‡(
n
) {

36 
	`as£π
 (
§c
);

37 
	`as£π
 (
de°
);

38 
	`mem˝y
 (
de°
, 
§c
, 
n
 *  (
ªÆ_t
));

40 
	}
}

43 
	$ªÆs_‰ì
 (
ªÆ_t
* 
x
)

45 i‡(
x
Ë
	`‰ì
 (x);

46 
	}
}

	@reals.h

8 #i‡!
deföed
 (
INC_REALS_H
)

9 
	#INC_REALS_H


	)

11 #i‡!
deföed
 (
USE_FLOAT
)

13 
	tªÆ_t
;

16 
	tªÆ_t
;

19 
	~<°ddef.h
>

21 #i‡
deföed
 (
__˝lu•lus
)

27 
ªÆ_t
 
x
;

28 
ªÆ_t
 
y
;

29 
ªÆ_t
 
z
;

30 
ªÆ_t
 
w
;

31 } 
	tpoöt4_t
;

34 
ªÆ_t
* 
ªÆs_Æloc
 (
size_t
 
n
);

37 
ªÆs_zîo
 (
size_t
 
n
, 
ªÆ_t
* 
x
);

40 
ªÆs_c›y
 (
size_t
 
n
, c⁄° 
ªÆ_t
* 
ª°ri˘
 
§c
,Ñól_t*Ñe°ri˘ 
de°
);

43 
ªÆs_‰ì
 (
ªÆ_t
* 
x
);

45 #i‡
deföed
 (
__˝lu•lus
)

	@reals_aligned.c

8 
	~<as£π.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

12 
	~<pmmöåö.h
>

13 
	~<mm_mÆloc.h
>

14 
	~"ªÆs_Æig√d.h
"

16 
ªÆ_t
 *

17 
	$ªÆs_Æloc__Æig√d
 (
size_t
 
n
)

19 
ªÆ_t
* 
x
 = 
NULL
;

20 i‡(
n
) {

21 
x
 = (
ªÆ_t
 *)
	`_mm_mÆloc
 (
n
 *  (ªÆ_t), 
IDEAL_ALIGNMENT
);

22 
	`as£π
 (
x
);

24  
x
;

25 
	}
}

28 
	$ªÆs_zîo__Æig√d
 (
size_t
 
n
, 
ªÆ_t
* 
x
)

30 
	`as£π
 (
x
 || !
n
);

31 i‡(
n
) {

32 
size_t
 
i
;

33 
i
 = 0; (i+
SIMD_LEN
Ë<
n
; i += SIMD_LEN)

34 
	`SIMD_STORE
 (
x
+
i
, 
SIMD_ZERO
);

35 i‡(
i
 < 
n
)

36 
	`bzîo
 (
x
+
i
, (
n
-i)* (
ªÆ_t
));

38 
	}
}

41 
	$ªÆs_c›y__Æig√d
 (
size_t
 
n
, c⁄° 
ªÆ_t
* 
ª°ri˘
 
§c
,Ñól_t*Ñe°ri˘ 
de°
)

43 i‡(
n
) {

44 
size_t
 
i
;

45 
	`as£π
 (
§c
);

46 
	`as£π
 (
de°
);

47 
i
 = 0; (i+
SIMD_LEN
Ë<
n
; i += SIMD_LEN)

48 
	`SIMD_STORE
 (
de°
+
i
, 
	`SIMD_LOAD
 (
§c
+i));

49 i‡(
i
 < 
n
)

50 
	`mem˝y
 (
de°
+
i
, 
§c
+i, (
n
-iË*  (
ªÆ_t
));

52 
	}
}

55 
	$ªÆs_c›y__Æig√dS
 (
size_t
 
n
, c⁄° 
ªÆ_t
* 
ª°ri˘
 
§c
,Ñól_t*Ñe°ri˘ 
de°
)

57 i‡(
n
) {

58 
size_t
 
i
;

59 
	`as£π
 (
§c
);

60 
	`as£π
 (
de°
);

61 
i
 = 0; (i+
SIMD_LEN
Ë<
n
; i += SIMD_LEN)

62 
	`SIMD_STORE_U
 (
de°
+
i
, 
	`SIMD_LOAD
 (
§c
+i));

63 i‡(
i
 < 
n
)

64 
	`mem˝y
 (
de°
+
i
, 
§c
+i, (
n
-iË*  (
ªÆ_t
));

66 
	}
}

69 
	$ªÆs_c›y__Æig√dD
 (
size_t
 
n
, c⁄° 
ªÆ_t
* 
ª°ri˘
 
§c
,Ñól_t*Ñe°ri˘ 
de°
)

71 i‡(
n
) {

72 
size_t
 
i
;

73 
	`as£π
 (
§c
);

74 
	`as£π
 (
de°
);

75 
i
 = 0; (i+
SIMD_LEN
Ë<
n
; i += SIMD_LEN)

76 
	`SIMD_STORE
 (
de°
+
i
, 
	`SIMD_LOAD_U
 (
§c
+i));

77 i‡(
i
 < 
n
)

78 
	`mem˝y
 (
de°
+
i
, 
§c
+i, (
n
-iË*  (
ªÆ_t
));

80 
	}
}

83 
	$ªÆs_‰ì__Æig√d
 (
ªÆ_t
* 
x
)

85 i‡(
x
)

86 
	`_mm_‰ì
 (
x
);

87 
	}
}

89 
poöt4_t
 *

90 
	$poöt4_Æloc__Æig√d
 (
size_t
 
n
)

92 
poöt4_t
* 
x
 = 
NULL
;

93 i‡(
n
) {

94 
x
 = (
poöt4_t
 *)
	`_mm_mÆloc
 (
n
 *  (poöt4_t), 
IDEAL_ALIGNMENT
);

95 
	`as£π
 (
x
);

97  
x
;

98 
	}
}

101 
	$poöt4_zîo__Æig√d
 (
size_t
 
n
, 
poöt4_t
* 
P
)

103 
	`bzîo
 (
P
, 
n
 *  (
poöt4_t
));

104 
	}
}

107 
	$poöt4_‰ì__Æig√d
 (
poöt4_t
* 
P
)

109 i‡(
P
)

110 
	`_mm_‰ì
 (
P
);

111 
	}
}

	@reals_aligned.h

8 #i‡!
deföed
 (
INC_REALS_ALIGNED_H
)

9 
	#INC_REALS_ALIGNED_H


	)

11 
	~"ªÆs.h
"

13 #i‡!
deföed
 (
IDEAL_ALIGNMENT
)

15 
	#IDEAL_ALIGNMENT
 16

	)

18 #i‡!
deföed
 (
BEST_ALIGNMENT_ATTR
)

19 
	#BEST_ALIGNMENT_ATTR
 
	`__©åibuã__
 ((
	`Æig√d
 (64)))

	)

21 
	#BEST_ALIGNMENT_ATTR


	)

25 
	#SIMD_LEN
 (
IDEAL_ALIGNMENT
 /  (
ªÆ_t
))

	)

28 
	#DECL_SIMD_ALIGNED
 
	`__de˛•ec
(
	`Æign
(
IDEAL_ALIGNMENT
))

	)

30 #i‡!
deföed
 (
USE_FLOAT
)

31 #i‡!
deföed
 (
__SSE2__
)

34 #i‡!
deföed
 (
USE_NVCC
)

35 
	~<emmöåö.h
>

38 
	#SIMD_REG
 
__m128d


	)

39 
	#SIMD_LOAD
 
_mm_lﬂd_pd


	)

40 
	#SIMD_STORE
 
_mm_°‹e_pd


	)

41 
	#SIMD_LOAD_U
 
_mm_lﬂdu_pd


	)

42 
	#SIMD_STORE_U
 
_mm_°‹eu_pd


	)

43 
	#SIMD_STORE_S
 
_mm_°‹e_sd


	)

44 
	#SIMD_LOAD1
 
_mm_lﬂd1_pd


	)

45 
	#SIMD_SET
 
_mm_£t_pd


	)

46 
	#SIMD_SET1
 
_mm_£t1_pd


	)

47 
	#SIMD_ZERO
 
	`SIMD_SET1
 (0.0)

	)

48 
	#SIMD_SUB
 
_mm_sub_pd


	)

49 
	#SIMD_ADD
 
_mm_add_pd


	)

50 
	#SIMD_MUL
 
_mm_mul_pd


	)

51 
	#SIMD_DIV
 
_mm_div_pd


	)

52 
	#SIMD_XOR
 
_mm_x‹_pd


	)

53 
	#SIMD_ANDNOT
 
_mm_™dnŸ_pd


	)

54 
	#SIMD_SHUFFLE
 
_mm_shufÊe_pd


	)

55 
	#SIMD_SQRT
 
_mm_sqπ_pd


	)

56 
	#SIMD_INV
(
x
Ë
	`SIMD_DIV
 (
	`SIMD_SET1
 (1.0), (x))

	)

57 
	#SIMD_CMPEQ
 
_mm_cm≥q_pd


	)

58 
	#SIMD_CVTD_S
 
_mm_cvçd_ps


	)

59 
	#SIMD_CVTS_D
 
_mm_cvçs_pd


	)

60 
	#SIMD_RSQRT_S
 
_mm_rsqπ_ps


	)

61 
	#SIMD_INV_SQRT_S
(
x
Ë
	`SIMD_CVTS_D
 (
	`SIMD_RSQRT_S
 (
	`SIMD_CVTD_S
(x)))

	)

62 
	#SIMD_INV_SQRT
(
x
Ë
	`SIMD_INV
(
	`SIMD_SQRT
(x))

	)

64 
	#SIMD_SET_1
 
	`SIMD_SET
 (1.0, -1.0)

	)

65 
	#SHUFFLE_0
 
	`_MM_SHUFFLE2
 (0, 0)

	)

66 
	#SHUFFLE_1
 
	`_MM_SHUFFLE2
 (1, 1)

	)

67 
	#SHUFFLE_2
 
	`_MM_SHUFFLE2
 (0, 1)

	)

71 
	#FFT_COMPLEX
 
f·w_com∂ex


	)

72 
	#FFT_PLAN
 
f·w_∂™


	)

74 
	#FFT_CREATE
 
f·w_∂™_m™y_d·_r2c


	)

75 
	#FFT_RE_EXECUTE
 
f·w_execuã_d·_r2c


	)

76 
	#FFT_EXECUTE
 
f·w_execuã


	)

78 
	#IFFT_CREATE
 
f·w_∂™_m™y_d·_c2r


	)

79 
	#IFFT_EXECUTE
 
f·w_execuã


	)

80 
	#IFFT_RE_EXECUTE
 
f·w_execuã_d·_c2r


	)

81 
	#FFT_DESTROY
 
f·w_de°roy_∂™


	)

84 
	#_GESVD
 
DGESVD


	)

85 
	#_AXPY
 
DAXPY


	)

86 
	#_GEMV
 
DGEMV


	)

87 
	#_GEMM
 
DGEMM


	)

90 #i‡!
deföed
 (
USE_NVCC
)

91 
	~<xmmöåö.h
>

94 
	#SIMD_REG
 
__m128


	)

95 
	#SIMD_LOAD
 
_mm_lﬂd_ps


	)

96 
	#SIMD_STORE
 
_mm_°‹e_ps


	)

97 
	#SIMD_STORE_S
 
_mm_°‹e_ss


	)

98 
	#SIMD_LOAD_U
 
_mm_lﬂdu_ps


	)

99 
	#SIMD_STORE_U
 
_mm_°‹eu_ps


	)

100 
	#SIMD_LOAD1
 
_mm_lﬂd1_ps


	)

101 
	#SIMD_SET
 
_mm_£t_ps


	)

102 
	#SIMD_SET1
 
_mm_£t1_ps


	)

103 
	#SIMD_ZERO
 
	`SIMD_SET1
 (0.0)

	)

104 
	#SIMD_SUB
 
_mm_sub_ps


	)

105 
	#SIMD_ADD
 
_mm_add_ps


	)

106 
	#SIMD_MUL
 
_mm_mul_ps


	)

107 
	#SIMD_DIV
 
_mm_div_ps


	)

108 
	#SIMD_SQRT
 
_mm_sqπ_ps


	)

109 
	#SIMD_XOR
 
_mm_x‹_ps


	)

110 
	#SIMD_ANDNOT
 
_mm_™dnŸ_ps


	)

111 
	#SIMD_SHUFFLE
 
_mm_shufÊe_ps


	)

112 
	#SIMD_INV_SQRT
 
_mm_rsqπ_ps


	)

113 
	#SIMD_INV
 
_mm_r˝_ps


	)

114 
	#SIMD_CMPEQ
 
_mm_cm≥q_ps


	)

116 
	#SIMD_SET_1
 
	`SIMD_SET
 (1.0, -1.0, 1.0, -1.0)

	)

117 
	#SHUFFLE_0
 
	`_MM_SHUFFLE
 (2, 2, 0, 0)

	)

118 
	#SHUFFLE_1
 
	`_MM_SHUFFLE
 (3, 3, 1, 1)

	)

119 
	#SHUFFLE_2
 
	`_MM_SHUFFLE
 (2, 3, 0, 1)

	)

123 
	#FFT_COMPLEX
 
f·wf_com∂ex


	)

124 
	#FFT_PLAN
 
f·wf_∂™


	)

126 
	#FFT_CREATE
 
f·wf_∂™_m™y_d·_r2c


	)

127 
	#FFT_RE_EXECUTE
 
f·wf_execuã_d·_r2c


	)

128 
	#FFT_EXECUTE
 
f·wf_execuã


	)

130 
	#IFFT_CREATE
 
f·wf_∂™_m™y_d·_c2r


	)

131 
	#IFFT_EXECUTE
 
f·wf_execuã


	)

132 
	#IFFT_RE_EXECUTE
 
f·wf_execuã_d·_c2r


	)

133 
	#FFT_DESTROY
 
f·wf_de°roy_∂™


	)

136 
	#_GESVD
 
SGESVD


	)

137 
	#_AXPY
 
SAXPY


	)

138 
	#_GEMV
 
SGEMV


	)

139 
	#_GEMM
 
SGEMM


	)

142 
	#PREFETCH_NT
(
addªss
Ë
	`_mm_¥e„tch
(◊ddªss), 
_MM_HINT_NTA
)

	)

146 
	~<°ddef.h
>

148 #i‡
deföed
 (
__˝lu•lus
)

156 
ªÆ_t
* 
ªÆs_Æloc__Æig√d
 (
size_t
 
n
);

159 
ªÆs_zîo__Æig√d
 (
size_t
 
n
, 
ªÆ_t
* 
x
);

165 
ªÆs_c›y__Æig√d
 (
size_t
 
n
, c⁄° 
ªÆ_t
* 
ª°ri˘
 
§c
,Ñól_t*Ñe°ri˘ 
de°
);

171 
ªÆs_c›y__Æig√dS
 (
size_t
 
n
, c⁄° 
ªÆ_t
* 
ª°ri˘
 
§c
,Ñól_t*Ñe°ri˘ 
de°
);

177 
ªÆs_c›y__Æig√dD
 (
size_t
 
n
, c⁄° 
ªÆ_t
* 
ª°ri˘
 
§c
,Ñól_t*Ñe°ri˘ 
de°
);

182 
ªÆs_‰ì__Æig√d
 (
ªÆ_t
* 
x
);

188 
poöt4_t
* 
poöt4_Æloc__Æig√d
 (
size_t
 
n
);

189 
poöt4_zîo__Æig√d
 (
size_t
 
n
, 
poöt4_t
* 
P
);

190 
poöt4_‰ì__Æig√d
 (
poöt4_t
* 
P
);

193 #i‡
deföed
 (
__˝lu•lus
)

	@svdrep.cc

1 
	~<io°ªam
>

2 
	~<c°rög
>

3 
	~<as£π.h
>

4 
	~<m©h.h
>

5 
	~"mkl.h
"

6 
	~"svdªp.h
"

8 
usög
 
«me•a˚
 
	g°d
;

10 
	$c⁄°ru˘
(
SVDRï
 *
svd
, 
ªÆ_t
 
ïsû⁄
,Ñól_t* 
K
, 
m
, 
n
)

12 
k
 = 
	`mö
(
m
, 
n
);

14 
ªÆ_t
* 
tU
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
m
 * 
k
);

15 
ªÆ_t
* 
tS
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
k
);

16 
ªÆ_t
* 
tVT
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
k
 * 
n
);

17 
	`ªÆs_zîo
 (
m
*
k
, 
tU
);

18 
	`ªÆs_zîo
 (
k
, 
tS
);

19 
	`ªÆs_zîo
 (
k
*
n
, 
tVT
);

22 
INFO
;

23 
JOBU
 = 'S';

24 
JOBVT
 = 'S';

26 
wssize
 = 
	`max
(3*
	`mö
(
m
,
n
)+max(m,n), 5*min(m,n));

27 
ªÆ_t
* 
wsbuf
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
wssize
);

28 
	`ªÆs_zîo
 (
wssize
, 
wsbuf
);

29 
	`_GESVD
(&
JOBU
, &
JOBVT
, &
m
, &
n
, 
K
, &m, 
tS
, 
tU
, &m, 
tVT
, &
k
, 
wsbuf
, &
wssize
, &
INFO
); 
	`as£π
(INFO==0);

30 
	`ªÆs_‰ì
 (
wsbuf
);

33 
ªÆ_t
 
cutoff
 = 
ïsû⁄
*
tS
[0];

34 
˙t
=0;

35 
˙t
< 
k
)

36 if(
	`Ábs
(
tS
[
˙t
]Ë>
cutoff
)

37 
˙t
++;

41 
svd
->
m©U
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
m
 * 
˙t
);

42 
svd
->
m©S
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
˙t
);

43 
svd
->
m©VT
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
˙t
 * 
n
);

45 
i
=0; i<
m
; i++) {

46 
j
=0; j<
˙t
; j++) {

47 
svd
->
m©U
[
i
+
j
*
m
] = 
tU
[i+j*m];

50 
i
=0; i<
˙t
; i++) {

51 
svd
->
m©S
[
i
] = 
tS
[i];

55 
i
=0; i<
˙t
; i++) {

56 
j
=0; j<
n
; j++) {

57 
svd
->
m©VT
[
i
+
j
*
˙t
] = 
tVT
[i+j*
k
];

61 
svd
->
m
 = m;

62 
svd
->
n
 =Ç;

63 
svd
->
r
 = 
˙t
;

66 
	}
}

	@svdrep.h

1 #i‚de‡
_SVDREP_H_


2 
	#_SVDREP_H_


	)

4 
	~"ªÆs_Æig√d.h
"

15 
	mm
, 
	mn
, 
	mr
;

17 
ªÆ_t
* 
	mm©U
;

19 
ªÆ_t
* 
	mm©S
;

21 
ªÆ_t
* 
	mm©VT
;

22 } 
	tSVDRï
;

26 
c⁄°ru˘
(
SVDRï
 *
svd
, 
ªÆ_t
 
ïsû⁄
,Ñól_t* 
M
, 
m
, 
n
);

	@trans.cc

1 
	~<°dio.h
>

2 
	~<as£π.h
>

3 
	~<m©h.h
>

5 
	~"å™s.h
"

6 
	~"node.h
"

7 
	~"utû.h
"

8 
	~"ªÆs_Æig√d.h
"

9 
	~"vecm©›.h
"

10 
	~"evÆu©e.h
"

11 
	~"evÆu©e--basic.h
"

14 
	$å™s_£tup
 (
Pos
 *
SP
, Po†*
RP
)

16 
≈
 = 
	`gëív__accuøcy
();

18 
	`compuã_ßmpos
 (
≈
, 1.0, &
SP
[
UE
]);

19 
	`compuã_ßmpos
 (
≈
+2, 3.0, &
SP
[
UC
]);

20 
	`compuã_ßmpos
 (
≈
, 3.0, &
SP
[
DE
]);

21 
	`compuã_ßmpos
 (
≈
, 1.0, &
SP
[
DC
]);

22 
	`compuã_ªgpos
 (
≈
, 1.0, 
RP
);

24 
	}
}

30 
	$compuã_ßmpos
(
≈
, 
ªÆ_t
 
R
, 
Pos
 *
SP
)

32 
i
;

33 
SP
->
n
 = 
≈
*np*np - (np-2)*(np-2)*(np-2);

36 
SP
->
x
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (SP->
n
);

37 
SP
->
y
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (SP->
n
);

38 
SP
->
z
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (SP->
n
);

40 
ªÆ_t
 
°ï
 = 2.0/(
≈
-1);

41 
ªÆ_t
 
öô
 = -1.0;

42 
˙t
 = 0;

43 
i
=0; i<
≈
; i++)

44 
j
=0; j<
≈
; j++)

45 
k
=0; k<
≈
; k++) {

46 if(
i
==0 || i==
≈
-1 || 
j
==0 || j=Úp-1 || 
k
==0 || k==np-1) {

47 
ªÆ_t
 
x
 = 
öô
 + 
i
*
°ï
;

48 
ªÆ_t
 
y
 = 
öô
 + 
j
*
°ï
;

49 
ªÆ_t
 
z
 = 
öô
 + 
k
*
°ï
;

50 
SP
->
x
[
˙t
] = 
R
*x;

51 
SP
->
y
[
˙t
] = 
R
*y;

52 
SP
->
z
[
˙t
] = 
R
*z;

53 
˙t
++;

58 
	}
}

63 
	$compuã_ªgpos
(
≈
, 
ªÆ_t
 
R
, 
Pos
 *
RP
)

65 
RP
->
n
 = 2*
≈
*2*np*2*np;

66 
RP
->
x
 = 
	`ªÆs_Æloc__Æig√d
(RP->
n
);

67 
RP
->
y
 = 
	`ªÆs_Æloc__Æig√d
(RP->
n
);

68 
RP
->
z
 = 
	`ªÆs_Æloc__Æig√d
(RP->
n
);

69 
ªÆ_t
 
°ï
 = 2.0/(
≈
-1);

70 
˙t
 = 0;

71 
k
=0; k<2*
≈
; k++)

72 
j
=0; j<2*
≈
; j++)

73 
i
=0; i<2*
≈
; i++) {

74 
gi
 = (
i
<
≈
) ? i : i-2*np;

75 
gj
 = (
j
<
≈
) ? j : j-2*np;

76 
gk
 = (
k
<
≈
) ? k : k-2*np;

77 
RP
->
x
[
˙t
] = 
R
 * 
gi
*
°ï
;

78 
RP
->
y
[
˙t
] = 
R
 * 
gj
*
°ï
;

79 
RP
->
z
[
˙t
] = 
R
 * 
gk
*
°ï
;

80 
˙t
 ++;

83 
	}
}

89 
	$compuã_loˇÕos
 (
Poöt3
 
˚¡î
, 
ªÆ_t
 
ødius
, 
Node
 *
t
, 
Pos
 *
SP
)

91 
i
;

92 
i
 = 0; i < 
t
->
num_±s
; i++) {

93 
t
->
x
[
i
] = 
˚¡î
[0] + 
ødius
 * 
SP
->x[i];

94 
t
->
y
[
i
] = 
˚¡î
[1] + 
ødius
 * 
SP
->y[i];

95 
t
->
z
[
i
] = 
˚¡î
[2] + 
ødius
 * 
SP
->z[i];

99 
	}
}

105 
	$eff_d©a_size
(
ç
)

107 
≈
 = 
	`gëív__accuøcy
();

108 
effNum
 = (2*
≈
+2)*(2*np)*(2*np);

109 if(
ç
==
UE
 ||Åp==
DE
)

110  
effNum
;

112  
effNum
;

113 
	}
}

118 
ªÆ_t
 
	$Æt
()

120 
≈
 = 
	`gëív__accuøcy
();

121  
	`pow
(0.1, 
≈
+1);

122 
	}
}

127 
	$∂n_size
(
ç
, 
Pos
 *
SP
)

129 
§cDOF
 = 1;

130 
ågDOF
 = 1;

132 i‡(
ç
==
UE
 ||Åp==
DE
)

133  
SP
[
ç
].
n
 * 
§cDOF
;

135  
SP
[
ç
].
n
 * 
ågDOF
;

136 
	}
}

142 
	$compuã_UC2UE_m©
 (
Tøns_m©rix
 *
TM
, 
Pos
 *
SP
)

144 
ªÆ_t
 
R
 = 1;

145 
ªÆ_t
 *
ud2c
;

147 
r
 = 
	`∂n_size
 (
UC
, 
SP
);

148 
c
 = 
	`∂n_size
 (
UE
, 
SP
);

149 
ud2c
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
r
 * 
c
);

151 
ªÆ_t
 
chkPosX
[
SP
[
UC
].
n
]; 
	`ªÆs_zîo
(SP[UC].n, chkPosX); 
	`daxpy
(SP[UC].n, 
R
, SP[UC].
x
, chkPosX) ;

152 
ªÆ_t
 
chkPosY
[
SP
[
UC
].
n
]; 
	`ªÆs_zîo
(SP[UC].n, chkPosY); 
	`daxpy
(SP[UC].n, 
R
, SP[UC].
y
, chkPosY) ;

153 
ªÆ_t
 
chkPosZ
[
SP
[
UC
].
n
]; 
	`ªÆs_zîo
(SP[UC].n, chkPosZ); 
	`daxpy
(SP[UC].n, 
R
, SP[UC].
z
, chkPosZ) ;

155 
ªÆ_t
 
díPosX
[
SP
[
UE
].
n
]; 
	`ªÆs_zîo
(SP[UE].n, díPosX); 
	`daxpy
(SP[UE].n, 
R
, SP[UE].
x
, denPosX) ;

156 
ªÆ_t
 
díPosY
[
SP
[
UE
].
n
]; 
	`ªÆs_zîo
(SP[UE].n, díPosY); 
	`daxpy
(SP[UE].n, 
R
, SP[UE].
y
, denPosY) ;

157 
ªÆ_t
 
díPosZ
[
SP
[
UE
].
n
]; 
	`ªÆs_zîo
(SP[UE].n, díPosZ); 
	`daxpy
(SP[UE].n, 
R
, SP[UE].
z
, denPosZ) ;

159 
	`kî√l
 (
SP
[
UE
].
n
, SP[
UC
].n, 
díPosX
, 
díPosY
, 
díPosZ
, 
chkPosX
 ,
chkPosY
, 
chkPosZ
, 
ud2c
);

161 
TM
->
UC2UE
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
c
 * 
r
);

162 
TM
->
m
 = 
c
;

163 
TM
->
n
 = 
r
;

164 
	`pöv
(
ud2c
, 
	`Æt
(), 
TM
->
UC2UE
, 
r
, 
c
);

167 
	}
}

173 
	$compuã_UE2UC_m©
 (
Index3
 
idx
, 
Tøns_m©rix
 *
TM
, 
Pos
 *
SP
)

175 
ªÆ_t
 
R
 = 1;

176 
ªÆ_t
 *
ue2uc
;

178 
r
 = 
	`∂n_size
 (
UC
, 
SP
);

179 
c
 = 
	`∂n_size
 (
UE
, 
SP
);

180 
ue2uc
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
r
 * 
c
);

182 
ªÆ_t
 
chkPosX
[
SP
[
UC
].
n
]; 
	`ªÆs_zîo
(SP[UC].n, chkPosX); 
	`daxpy
(SP[UC].n, 2.0*
R
, SP[UC].
x
, chkPosX) ;

183 
ªÆ_t
 
chkPosY
[
SP
[
UC
].
n
]; 
	`ªÆs_zîo
(SP[UC].n, chkPosY); 
	`daxpy
(SP[UC].n, 2.0*
R
, SP[UC].
y
, chkPosY) ;

184 
ªÆ_t
 
chkPosZ
[
SP
[
UC
].
n
]; 
	`ªÆs_zîo
(SP[UC].n, chkPosZ); 
	`daxpy
(SP[UC].n, 2.0*
R
, SP[UC].
z
, chkPosZ) ;

185 
ªÆ_t
 
díPosX
[
SP
[
UE
].
n
]; 
	`ªÆs_zîo
(SP[UE].n, díPosX); 
	`daxpy
(SP[UE].n, 
R
, SP[UE].
x
, denPosX) ;

186 
ªÆ_t
 
díPosY
[
SP
[
UE
].
n
]; 
	`ªÆs_zîo
(SP[UE].n, díPosY); 
	`daxpy
(SP[UE].n, 
R
, SP[UE].
y
, denPosY) ;

187 
ªÆ_t
 
díPosZ
[
SP
[
UE
].
n
]; 
	`ªÆs_zîo
(SP[UE].n, díPosZ); 
	`daxpy
(SP[UE].n, 
R
, SP[UE].
z
, denPosZ) ;

190 
j
 = 0; j < 
SP
[
UE
].
n
; j++) {

191 
díPosX
[
j
] = díPosX[j] + (2 * 
	`idx
(0Ë- 1Ë* 
R
;

192 
díPosY
[
j
] = díPosY[j] + (2 * 
	`idx
(1Ë- 1Ë* 
R
;

193 
díPosZ
[
j
] = díPosZ[j] + (2 * 
	`idx
(2Ë- 1Ë* 
R
;

196 
	`kî√l
 (
SP
[
UE
].
n
, SP[
UC
].n, 
díPosX
, 
díPosY
, 
díPosZ
, 
chkPosX
 ,
chkPosY
, 
chkPosZ
, 
ue2uc
);

198 
TM
->
UE2UC
[
	`idx
(2)+idx(1)*2+idx(0)*2*2] = 
ue2uc
;

201 
	}
}

207 
	$compuã_DC2DE_m©
 (
Tøns_m©rix
 *
TM
, 
Pos
 *
SP
)

209 
ªÆ_t
 
R
 = 1;

210 
ªÆ_t
 *
dd2c
;

212 
r
 = 
	`∂n_size
 (
DC
, 
SP
);

213 
c
 = 
	`∂n_size
 (
DE
, 
SP
);

214 
dd2c
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
r
 * 
c
);

216 
ªÆ_t
 
chkPosX
[
SP
[
DC
].
n
]; 
	`ªÆs_zîo
(SP[DC].n, chkPosX); 
	`daxpy
(SP[DC].n, 
R
, SP[DC].
x
, chkPosX) ;

217 
ªÆ_t
 
chkPosY
[
SP
[
DC
].
n
]; 
	`ªÆs_zîo
(SP[DC].n, chkPosY); 
	`daxpy
(SP[DC].n, 
R
, SP[DC].
y
, chkPosY) ;

218 
ªÆ_t
 
chkPosZ
[
SP
[
DC
].
n
]; 
	`ªÆs_zîo
(SP[DC].n, chkPosZ); 
	`daxpy
(SP[DC].n, 
R
, SP[DC].
z
, chkPosZ) ;

220 
ªÆ_t
 
díPosX
[
SP
[
DE
].
n
]; 
	`ªÆs_zîo
(SP[DE].n, díPosX); 
	`daxpy
(SP[DE].n, 
R
, SP[DE].
x
, denPosX) ;

221 
ªÆ_t
 
díPosY
[
SP
[
DE
].
n
]; 
	`ªÆs_zîo
(SP[DE].n, díPosY); 
	`daxpy
(SP[DE].n, 
R
, SP[DE].
y
, denPosY) ;

222 
ªÆ_t
 
díPosZ
[
SP
[
DE
].
n
]; 
	`ªÆs_zîo
(SP[DE].n, díPosZ); 
	`daxpy
(SP[DE].n, 
R
, SP[DE].
z
, denPosZ) ;

224 
	`kî√l
 (
SP
[
DE
].
n
, SP[
DC
].n, 
díPosX
, 
díPosY
, 
díPosZ
, 
chkPosX
 ,
chkPosY
, 
chkPosZ
, 
dd2c
);

225 
TM
->
DC2DE
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
c
 * 
r
);

226 
TM
->
m
 = 
c
;

227 
TM
->
n
 = 
r
;

228 
	`pöv
(
dd2c
, 
	`Æt
(), 
TM
->
DC2DE
, 
r
, 
c
);

231 
	}
}

236 
	$compuã_DE2DC_m©
 (
Index3
 
idx
, 
Tøns_m©rix
 *
TM
, 
Pos
 *
SP
)

238 
ªÆ_t
 
R
 = 1;

239 
ªÆ_t
 *
de2dc
;

241 
r
 = 
	`∂n_size
 (
DC
, 
SP
);

242 
c
 = 
	`∂n_size
 (
DE
, 
SP
);

243 
de2dc
 = (
ªÆ_t
 *Ë
	`ªÆs_Æloc__Æig√d
 (
r
 * 
c
);

245 
ªÆ_t
 
díPosX
[
SP
[
DE
].
n
]; 
	`ªÆs_zîo
(SP[DE].n, díPosX); 
	`daxpy
(SP[DE].n, 
R
, SP[DE].
x
, denPosX) ;

246 
ªÆ_t
 
díPosY
[
SP
[
DE
].
n
]; 
	`ªÆs_zîo
(SP[DE].n, díPosY); 
	`daxpy
(SP[DE].n, 
R
, SP[DE].
y
, denPosY) ;

247 
ªÆ_t
 
díPosZ
[
SP
[
DE
].
n
]; 
	`ªÆs_zîo
(SP[DE].n, díPosZ); 
	`daxpy
(SP[DE].n, 
R
, SP[DE].
z
, denPosZ) ;

248 
ªÆ_t
 
chkPosX
[
SP
[
DC
].
n
]; 
	`ªÆs_zîo
(SP[DC].n, chkPosX); 
	`daxpy
(SP[DC].n, 0.5*
R
, SP[DC].
x
, chkPosX) ;

249 
ªÆ_t
 
chkPosY
[
SP
[
DC
].
n
]; 
	`ªÆs_zîo
(SP[DC].n, chkPosY); 
	`daxpy
(SP[DC].n, 0.5*
R
, SP[DC].
y
, chkPosY) ;

250 
ªÆ_t
 
chkPosZ
[
SP
[
DC
].
n
]; 
	`ªÆs_zîo
(SP[DC].n, chkPosZ); 
	`daxpy
(SP[DC].n, 0.5*
R
, SP[DC].
z
, chkPosZ) ;

253 
j
 = 0; j < 
SP
[
DC
].
n
; j++) {

254 
chkPosX
[
j
] = chkPosX[j] + (
	`idx
(0Ë- 0.5Ë* 
R
;

255 
chkPosY
[
j
] = chkPosY[j] + (
	`idx
(1Ë- 0.5Ë* 
R
;

256 
chkPosZ
[
j
] = chkPosZ[j] + (
	`idx
(2Ë- 0.5Ë* 
R
;

259 
	`kî√l
 (
SP
[
DE
].
n
, SP[
DC
].n, 
díPosX
, 
díPosY
, 
díPosZ
, 
chkPosX
 ,
chkPosY
, 
chkPosZ
, 
de2dc
);

261 
TM
->
DE2DC
[
	`idx
(2)+idx(1)*2+idx(0)*2*2] = 
de2dc
;

264 
	}
}

270 
	$∂nDí2EffDíöô
(
l
, 
ªÆ_t
* 
∂n_dí
,Ñól_t* 
eff_dí
, 
FFT_PLAN
& 
f‹∂™
, 
AŒNodes
 *
AŒ_N
)

272 
§cDOF
 = 1;

273 
Pos
* 
SP
 = 
AŒ_N
->SP;

274 
Pos
* 
RP
 = 
AŒ_N
->RP;

276 
ªÆ_t
* 
ªg_dí
 = 
	`ªÆs_Æloc__Æig√d
(
RP
->
n
*
§cDOF
);

277 
	`ªÆs_zîo
(
RP
->
n
, 
ªg_dí
);

279 
ªÆ_t
* 
tmp_dí
 = 
	`ªÆs_Æloc__Æig√d
(
§cDOF
*
SP
[
UE
].
n
);

280 
	`ªÆs_zîo
(
SP
[
UE
].
n
, 
tmp_dí
);

282 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

283 
ªÆ_t
 
s˛vec
[
§cDOF
];

284 
s
=0; s<
§cDOF
; s++)

285 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

287 
˙t
 = 0;

288 
i
=0; i<
SP
[
UE
].
n
; i++)

289 
s
=0; s<
§cDOF
; s++) {

290 
tmp_dí
[
˙t
] = 
∂n_dí
[˙t] * 
s˛vec
[
s
];

291 
˙t
++;

293 
	`ßmDí2RegDí
 (
tmp_dí
, 
ªg_dí
);

295 
≈
 = 
	`gëív__accuøcy
();

296 
¬n
[3];Ç¬[0] = 2*
≈
;Çnn[1] = 2*np;Çnn[2] = 2*np;

297 
f‹∂™
 = 
	`FFT_CREATE
(3, 
¬n
, 
§cDOF
, 
ªg_dí
, 
NULL
, srcDOF, 1, (
FFT_COMPLEX
*)(
eff_dí
), NULL, srcDOF, 1, 
FFTW_ESTIMATE
);

298 
	`FFT_EXECUTE
(
f‹∂™
);

301 
	}
}

307 
	$∂nDí2EffDí
(
l
, 
ªÆ_t
* 
∂n_dí
,Ñól_t* 
eff_dí
,Ñól_t* 
ªg_dí
,Ñól_t* 
tmp_dí
, 
FFT_PLAN
& 
f‹∂™
, 
AŒNodes
 *
AŒ_N
)

309 
§cDOF
 = 1;

310 
Pos
* 
SP
 = 
AŒ_N
->SP;

311 
Pos
* 
RP
 = 
AŒ_N
->RP;

313 
ªÆ_t
 
degVec
[1]; degVec[0] = 1;

314 
ªÆ_t
 
s˛vec
[
§cDOF
];

315 
s
=0; s<
§cDOF
; s++)

316 
s˛vec
[
s
] = 
	`pow
(2.0, 
l
*
degVec
[s]);

318 
˙t
 = 0;

319 
i
=0; i<
SP
[
UE
].
n
; i++)

320 
s
=0; s<
§cDOF
; s++) {

321 
tmp_dí
[
˙t
] = 
∂n_dí
[˙t] * 
s˛vec
[
s
];

322 
˙t
++;

324 
	`ßmDí2RegDí
 (
tmp_dí
, 
ªg_dí
);

326 
	`FFT_RE_EXECUTE
(
f‹∂™
, 
ªg_dí
, (
FFT_COMPLEX
*)(
eff_dí
));

329 
	}
}

334 
	$ßmDí2RegDí
(c⁄° 
ªÆ_t
* 
ßm_dí
,Ñól_t* 
ªg_dí
)

336 
≈
 = 
	`gëív__accuøcy
();

337 
rgnum
 = 2*
≈
;

338 
§cDOF
 = 1;

339 
˙t
=0;

341 
i
=0; i<
≈
; i++)

342 
j
=0; j<
≈
; j++)

343 
k
=0; k<
≈
; k++) {

344 if(
i
==0 || i==
≈
-1 || 
j
==0 || j=Úp-1 || 
k
==0 || k==np-1) {

346 
rgoff
 = (
k
+
≈
/2)*
rgnum
*rgnum + (
j
+≈/2)*rgnum + (
i
+np/2);

347 
f
=0; f<
§cDOF
; f++) {

348 
ªg_dí
[
§cDOF
*
rgoff
 + 
f
] = 
ßm_dí
[§cDOF*
˙t
 + f];

350 
˙t
++;

355 
	}
}

361 
	$effVÆ2P VÆöô
(
l
, 
ªÆ_t
* 
eff_vÆ
,Ñól_t* 
∂n_vÆ
, 
FFT_PLAN
& 
öv∂™
, 
AŒNodes
 *
AŒ_N
)

363 
ågDOF
 = 1;

364 
≈
 = 
	`gëív__accuøcy
();

365 
Pos
* 
RP
 = 
AŒ_N
->RP;

367 
¬n
[3];Ç¬[0] = 2*
≈
;Çnn[1] = 2*np;Çnn[2] = 2*np;

368 
ªÆ_t
* 
ªg_vÆ
 = 
	`ªÆs_Æloc__Æig√d
(
RP
->
n
*
ågDOF
);

369 
öv∂™
 = 
	`IFFT_CREATE
(3, 
¬n
, 
ågDOF
, (
FFT_COMPLEX
*)(
eff_vÆ
), 
NULL
,ÅrgDOF, 1, 
ªg_vÆ
, NULL,ÅrgDOF, 1, 
FFTW_ESTIMATE
);

370 
	`IFFT_EXECUTE
(
öv∂™
);

372 
	`ªgVÆ2SamVÆ
(
ªg_vÆ
, 
∂n_vÆ
);

375 
	}
}

381 
	$effVÆ2P VÆ
(
l
, 
ªÆ_t
* 
eff_vÆ
,Ñól_t* 
∂n_vÆ
,Ñól_t* 
ªg_vÆ
, 
FFT_PLAN
 
öv∂™
, 
AŒNodes
 *
AŒ_N
)

383 
	`IFFT_RE_EXECUTE
(
öv∂™
, (
FFT_COMPLEX
*)(
eff_vÆ
), 
ªg_vÆ
);

384 
	`ªgVÆ2SamVÆ
(
ªg_vÆ
, 
∂n_vÆ
);

387 
	}
}

393 
	$ªgVÆ2SamVÆ
(c⁄° 
ªÆ_t
* 
ªg_vÆ
,Ñól_t* 
ßm_vÆ
)

395 
≈
 = 
	`gëív__accuøcy
();

396 
rgnum
 = 2*
≈
;

397 
ågDOF
 = 1;

398 
˙t
=0;

400 
i
=0; i<
≈
; i++)

401 
j
=0; j<
≈
; j++)

402 
k
=0; k<
≈
; k++) {

403 if(
i
==0 || i==
≈
-1 || 
j
==0 || j=Úp-1 || 
k
==0 || k==np-1) {

405 
rgoff
 = (
k
+
≈
/2)*
rgnum
*rgnum + (
j
+≈/2)*rgnum + (
i
+np/2);

406 
f
=0; f<
ågDOF
; f++) {

407 
ßm_vÆ
[
ågDOF
*
˙t
 + 
f
] +
ªg_vÆ
[ågDOF*
rgoff
 + f];

409 
˙t
++;

414 
	}
}

	@trans.h

1 #i‚de‡
__TRANS_H__


2 
	#__TRANS_H__


	)

4 
	~"ªÆs.h
"

6 (*
kî√l
)(
¢
, 
ä
, 
ªÆ_t
* 
x1
,Ñól_t* 
x2
,Ñól_t* 
x3
,Ñól_t* 
y1
,Ñól_t* 
y2
,Ñól_t* 
y3
,Ñól_t* 
m©
);

14 íum {
UE
=0, 
UC
=1, 
DE
=2, 
DC
=3,};

17 
ªÆ_t
 *
x
;

18 
ªÆ_t
 *
y
;

19 
ªÆ_t
 *
z
;

20 
n
;

21 } 
	tPos
;

24 
m
, 
n
;

26 
ªÆ_t
 *
UC2UE
;

27 
ªÆ_t
 **
UE2UC
;

28 
ªÆ_t
 **
UE2DC
;

29 
ªÆ_t
 *
DC2DE
;

30 
ªÆ_t
 **
DE2DC
;

31 }
	tTøns_m©rix
;

33 
	~"öput.h
"

34 
	~"node.h
"

36 
	`å™s_£tup
 (
Pos
 *
SP
, Po†*
RP
);

38 
	`∂n_size
(
ç
, 
Pos
 *
SP
);

40 
	`eff_d©a_size
(
ç
);

42 
	`compuã_ßmpos
(
≈
, 
ªÆ_t
 
R
, 
Pos
 *
SP
);

44 
	`compuã_ªgpos
(
≈
, 
ªÆ_t
 
R
, 
Pos
 *
RP
);

46 
	`compuã_loˇÕos
 (
Poöt3
 
˚¡î
, 
ªÆ_t
 
ødius
, 
Node
 *
t
, 
Pos
 *
SP
);

48 
	`compuã_UC2UE_m©
 (
Tøns_m©rix
 *
TM
, 
Pos
 *
SP
);

50 
	`compuã_UE2UC_m©
 (
Index3
 
idx
, 
Tøns_m©rix
 *
TM
, 
Pos
 *
SP
);

52 
	`compuã_DC2DE_m©
 (
Tøns_m©rix
 *
TM
, 
Pos
 *
SP
);

54 
	`compuã_DE2DC_m©
 (
Index3
 
idx
, 
Tøns_m©rix
 *
TM
, 
Pos
 *
SP
);

56 
	`ßmDí2RegDí
(c⁄° 
ªÆ_t
* 
ßm_dí
,Ñól_t* 
ªg_dí
);

58 
	`ªgVÆ2SamVÆ
(c⁄° 
ªÆ_t
* 
ªg_vÆ
,Ñól_t* 
ßm_vÆ
);

	@util.c

1 
	~<as£π.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

6 
	~"utû.h
"

12 
	$gëív__öt
 (c⁄° * 
v¨
, 
deÁu…_vÆue
)

14 
vÆue
 = 
deÁu…_vÆue
;

15 
ãmp
;

16 c⁄° * 
°r_vÆue
;

17 i‡(
v¨
 && (
°r_vÆue
 = 
	`gëív
 (v¨)Ë&& 
	`ssˇnf
 (°r_vÆue, "%d", &
ãmp
))

18 
vÆue
 = 
ãmp
;

19  
vÆue
;

20 
	}
}

26 
	$gëív__Êag
 (c⁄° * 
v¨
, 
deÁu…_vÆue
)

28 
vÆue
 = 
deÁu…_vÆue
;

29 c⁄° * 
°r_vÆue
;

30 i‡(
v¨
 && (
°r_vÆue
 = 
	`gëív
 (var))) {

31 i‡(
	`°rˇ£cmp
 (
°r_vÆue
, "y") == 0

32 || 
	`°rˇ£cmp
 (
°r_vÆue
, "yes") == 0

33 || 
	`°rˇ£cmp
 (
°r_vÆue
, "t") == 0

34 || 
	`°rˇ£cmp
 (
°r_vÆue
, "true") == 0)

35 
vÆue
 = 1;

36 i‡(
	`°rˇ£cmp
 (
°r_vÆue
, "n") == 0

37 || 
	`°rˇ£cmp
 (
°r_vÆue
, "no") == 0

38 || 
	`°rˇ£cmp
 (
°r_vÆue
, "f") == 0

39 || 
	`°rˇ£cmp
 (
°r_vÆue
, "false") == 0)

40 
vÆue
 = 0;

41 i‡(!
	`ssˇnf
 (
°r_vÆue
, "%d", &
vÆue
))

42 
vÆue
 = 
deÁu…_vÆue
;

44  
vÆue
;

45 
	}
}

51 
	gnuma_
 = -1;

54 
	$gëív__numa
 ()

56 i‡(
numa_
 < 0) {

57 c⁄° * 
s
 = 
	`gëív
 ("NUMA");

58 
numa_
 = 1;

59 i‡(
s
) {

60 i‡(
	`°rˇ£cmp
 (
s
, "yes") == 0)

61 
numa_
 = 1;

63 
v
 = 
	`©ﬁ
 (
s
);

64 i‡(
v
 >= 0)

65 
numa_
 = 
v
;

67 
	`Ârötf
 (
°dîr
,

71 
s
, 
numa_
);

76  
numa_
;

77 
	}
}

82 
	g≈_
 = 0;

90 
	$gëív__accuøcy
 ()

92 i‡(!
≈_
) {

93 
≈_
 = 6;

94 c⁄° * 
s
 = 
	`gëív
 ("NP");

95 i‡(
s
) {

96 
t
 = 
	`©of
 (
s
);

97 i‡(
t
 <= 0) {

98 
	`Ârötf
 (
°dîr
, "*** WARNING: NP (=%ldËshould bê>1 ***\n", 
t
);

99 
	`Ârötf
 (
°dîr
, " Usög deÁu… vÆue: %lu\n", ()
≈_
);

102 
≈_
 = (
size_t
)
t
;

105  
≈_
;

106 
	}
}

111 
	gbs_
 = 0;

119 
	$gëív__block_size
 ()

121 i‡(!
bs_
) {

122 
bs_
 = 49;

123 c⁄° * 
s
 = 
	`gëív
 ("BS");

124 i‡(
s
) {

125 
t
 = 
	`©of
 (
s
);

126 i‡(
t
 <= 0) {

127 
	`Ârötf
 (
°dîr
, "*** WARNING: BS (=%ldËshould bê>1 ***\n", 
t
);

128 
	`Ârötf
 (
°dîr
, " Usög deÁu… vÆue: %lu\n", ()
bs_
);

131 
bs_
 = (
size_t
)
t
;

134  
bs_
;

135 
	}
}

140 
	gupbs_
 = 0;

148 
	$gëív__upbs
 ()

150 i‡(!
upbs_
) {

151 
upbs_
 = 1000;

152 c⁄° * 
s
 = 
	`gëív
 ("UPBS");

153 i‡(
s
) {

154 
t
 = 
	`©of
 (
s
);

155 i‡(
t
 <= 0) {

156 
	`Ârötf
 (
°dîr
, "*** WARNING: UPBS (=%ldËshould bê>1 ***\n", 
t
);

157 
	`Ârötf
 (
°dîr
, " Usög deÁu… vÆue: %lu\n", ()
upbs_
);

160 
upbs_
 = (
size_t
)
t
;

163  
upbs_
;

164 
	}
}

169 
	gnum_chk_
 = 0;

177 
	$gëív__vÆid©e
 ()

179 i‡(!
num_chk_
) {

180 
num_chk_
 = 1000;

181 c⁄° * 
s
 = 
	`gëív
 ("NV");

182 i‡(
s
) {

183 
t
 = 
	`©of
 (
s
);

184 i‡(
t
 <= 0) {

185 
	`Ârötf
 (
°dîr
, "*** WARNING: NV (=%ldËshould bê>0 ***\n", 
t
);

186 
	`Ârötf
 (
°dîr
, " Usög deÁu… vÆue: %lu\n", ()
num_chk_
);

189 
num_chk_
 = (
size_t
)
t
;

192  
num_chk_
;

193 
	}
}

198 
	gc_
 = 0;

206 
	$gëív__coöcide
 ()

208 i‡(!
c_
) {

209 
c_
 = 0;

210 c⁄° * 
s
 = 
	`gëív
 ("C");

211 i‡(
s
) {

212 
t
 = 
	`©of
 (
s
);

213 i‡(
t
 < 0 ||Å > 1 ) {

214 
	`Ârötf
 (
°dîr
, "*** WARNING: C (=%ldËshould bê0 o∏1 ***\n", 
t
);

215 
	`Ârötf
 (
°dîr
, " Usög deÁu… vÆue: %lu\n", ()
c_
);

218 
c_
 = (
size_t
)
t
;

221  
c_
;

222 
	}
}

	@util.h

1 #i‡!
deföed
 (
INC_UTIL_H
)

2 
	#INC_UTIL_H


	)

4 #i‡
deföed
 (
__˝lu•lus
)

8 
gëív__öt
 (c⁄° * 
v¨
, 
deÁu…_vÆue
);

9 
gëív__Êag
 (c⁄° * 
v¨
, 
deÁu…_vÆue
);

10 
gëív__numa
 ();

11 
gëív__upbs
 ();

12 
gëív__accuøcy
 ();

13 
gëív__block_size
 ();

14 
gëív__vÆid©e
 ();

15 
gëív__coöcide
 ();

17 #i‡
deföed
 (
__˝lu•lus
)

	@vec3t.h

1 #i‚de‡ 
_VEC3T_H_


2 
	#_VEC3T_H_


	)

3 
	~<io°ªam
>

4 
	~<as£π.h
>

5 
	~"ªÆs.h
"

7 
usög
 
«me•a˚
 
	g°d
;

8 
usög
 
	g°d
::
i°ªam
;

9 
usög
 
	g°d
::
o°ªam
;

10 
usög
 
	g°d
::
mö
;

11 
usög
 
	g°d
::
max
;

15 
	gãm∂©e
 <
˛ass
 
	gF
>

17 ˛as†
	cVec3T
 {

18 
	m¥iv©e
:

20 
F
 
_v
[3];

21 
	mpublic
:

22 íum{ 
X
=0, 
	mY
=1, 
	mZ
=2 };

25 
	$Vec3T
(Ë{ 
_v
[0]=
	`F
(0); _v[1]=F(0); _v[2]=F(0); 
	}
}

27 
	$Vec3T
(
F
 
f
Ë{ 
_v
[0]=f; _v[1]=f; _v[2]=f;
	}
}

29 
	$Vec3T
(c⁄° 
F
* 
f
Ë{ 
_v
[0]=f[0]; _v[1]=f[1]; _v[2]=f[2]; 
	}
}

31 
	$Vec3T
(
F
 
a
,F 
b
,F 
c
Ë{ 
_v
[0]˜; _v[1]=b; _v[2]=c; 
	}
}

33 
	$Vec3T
(c⁄° 
Vec3T
& 
c
){ 
_v
[0]=c._v[0]; _v[1]=c._v[1]; _v[2]=c._v[2]; 
	}
}

35 ~
	$Vec3T
(Ë{
	}
}

38 
›î©‹
 
	gF
*(Ë{  &
	g_v
[0]; }

40 
›î©‹
 c⁄° 
	gF
*(Ëc⁄° {  &
	g_v
[0]; }

42 
F
* 
	$¨øy
(Ë{  &
_v
[0]; 
	}
}

44 
	gF
& 
	$›î©‹
()(
i
Ë{ 
	`as£π
(i<3);  
_v
[i]; 
	}
}

46 c⁄° 
	gF
& 
	$›î©‹
()(
i
Ëc⁄° { 
	`as£π
(i<3);  
_v
[i]; 
	}
}

48 
	gF
& 
	g›î©‹
[](
	gi
Ë{ 
as£π
(
i
<3);  
	g_v
[i]; }

50 c⁄° 
	gF
& 
	g›î©‹
[](
	gi
Ëc⁄° { 
as£π
(
i
<3);  
	g_v
[i]; }

52 
	gF
& 
	$x
(Ë{  
_v
[0];
	}
}

54 
	gF
& 
	$y
(Ë{  
_v
[1];
	}
}

56 
	gF
& 
	$z
(Ë{  
_v
[2];
	}
}

58 c⁄° 
	gF
& 
	$x
(Ëc⁄° {  
_v
[0];
	}
}

60 c⁄° 
	gF
& 
	$y
(Ëc⁄° {  
_v
[1];
	}
}

62 c⁄° 
	gF
& 
	$z
(Ëc⁄° {  
_v
[2];
	}
}

65 
	gVec3T
& 
	g›î©‹
–c⁄° 
Vec3T
& 
c
 ) { 
_v
[0] =c._v[0]; 
	g_v
[1] =c._v[1]; _v[2] =c._v[2];  *
	gthis
; }

67 
	gVec3T
& 
	g›î©‹
+=–c⁄° 
Vec3T
& 
c
 ) { 
_v
[0]+=c._v[0]; 
	g_v
[1]+=c._v[1]; _v[2]+=c._v[2];  *
	gthis
; }

69 
	gVec3T
& 
	g›î©‹
-=–c⁄° 
Vec3T
& 
c
 ) { 
_v
[0]-=c._v[0]; 
	g_v
[1]-=c._v[1]; _v[2]-=c._v[2];  *
	gthis
; }

71 
	gVec3T
& 
	g›î©‹
*=–c⁄° 
F
& 
s
 ) { 
_v
[0]*=s; 
	g_v
[1]*=s; _v[2]*=s;  *
	gthis
; }

73 
	gVec3T
& 
	g›î©‹
/=–c⁄° 
F
& 
s
 ) { 
_v
[0]/=s; 
	g_v
[1]/=s; _v[2]/=s;  *
	gthis
; }

76 
F
 
	$l1
–Ëc⁄° { 
F
 
sum
=
	`F
(0); 
i
=0; i<3; i++Ësum=sum+
	`abs
(
_v
[i]);  sum; 
	}
}

78 
F
 
	$lö·y
–Ëc⁄° { 
F
 
cur
=
	`F
(0); 
i
=0; i<3; i++Ëcur=
	`max
(cur,
	`abs
(
_v
[i]));  cur; 
	}
}

80 
F
 
	$l2
–Ëc⁄° { 
F
 
sum
=
	`F
(0); 
i
=0; i<3; i++Ësum=sum+
_v
[i]*_v[i];  
	`sqπ
(sum); 
	}
}

82 
F
 
	$Àngth
–Ëc⁄° {  
	`l2
(); 
	}
}

84 
Vec3T
 
	$dú
–Ëc⁄° { 
F
 
a
=
	`l2
();  (*
this
)/a; 
	}
}

88 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Vec3T
<
F
>& 
a
, c⁄° 
	gVec3T
<F>& 
	gb
) {

89 
boﬁ
 
	gªs
 = 
åue
; 
	gi
=0; i<3; i++Ëª†
ªs
 && (
a
(
i
)==
b
(i)); Ñes;

92 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Vec3T
<
F
>& 
a
, c⁄° 
	gVec3T
<F>& 
	gb
) {

93  !(
	ga
==
b
);

96 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
boﬁ
 
	g›î©‹
> (c⁄° 
	gVec3T
<F>& 
	ga
, c⁄° Vec3T<F>& 
	gb
) {

97 
boﬁ
 
	gªs
 = 
åue
; 
	gi
=0; i<3; i++Ëª†
ªs
 && (
a
(
i
)> 
b
(i)); Ñes;

100 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
boﬁ
 
	g›î©‹
< (c⁄° 
	gVec3T
<F>& 
	ga
, c⁄° Vec3T<F>& 
	gb
) {

101 
boﬁ
 
	gªs
 = 
åue
; 
	gi
=0; i<3; i++Ëª†
ªs
 && (
a
(
i
)< 
b
(i)); Ñes;

104 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
boﬁ
 
	g›î©‹
>=(c⁄° 
Vec3T
<
F
>& 
a
, c⁄° 
	gVec3T
<F>& 
	gb
) {

105 
boﬁ
 
	gªs
 = 
åue
; 
	gi
=0; i<3; i++Ëª†
ªs
 && (
a
(
i
)>=
b
(i)); Ñes;

108 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
boﬁ
 
	g›î©‹
<=(c⁄° 
Vec3T
<
F
>& 
a
, c⁄° 
	gVec3T
<F>& 
	gb
) {

109 
boﬁ
 
	gªs
 = 
åue
; 
	gi
=0; i<3; i++Ëª†
ªs
 && (
a
(
i
)<=
b
(i)); Ñes;

114 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
	g›î©‹
- (c⁄° Vec3T<F>& 
	ga
) {

115 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = -
a
[i]; Ñ;

118 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
	g›î©‹
+ (c⁄° Vec3T<F>& 
	ga
, c⁄° Vec3T<F>& 
	gb
) {

119 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = 
a
[i]+
b
[i]; Ñ;

122 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
	g›î©‹
- (c⁄° Vec3T<F>& 
	ga
, c⁄° Vec3T<F>& 
	gb
) {

123 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = 
a
[i]-
b
[i]; Ñ;

126 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
	g›î©‹
* (
F
 
	gs˛
, c⁄° Vec3T<F>& 
	ga
) {

127 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = 
s˛
*
a
[i]; Ñ;

130 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
	g›î©‹
* (c⁄° Vec3T<F>& 
	ga
, 
F
 
	gs˛
) {

131 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = 
s˛
*
a
[i]; Ñ;

134 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
	g›î©‹
/ (c⁄° Vec3T<F>& 
	ga
, 
F
 
	gs˛
) {

135 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = 
a
[i]/
s˛
; Ñ;

138 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
F
 
	g›î©‹
* (c⁄° 
	gVec3T
<F>& 
	ga
, c⁄° Vec3T<F>& 
	gb
) {

139 
F
 
	gsum
=F(0); 
	gi
=0; i<3; i++Ësum=
sum
+
a
(
i
)*
b
(i);  sum;

142 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
F
 
dŸ
 (c⁄° 
Vec3T
<F>& 
a
, c⁄° Vec3T<F>& 
b
) {

143  
a
*
	gb
;

146 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
	g›î©‹
^ (c⁄° Vec3T<F>& 
	ga
, c⁄° Vec3T<F>& 
	gb
) {

147  
	gVec3T
<
	gF
>(
a
(1)*
b
(2)-a(2)*b(1),á(2)*b(0)-a(0)*b(2),á(0)*b(1)-a(1)*b(0));

150 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
¸oss
 (c⁄° 
Vec3T
<
F
>& 
a
, c⁄° Vec3T<F>& 
b
) {

151  
	ga
^
	gb
;

155 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
mö
(c⁄° 
Vec3T
<
F
>& 
a
, c⁄° Vec3T<F>& 
b
) {

156 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = 
mö
(
a
[i], 
b
[i]); Ñ;

159 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
max
(c⁄° 
Vec3T
<
F
>& 
a
, c⁄° Vec3T<F>& 
b
) {

160 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = 
max
(
a
[i], 
b
[i]); Ñ;

163 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
abs
(c⁄° 
Vec3T
<
F
>& 
a
) {

164 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = 
abs
(
a
[i]); Ñ;

167 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
ewmul
(c⁄° 
Vec3T
<
F
>&
a
, c⁄° Vec3T<F>& 
b
) {

168 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = 
a
[i]*
b
[i]; Ñ;

171 
	gãm∂©e
 <
˛ass
 
	gF
> 
ölöe
 
	gVec3T
<F> 
ewdiv
(c⁄° 
Vec3T
<
F
>&
a
, c⁄° Vec3T<F>& 
b
) {

172 
	gVec3T
<
	gF
> 
	gr
; 
	gi
=0; i<3; i++Ër[
i
] = 
a
[i]/
b
[i]; Ñ;

176 
	gãm∂©e
 <
˛ass
 
	gF
> 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gis
, 
	gVec3T
<F>& 
	ga
) {

177 
	gi
=0; i<3; i++Ë
	gis
>>
	ga
[
i
];  is;

180 
	gãm∂©e
 <
˛ass
 
	gF
> 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	gos
, c⁄° 
	gVec3T
<F>& 
	ga
) {

181 
	gi
=0; i<3; i++Ë
	gos
<<
	ga
[
i
]<<" ";  os;

187 
	gVec3T
<
	tªÆ_t
> 
	tPoöt3
;

189 
	gVec3T
<> 
	tIndex3
;

	@vecmatop.cc

1 
	~<c°rög
>

2 
	~<°dio.h
>

3 
	~<as£π.h
>

4 
	~"svdªp.h
"

5 
	~"mkl.h
"

6 
	~"vecm©›.h
"

8 
	$daxpy
(
n
, 
ªÆ_t
 
a
,Ñól_t* 
X
,Ñól_t* 
Y
)

10 
öcx
 = 1; 
öcy
 = 1;

11 
	`_AXPY
(&
n
, &
a
, 
X
, &
öcx
, 
Y
, &
öcy
);

13 
	}
}

15 
	$dgemv
(
m
, 
n
, 
ªÆ_t
 
Æpha
,Ñól_t* 
A
,Ñól_t* 
X
,Ñól_à
bëa
,Ñól_t* 
Y
)

17 
å™s
 = 'N';

18 
öcx
 = 1;

19 
öcy
 = 1;

20 
	`_GEMV
(&
å™s
, &
m
, &
n
, &
Æpha
, 
A
, &m, 
X
, &
öcx
, &
bëa
, 
Y
, &
öcy
);

22 
	}
}

24 
	$å™
(c⁄° 
ªÆ_t
* 
M
,Ñól_t* 
R
, 
m
, 
n
)

26 
i
=0; i<
m
; i++) {

27 
j
=0; j<
n
; j++) {

28 
R
[
j
+
i
*
n
] = 
M
[i+j*
m
];

32 
	}
}

34 
	$pöv
(
ªÆ_t
* 
M
,Ñól_à
ïsû⁄
,Ñól_t* 
R
, 
m
, 
n
 )

36 
SVDRï
 *
svd
;

37 
svd
 = (
SVDRï
*Ë
	`mÆloc
 ((SVDRep));

38 
	`as£π
 (
svd
);

41 
	`c⁄°ru˘
(
svd
, 
ïsû⁄
, 
M
, 
m
, 
n
);

43 
cutoff
 = 
ïsû⁄
 * 
svd
->
m©S
[0];

44 
i
=0; i<
svd
->
r
; i++) {

45 if–
svd
->
m©S
[
i
] >
cutoff
) {

46 
svd
->
m©S
[
i
] = 1.0/(svd->matS[i]);

48 
	`as£π
(0);

52 
ªÆ_t
* 
UT
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
svd
->
r
 * svd->
m
);

53 
	`as£π
 (
UT
);

54 
ªÆ_t
* 
V
 = (ªÆ_à*Ë
	`ªÆs_Æloc__Æig√d
 (
svd
->
n
 * svd->
r
);

55 
	`as£π
 (
V
);

57 
	`å™
(
svd
->
m©U
, 
UT
, svd->
m
, svd->
r
);

59 
	`å™
(
svd
->
m©VT
, 
V
, svd->
r
, svd->
n
);

61 
i
=0; i<
svd
->
n
; i++) {

62 
j
=0; j<
svd
->
r
; j++) {

63 
V
[
i
+
j
*
svd
->
n
] = V[i+j*svd->n] * svd->
m©S
[j];

66 
å™ß
 = 'N';

67 
å™sb
 = 'N';

68 
ªÆ_t
 
Æpha
 = 1.0;

69 
ªÆ_t
 
bëa
 = 0.0;

70 
ms
 = 
svd
->
n
;

71 
ns
 = 
svd
->
m
;

72 
ks
 = 
svd
->
r
;

73 
	`_GEMM
(&
å™ß
, &
å™sb
, &
ms
, &
ns
, &
ks
, &
Æpha
,

74 
V
, &
ms
, 
UT
, &
ks
,

75 &
bëa
, 
R
, &
ms
);

78 
	}
}

	@vecmatop.h

1 #i‚de‡
_VECMATOP_H_


2 
	#_VECMATOP_H_


	)

4 
	~"ªÆs_Æig√d.h
"

8 
daxpy
(
n
, 
ªÆ_t
 
a
,Ñól_t* 
X
,Ñól_t* 
Y
);

11 
dgemv
(
m
, 
n
, 
ªÆ_t
 
Æpha
,Ñól_t* 
A
,Ñól_t* 
X
,Ñól_à
bëa
,Ñól_t* 
Y
);

14 
å™
(c⁄° 
ªÆ_t
* 
M
,Ñól_t* 
R
, 
m
, 
n
);

17 
pöv
(
ªÆ_t
* 
M
,Ñól_à
ïsû⁄
,Ñól_t* 
R
, 
m
, 
n
);

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

70 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

75 
__löe
,

76 
__c⁄°
 *
__fun˘i⁄
)

77 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

82 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

86 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 || deföed 
__LDBL_COMPAT
)

102 #ifde‡
__LDBL_COMPAT


104 #ifde‡
__USE_ISOC99


105 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

106 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

107 #ifde‡
__REDIRECT_NTH


108 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

109 
__∆dbl_√xâow¨df
)

110 
	`__©åibuã__
 ((
__c⁄°__
));

111 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

112 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

114 (
__x
, 
__y
),

115 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #unde‡
__MATHDECL_1


123 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

124 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

125 
¨gs
, 
Æüs
)

	)

126 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

127 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

130 #i‚de‡
_Ml⁄g_doubÀ_


131 
	#_Ml⁄g_doubÀ_
 

	)

133 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

134 #ifde‡
__STDC__


135 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

137 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

139 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

140 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

141 
	~<bôs/m©hˇŒs.h
>

142 #unde‡
_MdoubÀ_


143 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


144 #unde‡
_MdoubÀ_END_NAMESPACE


145 #unde‡
__MATH_PRECNAME


150 #unde‡
__MATHDECL_1


151 #unde‡
__MATHDECL


152 #unde‡
__MATHCALL


155 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


157 
signgam
;

162 #ifde‡
__USE_ISOC99


200 
FP_NAN
,

201 
	#FP_NAN
 
FP_NAN


	)

202 
FP_INFINITE
,

203 
	#FP_INFINITE
 
FP_INFINITE


	)

204 
FP_ZERO
,

205 
	#FP_ZERO
 
FP_ZERO


	)

206 
FP_SUBNORMAL
,

207 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

208 
FP_NORMAL


209 
	#FP_NORMAL
 
FP_NORMAL


	)

213 #ifde‡
__NO_LONG_DOUBLE_MATH


214 
	#Â˛assify
(
x
) \

215 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

217 
	#Â˛assify
(
x
) \

218 ( (
x
) ==  () \

219 ? 
	`__Â˛assifyf
 (
x
) \

220 :  (
x
) ==  () \

221 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

225 #ifde‡
__NO_LONG_DOUBLE_MATH


226 
	#signbô
(
x
) \

227 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

229 
	#signbô
(
x
) \

230 ( (
x
) ==  () \

231 ? 
	`__signbôf
 (
x
) \

232 :  (
x
) ==  () \

233 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

237 #ifde‡
__NO_LONG_DOUBLE_MATH


238 
	#isföôe
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

241 
	#isföôe
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__föôef
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

249 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

253 #ifde‡
__NO_LONG_DOUBLE_MATH


254 
	#i¢™
(
x
) \

255 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

257 
	#i¢™
(
x
) \

258 ( (
x
) ==  () \

259 ? 
	`__i¢™f
 (
x
) \

260 :  (
x
) ==  () \

261 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

265 #ifde‡
__NO_LONG_DOUBLE_MATH


266 
	#isöf
(
x
) \

267 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

269 
	#isöf
(
x
) \

270 ( (
x
) ==  () \

271 ? 
	`__isöff
 (
x
) \

272 :  (
x
) ==  () \

273 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

277 
	#MATH_ERRNO
 1

	)

278 
	#MATH_ERREXCEPT
 2

	)

283 #i‚de‡
__FAST_MATH__


284 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

289 #ifdef 
__USE_MISC


293 
_IEEE_
 = -1,

294 
_SVID_
,

295 
_XOPEN_
,

296 
_POSIX_
,

297 
_ISOC_


298 } 
	t_LIB_VERSION_TYPE
;

303 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

307 #ifde‡
__USE_SVID


313 #ifde‡
__˝lu•lus


314 
__ex˚±i⁄


316 
ex˚±i⁄


319 
ty≥
;

320 *
«me
;

321 
¨g1
;

322 
¨g2
;

323 
ªtvÆ
;

324 
	}
};

326 #ifde‡
__˝lu•lus


327 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

329 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

332 
	#X_TLOSS
 1.41484755040568800000e+16

	)

335 
	#DOMAIN
 1

	)

336 
	#SING
 2

	)

337 
	#OVERFLOW
 3

	)

338 
	#UNDERFLOW
 4

	)

339 
	#TLOSS
 5

	)

340 
	#PLOSS
 6

	)

343 
	#HUGE
 3.40282347e+38F

	)

347 #ifde‡
__USE_XOPEN


349 
	#MAXFLOAT
 3.40282347e+38F

	)

356 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


357 
	#M_E
 2.7182818284590452354

	)

358 
	#M_LOG2E
 1.4426950408889634074

	)

359 
	#M_LOG10E
 0.43429448190325182765

	)

360 
	#M_LN2
 0.69314718055994530942

	)

361 
	#M_LN10
 2.30258509299404568402

	)

362 
	#M_PI
 3.14159265358979323846

	)

363 
	#M_PI_2
 1.57079632679489661923

	)

364 
	#M_PI_4
 0.78539816339744830962

	)

365 
	#M_1_PI
 0.31830988618379067154

	)

366 
	#M_2_PI
 0.63661977236758134308

	)

367 
	#M_2_SQRTPI
 1.12837916709551257390

	)

368 
	#M_SQRT2
 1.41421356237309504880

	)

369 
	#M_SQRT1_2
 0.70710678118654752440

	)

375 #ifde‡
__USE_GNU


376 
	#M_El
 2.7182818284590452353602874713526625L

	)

377 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

378 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

379 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

380 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

381 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

382 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

383 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

384 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

385 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

386 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

387 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

388 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

395 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


396 
	#__NO_MATH_INLINES
 1

	)

399 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

406 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

407 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

408 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

409 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

410 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

411 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

415 #ifde‡
__USE_EXTERN_INLINES


416 
	~<bôs/m©hölöe.h
>

419 #ifde‡
__USE_ISOC99


423 #i‚de‡
isgª©î


424 
	#isgª©î
(
x
, 
y
) \

425 (
__exãnsi⁄__
 \

426 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

427 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

431 #i‚de‡
isgª©îequÆ


432 
	#isgª©îequÆ
(
x
, 
y
) \

433 (
__exãnsi⁄__
 \

434 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

435 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

439 #i‚de‡
i¶ess


440 
	#i¶ess
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

447 #i‚de‡
i¶es£quÆ


448 
	#i¶es£quÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

455 #i‚de‡
i¶essgª©î


456 
	#i¶essgª©î
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

463 #i‚de‡
isun‹dîed


464 
	#isun‹dîed
(
u
, 
v
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

467 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

472 
	g__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

168 #ifde‡
__STDC__


170 
	#°dö
 
°dö


	)

171 
	#°dout
 
°dout


	)

172 
	#°dîr
 
°dîr


	)

175 
__BEGIN_NAMESPACE_STD


177 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

179 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

180 
__END_NAMESPACE_STD


182 #ifde‡
__USE_ATFILE


184 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

185 
__c⁄°
 *
__√w
Ë
__THROW
;

188 
__BEGIN_NAMESPACE_STD


193 #i‚de‡
__USE_FILE_OFFSET64


194 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

196 #ifde‡
__REDIRECT


197 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

199 
	#tmpfûe
 
tmpfûe64


	)

203 #ifde‡
__USE_LARGEFILE64


204 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

208 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

209 
__END_NAMESPACE_STD


211 #ifde‡
__USE_MISC


214 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

218 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


226 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

227 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

231 
__BEGIN_NAMESPACE_STD


236 
	`f˛o£
 (
FILE
 *
__°ªam
);

241 
	`fÊush
 (
FILE
 *
__°ªam
);

242 
__END_NAMESPACE_STD


244 #ifde‡
__USE_MISC


251 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

254 #ifde‡
__USE_GNU


261 
	`f˛o£Æl
 ();

265 
__BEGIN_NAMESPACE_STD


266 #i‚de‡
__USE_FILE_OFFSET64


271 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

277 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

278 
__c⁄°
 *
__ª°ri˘
 
__modes
,

279 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifde‡
__REDIRECT


282 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

283 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

284 
__wur
;

285 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

286 
__c⁄°
 *
__ª°ri˘
 
__modes
,

287 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

288 
__wur
;

290 
	#f›í
 
f›í64


	)

291 
	#‰e›í
 
‰e›í64


	)

294 
__END_NAMESPACE_STD


295 #ifde‡
__USE_LARGEFILE64


296 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

298 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
,

300 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 #ifdef 
__USE_POSIX


305 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

308 #ifdef 
__USE_GNU


311 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

312 
__c⁄°
 *
__ª°ri˘
 
__modes
,

313 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

316 #ifde‡
__USE_XOPEN2K8


318 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

319 
__THROW
 
__wur
;

324 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

328 
__BEGIN_NAMESPACE_STD


331 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

335 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

336 
__modes
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifdef 
__USE_BSD


342 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

343 
size_t
 
__size
Ë
__THROW
;

346 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

350 
__BEGIN_NAMESPACE_STD


355 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

356 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	$•rötf
 (*
__ª°ri˘
 
__s
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

370 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

371 
_G_va_li°
 
__¨g
);

376 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

378 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

379 
_G_va_li°
 
__¨g
Ë
__THROW
;

380 
__END_NAMESPACE_STD


382 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


383 
__BEGIN_NAMESPACE_C99


385 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

386 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

387 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

389 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

391 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

392 
__END_NAMESPACE_C99


395 #ifde‡
__USE_GNU


398 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

399 
_G_va_li°
 
__¨g
)

400 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

401 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

402 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

403 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

404 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

405 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

406 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

409 #ifde‡
__USE_XOPEN2K8


416 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

417 
_G_va_li°
 
__¨g
)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

419 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

424 
__BEGIN_NAMESPACE_STD


429 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

430 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

440 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

441 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

442 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

443 #ifde‡
__REDIRECT


447 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

448 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_fsˇnf
Ë
__wur
;

450 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_sˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

453 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

454 
__isoc99_ssˇnf
Ë
__THROW
;

456 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

457 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

458 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

459 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

460 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

461 
	#fsˇnf
 
__isoc99_fsˇnf


	)

462 
	#sˇnf
 
__isoc99_sˇnf


	)

463 
	#ssˇnf
 
__isoc99_ssˇnf


	)

467 
__END_NAMESPACE_STD


469 #ifdef 
__USE_ISOC99


470 
__BEGIN_NAMESPACE_C99


475 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

476 
_G_va_li°
 
__¨g
)

477 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

483 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

484 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

487 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

488 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

489 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

491 #i‡!
deföed
 
__USE_GNU
 \

492 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

493 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

494 #ifde‡
__REDIRECT


498 
	`__REDIRECT
 (
vfsˇnf
,

499 (
FILE
 *
__ª°ri˘
 
__s
,

500 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

501 
__isoc99_vfsˇnf
)

502 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

503 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

504 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

505 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

506 
	`__REDIRECT
 (
vssˇnf
,

507 (
__c⁄°
 *
__ª°ri˘
 
__s
,

508 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

509 
__isoc99_vssˇnf
)

510 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

512 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

513 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

518 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

519 
_G_va_li°
 
__¨g
Ë
__THROW
;

520 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

521 
	#vsˇnf
 
__isoc99_vsˇnf


	)

522 
	#vssˇnf
 
__isoc99_vssˇnf


	)

526 
__END_NAMESPACE_C99


530 
__BEGIN_NAMESPACE_STD


535 
	`fgëc
 (
FILE
 *
__°ªam
);

536 
	`gëc
 (
FILE
 *
__°ªam
);

542 
	`gëch¨
 ();

543 
__END_NAMESPACE_STD


547 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

549 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


554 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

555 
	`gëch¨_u∆ocked
 ();

558 #ifde‡
__USE_MISC


565 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

569 
__BEGIN_NAMESPACE_STD


577 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

578 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

584 
	`putch¨
 (
__c
);

585 
__END_NAMESPACE_STD


589 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

591 #ifde‡
__USE_MISC


598 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

601 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


606 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

607 
	`putch¨_u∆ocked
 (
__c
);

611 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

612 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

614 
	`gëw
 (
FILE
 *
__°ªam
);

617 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

621 
__BEGIN_NAMESPACE_STD


626 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

627 
__wur
;

634 *
	$gës
 (*
__s
Ë
__wur
;

635 
__END_NAMESPACE_STD


637 #ifde‡
__USE_GNU


644 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

645 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

649 #ifdef 
__USE_XOPEN2K8


660 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

661 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

662 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

663 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

664 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

665 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

673 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

674 
size_t
 *
__ª°ri˘
 
__n
,

675 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

679 
__BEGIN_NAMESPACE_STD


684 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

690 
	`puts
 (
__c⁄°
 *
__s
);

697 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

704 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

705 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

710 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

712 
__END_NAMESPACE_STD


714 #ifde‡
__USE_GNU


721 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

722 
FILE
 *
__ª°ri˘
 
__°ªam
);

725 #ifde‡
__USE_MISC


732 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

734 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
__BEGIN_NAMESPACE_STD


744 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

749 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

754 
	`ªwöd
 (
FILE
 *
__°ªam
);

755 
__END_NAMESPACE_STD


762 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


763 #i‚de‡
__USE_FILE_OFFSET64


768 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

773 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

775 #ifde‡
__REDIRECT


776 
	`__REDIRECT
 (
f£eko
,

777 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

778 
f£eko64
);

779 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

781 
	#f£eko
 
f£eko64


	)

782 
	#·ñlo
 
·ñlo64


	)

787 
__BEGIN_NAMESPACE_STD


788 #i‚de‡
__USE_FILE_OFFSET64


793 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

798 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

800 #ifde‡
__REDIRECT


801 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

802 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

803 
	`__REDIRECT
 (
f£ços
,

804 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

806 
	#fgëpos
 
fgëpos64


	)

807 
	#f£ços
 
f£ços64


	)

810 
__END_NAMESPACE_STD


812 #ifde‡
__USE_LARGEFILE64


813 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

814 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

815 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

816 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

819 
__BEGIN_NAMESPACE_STD


821 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

823 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

825 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

826 
__END_NAMESPACE_STD


828 #ifde‡
__USE_MISC


830 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

831 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

832 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 
__BEGIN_NAMESPACE_STD


841 
	`≥º‹
 (
__c⁄°
 *
__s
);

842 
__END_NAMESPACE_STD


848 
	~<bôs/sys_îæi°.h
>

851 #ifdef 
__USE_POSIX


853 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

856 #ifde‡
__USE_MISC


858 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

862 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

863 
deföed
 
__USE_MISC
)

868 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

874 
	`p˛o£
 (
FILE
 *
__°ªam
);

878 #ifdef 
__USE_POSIX


880 *
	$˘îmid
 (*
__s
Ë
__THROW
;

884 #ifde‡
__USE_XOPEN


886 *
	`cu£rid
 (*
__s
);

890 #ifdef 
__USE_GNU


891 
ob°ack
;

894 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

895 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

896 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

897 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

898 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

899 
_G_va_li°
 
__¨gs
)

900 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

904 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


908 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

912 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

915 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

918 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


922 
	#__√ed_gë›t


	)

923 
	~<gë›t.h
>

928 #ifde‡
__USE_EXTERN_INLINES


929 
	~<bôs/°dio.h
>

931 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


932 
	~<bôs/°dio2.h
>

934 #ifde‡
__LDBL_COMPAT


935 
	~<bôs/°dio-ldbl.h
>

938 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 
	~<bôs/w‹dsize.h
>

27 #i‚de‡
__exã∫_ölöe


28 
	#__MATH_INLINE
 
__ölöe


	)

30 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

34 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

37 
__MATH_INLINE
 

38 
__NTH
 (
	$__signbôf
 (
__x
))

40 #i‡
__WORDSIZE
 == 32

41 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

42  
__u
.
__i
 < 0;

44 
__m
;

45 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

46  
__m
 & 0x8;

48 
	}
}

49 
__MATH_INLINE
 

50 
__NTH
 (
	$__signbô
 (
__x
))

52 #i‡
__WORDSIZE
 == 32

53 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

54  
__u
.
__i
[1] < 0;

56 
__m
;

57 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

58  
__m
 & 0x80;

60 
	}
}

61 
__MATH_INLINE
 

62 
__NTH
 (
	$__signbôl
 (
__x
))

64 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

65  (
__u
.
__i
[2] & 0x8000) != 0;

66 
	}
}

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

96 #unde‡
__USE_ISOC99


97 #unde‡
__USE_ISOC95


98 #unde‡
__USE_POSIX


99 #unde‡
__USE_POSIX2


100 #unde‡
__USE_POSIX199309


101 #unde‡
__USE_POSIX199506


102 #unde‡
__USE_XOPEN


103 #unde‡
__USE_XOPEN_EXTENDED


104 #unde‡
__USE_UNIX98


105 #unde‡
__USE_XOPEN2K


106 #unde‡
__USE_XOPEN2KXSI


107 #unde‡
__USE_XOPEN2K8


108 #unde‡
__USE_XOPEN2K8XSI


109 #unde‡
__USE_LARGEFILE


110 #unde‡
__USE_LARGEFILE64


111 #unde‡
__USE_FILE_OFFSET64


112 #unde‡
__USE_BSD


113 #unde‡
__USE_SVID


114 #unde‡
__USE_MISC


115 #unde‡
__USE_ATFILE


116 #unde‡
__USE_GNU


117 #unde‡
__USE_REENTRANT


118 #unde‡
__USE_FORTIFY_LEVEL


119 #unde‡
__FAVOR_BSD


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

129 
	#__USE_ANSI
 1

	)

138 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


139 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

140 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

142 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

147 #i‡
deföed
 
_BSD_SOURCE
 && \

148 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

149 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

150 
	#__FAVOR_BSD
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_POSIX_SOURCE


160 
	#_POSIX_SOURCE
 1

	)

161 #unde‡
_POSIX_C_SOURCE


162 
	#_POSIX_C_SOURCE
 200809L

	)

163 #unde‡
_XOPEN_SOURCE


164 
	#_XOPEN_SOURCE
 700

	)

165 #unde‡
_XOPEN_SOURCE_EXTENDED


166 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

167 #unde‡
_LARGEFILE64_SOURCE


168 
	#_LARGEFILE64_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

180 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

181 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

182 
	#_BSD_SOURCE
 1

	)

183 
	#_SVID_SOURCE
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

192 
	#__USE_ISOC99
 1

	)

196 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

197 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

198 
	#__USE_ISOC95
 1

	)

203 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

204 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

205 
	#_POSIX_SOURCE
 1

	)

206 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

207 
	#_POSIX_C_SOURCE
 2

	)

208 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

209 
	#_POSIX_C_SOURCE
 199506L

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

211 
	#_POSIX_C_SOURCE
 200112L

	)

213 
	#_POSIX_C_SOURCE
 200809L

	)

215 
	#__USE_POSIX_IMPLICITLY
 1

	)

218 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


219 
	#__USE_POSIX
 1

	)

222 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


223 
	#__USE_POSIX2
 1

	)

226 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

227 
	#__USE_POSIX199309
 1

	)

230 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

231 
	#__USE_POSIX199506
 1

	)

234 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

235 
	#__USE_XOPEN2K
 1

	)

236 #unde‡
__USE_ISOC95


237 
	#__USE_ISOC95
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

243 
	#__USE_XOPEN2K8
 1

	)

244 #unde‡
_ATFILE_SOURCE


245 
	#_ATFILE_SOURCE
 1

	)

248 #ifdef 
_XOPEN_SOURCE


249 
	#__USE_XOPEN
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

251 
	#__USE_XOPEN_EXTENDED
 1

	)

252 
	#__USE_UNIX98
 1

	)

253 #unde‡
_LARGEFILE_SOURCE


254 
	#_LARGEFILE_SOURCE
 1

	)

255 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

257 
	#__USE_XOPEN2K8
 1

	)

258 
	#__USE_XOPEN2K8XSI
 1

	)

260 
	#__USE_XOPEN2K
 1

	)

261 
	#__USE_XOPEN2KXSI
 1

	)

262 #unde‡
__USE_ISOC95


263 
	#__USE_ISOC95
 1

	)

264 #unde‡
__USE_ISOC99


265 
	#__USE_ISOC99
 1

	)

268 #ifde‡
_XOPEN_SOURCE_EXTENDED


269 
	#__USE_XOPEN_EXTENDED
 1

	)

274 #ifde‡
_LARGEFILE_SOURCE


275 
	#__USE_LARGEFILE
 1

	)

278 #ifde‡
_LARGEFILE64_SOURCE


279 
	#__USE_LARGEFILE64
 1

	)

282 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

283 
	#__USE_FILE_OFFSET64
 1

	)

286 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


287 
	#__USE_MISC
 1

	)

290 #ifdef 
_BSD_SOURCE


291 
	#__USE_BSD
 1

	)

294 #ifdef 
_SVID_SOURCE


295 
	#__USE_SVID
 1

	)

298 #ifdef 
_ATFILE_SOURCE


299 
	#__USE_ATFILE
 1

	)

302 #ifdef 
_GNU_SOURCE


303 
	#__USE_GNU
 1

	)

306 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


307 
	#__USE_REENTRANT
 1

	)

310 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

311 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

312 #i‡!
__GNUC_PREREQ
 (4, 1)

313 #ifde‡
__GNUC_RH_RELEASE__


314 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


316 
	#__USE_FORTIFY_LEVEL
 0

	)

317 #ñi‡
_FORTIFY_SOURCE
 > 1

318 
	#__USE_FORTIFY_LEVEL
 2

	)

320 
	#__USE_FORTIFY_LEVEL
 1

	)

323 
	#__USE_FORTIFY_LEVEL
 0

	)

327 
	#__STDC_IEC_559__
 1

	)

328 
	#__STDC_IEC_559_COMPLEX__
 1

	)

331 
	#__STDC_ISO_10646__
 200009L

	)

339 #unde‡
__GNU_LIBRARY__


340 
	#__GNU_LIBRARY__
 6

	)

344 
	#__GLIBC__
 2

	)

345 
	#__GLIBC_MINOR__
 12

	)

347 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

348 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

351 #i‡
deföed
 
__GNUC__
 \

352 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

353 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

354 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

355 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

359 #i‚de‡
__ASSEMBLER__


360 #i‚de‡
_SYS_CDEFS_H


361 
	~<sys/cdefs.h
>

366 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


367 
	#__USE_LARGEFILE
 1

	)

368 
	#__USE_LARGEFILE64
 1

	)

374 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

375 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

376 && 
deföed
 
	g__exã∫_ölöe


377 
	#__USE_EXTERN_INLINES
 1

	)

385 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (3,1)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

229 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

231 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

232 
	#__©åibuã_noölöe__


	)

236 #i‡
__GNUC_PREREQ
 (3,2)

237 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

239 
	#__©åibuã_dïªˇãd__


	)

248 #i‡
__GNUC_PREREQ
 (2,8)

249 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

251 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

258 #i‡
__GNUC_PREREQ
 (2,97)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

260 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

262 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

267 #i‡
__GNUC_PREREQ
 (3,3)

268 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

270 
	#__n⁄nuŒ
(
∑øms
)

	)

275 #i‡
__GNUC_PREREQ
 (3,4)

276 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

277 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

278 #i‡
__USE_FORTIFY_LEVEL
 > 0

279 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

282 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

284 #i‚de‡
__wur


285 
	#__wur


	)

289 #i‡
__GNUC_PREREQ
 (3,2)

290 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

292 
	#__Æways_ölöe
 
__ölöe


	)

297 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

298 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

299 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

300 && 
__GNUC_RH_RELEASE__
 >= 31)

301 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


302 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

303 #i‡
__GNUC_PREREQ
 (4,3) \

304 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

305 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

306 && 
__GNUC_RH_RELEASE__
 >= 31)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 \

311 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

314 
	#__exã∫_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__exã∫_Æways_ölöe
 \

317 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

319 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

326 #i‡
__GNUC_PREREQ
 (4,3) \

327 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

328 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

329 && 
__GNUC_RH_RELEASE__
 >= 31)

330 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

331 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

338 #i‡!
__GNUC_PREREQ
 (2,8)

339 
	#__exãnsi⁄__


	)

343 #i‡!
__GNUC_PREREQ
 (2,92)

344 
	#__ª°ri˘


	)

350 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


351 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

353 #ifde‡
__GNUC__


354 
	#__ª°ri˘_¨r


	)

356 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

357 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

360 
	#__ª°ri˘_¨r


	)

365 
	~<bôs/w‹dsize.h
>

367 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


368 
	#__LDBL_COMPAT
 1

	)

369 #ifde‡
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

372 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

373 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

374 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

375 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

376 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

377 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

378 
	#__LDBL_REDIR_DECL
(
«me
) \

379 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

380 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

381 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

386 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


387 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

388 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

389 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

390 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

391 
	#__LDBL_REDIR_DECL
(
«me
)

	)

392 #ifde‡
__REDIRECT


393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

394 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

395 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_MISC


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_MISC


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
__END_DECLS


97 #i‡!
deföed
 
__deföed_sched∑øm
 \

98 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

99 
	#__deföed_sched∑øm
 1

	)

101 
	s__sched_∑øm


103 
__sched_¥i‹ôy
;

105 #unde‡
__√ed_sched∑øm


109 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


110 
	#__˝u_£t_t_deföed


	)

112 
	#__CPU_SETSIZE
 1024

	)

113 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

116 
	t__˝u_mask
;

119 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

120 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

125 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

126 } 
	t˝u_£t_t
;

129 #i‡
	`__GNUC_PREREQ
 (2, 91)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

131 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 
size_t
 
__i
; \

136 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

137 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

138 
__i
 = 0; __ò< 
__imax
; ++__i) \

139 
__bôs
[
__i
] = 0; \

140 
	}
} 0)

	)

142 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

143 (
__exãnsi⁄__
 \

144 ({ 
size_t
 
__˝u
 = (
˝u
); \

145 
__˝u
 < 8 * (
£tsize
) \

146 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

147 |
	`__CPUMASK
 (
__˝u
)) \

148 : 0; }))

	)

149 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

154 &~
	`__CPUMASK
 (
__˝u
)) \

155 : 0; }))

	)

156 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

157 (
__exãnsi⁄__
 \

158 ({ 
size_t
 
__˝u
 = (
˝u
); \

159 
__˝u
 < 8 * (
£tsize
) \

160 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

161 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

162 : 0; }))

	)

164 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

165 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

167 #i‡
__GNUC_PREREQ
 (2, 91)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
__exãnsi⁄__
 \

173 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

174 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 i‡(
__bôs
[
__i
] != __bits[__i]) \

180 
__i
 =
__imax
; }))

	)

183 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

184 (
__exãnsi⁄__
 \

185 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

186 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

187 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

188 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

189 
size_t
 
__i
; \

190 
__i
 = 0; __ò< 
__imax
; ++__i) \

191 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

192 
__de°
; }))

	)

194 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

195 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

196 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

197 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

199 
__BEGIN_DECLS


201 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

202 
__THROW
;

203 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

204 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

206 
__END_DECLS


	@
1
.
1
/usr/include
93
2002
driver.cc
evaluate--basic.cc
evaluate--basic.h
evaluate.cc
evaluate.h
input.cc
input.h
naive.cc
node.h
node_gpu.h
omp.cc
omp_sse.cc
omp_sse_block.cc
omp_sse_no_fusion.cc
omp_sse_no_nr.cc
partial.h
reals.c
reals.h
reals_aligned.c
reals_aligned.h
svdrep.cc
svdrep.h
trans.cc
trans.h
util.c
util.h
vec3t.h
vecmatop.cc
vecmatop.h
/usr/include/assert.h
/usr/include/math.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/time.h
/usr/include/alloca.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/select.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/sys/sysmacros.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
